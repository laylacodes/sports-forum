"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"Internals",{enumerable:true,get:function(){return _internals.default}});Object.defineProperty(exports,"VERSION",{enumerable:true,get:function(){return _version.__VERSION__}});Object.defineProperty(exports,"createTree",{enumerable:true,get:function(){return _create.default}});exports.default=void 0;Object.defineProperty(exports,"html",{enumerable:true,get:function(){return _html.default}});Object.defineProperty(exports,"innerHTML",{enumerable:true,get:function(){return _innerHtml.default}});Object.defineProperty(exports,"outerHTML",{enumerable:true,get:function(){return _outerHtml.default}});Object.defineProperty(exports,"release",{enumerable:true,get:function(){return _release.default}});Object.defineProperty(exports,"toString",{enumerable:true,get:function(){return _toString.default}});Object.defineProperty(exports,"use",{enumerable:true,get:function(){return _use.default}});var _create=_interopRequireDefault(require("./tree/create"));var _parseNewTree=_interopRequireDefault(require("./tasks/parse-new-tree"));var _reconcileTrees=_interopRequireDefault(require("./tasks/reconcile-trees"));var _internals=_interopRequireDefault(require("./util/internals"));var _parse=_interopRequireDefault(require("./util/parse"));var _symbols=require("./util/symbols");var _global=_interopRequireDefault(require("./util/global"));var _innerHtml=_interopRequireDefault(require("./inner-html"));var _outerHtml=_interopRequireDefault(require("./outer-html"));var _toString=_interopRequireDefault(require("./to-string"));var _transaction=require("./transaction");var _html=_interopRequireDefault(require("./html"));var _release=_interopRequireDefault(require("./release"));var _use=_interopRequireDefault(require("./use"));var _version=require("./version");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}// At startup inject the HTML parser into the default set of tasks.
_transaction.defaultTasks.splice(_transaction.defaultTasks.indexOf(_reconcileTrees.default),0,_parseNewTree.default);_internals.default["VERSION"]=_version.__VERSION__;_internals.default["parse"]=_parse.default;// Build up the full public API.
const api={};api["VERSION"]=_version.__VERSION__;api["release"]=_release.default;api["createTree"]=_create.default;api["use"]=_use.default;api["outerHTML"]=_outerHtml.default;api["innerHTML"]=_innerHtml.default;api["toString"]=_toString.default;api["html"]=_html.default;api["Internals"]=_internals.default;// Bind the API into the global scope. Allows middleware and other code to
// reference the core API. Once import maps are more mainstream, we can
// deprecate this.
if(_symbols.$$diffHTML in _global.default){const existingApi=_global.default[_symbols.$$diffHTML];if(_version.__VERSION__!==existingApi["VERSION"]){console.log(`Loaded ${_version.__VERSION__} after ${existingApi.VERSION}`)}}_global.default[_symbols.$$diffHTML]=api;// Automatically hook up to DevTools if they are present.
if(_global.default.devTools){_global.default.unsubscribeDevTools=(0,_use.default)(_global.default.devTools(_internals.default))}var _default=api;exports.default=_default;