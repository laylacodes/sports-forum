"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"Internals",{enumerable:true,get:function(){return _internals.default}});exports.VERSION=void 0;Object.defineProperty(exports,"createTree",{enumerable:true,get:function(){return _create.default}});exports.default=void 0;Object.defineProperty(exports,"html",{enumerable:true,get:function(){return _create.default}});Object.defineProperty(exports,"innerHTML",{enumerable:true,get:function(){return _innerHtml.default}});Object.defineProperty(exports,"outerHTML",{enumerable:true,get:function(){return _outerHtml.default}});Object.defineProperty(exports,"release",{enumerable:true,get:function(){return _release.default}});Object.defineProperty(exports,"use",{enumerable:true,get:function(){return _use.default}});var _create=_interopRequireDefault(require("./tree/create"));var _internals=_interopRequireDefault(require("./util/internals"));var _symbols=require("./util/symbols");var _global=_interopRequireDefault(require("./util/global"));var _innerHtml=_interopRequireDefault(require("./inner-html"));var _outerHtml=_interopRequireDefault(require("./outer-html"));var _release=_interopRequireDefault(require("./release"));var _use=_interopRequireDefault(require("./use"));var _version=require("./version");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const{assign}=Object;const VERSION=`${_version.__VERSION__}-lite`;// Exposes the Internal APIs which may change. Once this project reaches a
// stable version, this will only be able to break between major versions.
exports.VERSION=VERSION;assign(_internals.default,{VERSION});const api={};api.VERSION=VERSION;api.release=_release.default;api.createTree=_create.default;api.use=_use.default;api.outerHTML=_outerHtml.default;api.innerHTML=_innerHtml.default;api.html=_create.default;api.Internals=_internals.default;// Bind the API into the global scope. Allows middleware and other code to
// reference the core API.
if(_symbols.$$diffHTML in _global.default){const existingApi=_global.default[_symbols.$$diffHTML];if(VERSION!==existingApi.VERSION){console.log(`Loaded ${VERSION} after ${existingApi.VERSION}`)}}_global.default[_symbols.$$diffHTML]=api;// Automatically hook up to DevTools if they are present.
if(_global.default.devTools){_global.default.unsubscribeDevTools=(0,_use.default)(_global.default.devTools(_internals.default))}var _default=api;exports.default=_default;