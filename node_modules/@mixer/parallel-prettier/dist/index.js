#!/usr/bin/env node
"use strict";
/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
const cluster = require("cluster");
const commander = require("commander");
const os_1 = require("os");
const prettier = require("prettier");
const { version } = require('../package.json');
function startMaster() {
    const program = commander
        .option('--check, --list-different', 'Whether to list unformatted files, instead of writing them out')
        .option('--write', 'Whether to write files to the output')
        .option('--concurrency [value]', 'Maximum concurrency', String((0, os_1.cpus)().length))
        .option('-q, --quiet', 'If set, pprettier will not output progress')
        .option('--ignore-path [value]', 'Path to an ignore file', '.prettierignore')
        .version(`@mixer/parallel-prettier version ${version} / prettier version ${prettier.version}`)
        .parse(process.argv);
    const opts = program.opts();
    require('./master').spawnWorkers({
        check: opts.listDifferent,
        concurrency: opts.concurrency,
        files: program.args,
        quiet: opts.quiet,
        write: opts.write,
        ignorePath: opts.ignorePath,
    });
}
if (module === require.main && cluster.isMaster) {
    startMaster();
}
else if (cluster.isWorker) {
    require('./worker').startWorker();
}
//# sourceMappingURL=index.js.map