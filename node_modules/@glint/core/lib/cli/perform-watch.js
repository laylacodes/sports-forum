import TransformManager from '../common/transform-manager.js';
import { buildDiagnosticFormatter } from './diagnostics.js';
import { sysForCompilerHost } from './utils/sys-for-compiler-host.js';
import { patchProgramBuilder } from './utils/patch-program.js';
export function performWatch(glintConfig, optionsToExtend) {
    let { ts } = glintConfig;
    let transformManager = new TransformManager(glintConfig);
    let formatDiagnostic = buildDiagnosticFormatter(ts);
    let host = ts.createWatchCompilerHost(glintConfig.configPath, optionsToExtend, sysForCompilerHost(ts, transformManager), patchProgramBuilder(ts, transformManager, ts.createSemanticDiagnosticsBuilderProgram), (diagnostic) => console.error(formatDiagnostic(diagnostic)));
    ts.createWatchProgram(host);
}
//# sourceMappingURL=perform-watch.js.map