{"version":3,"file":"tests.js","sources":["../tests/async-stack-test.ts","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/global.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/prototypes/copy-prototype.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/prototypes/array.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/called-in-order.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/function-name.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/class-name.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/deprecated.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/every.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/order-by-first-call.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/prototypes/function.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/prototypes/map.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/prototypes/object.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/prototypes/set.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/prototypes/string.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/prototypes/index.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/type-detect/type-detect.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/type-of.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/value-to-string.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/@sinonjs/commons/lib/index.js","../../../../../../../../../../Users/david/discourse/backburner.js/node_modules/lolex/src/lolex-src.js","../tests/autorun-test.ts","../tests/bb-has-timers-test.ts","../tests/build-next-test.ts","../tests/cancel-test.ts","../tests/configurable-timeout-test.ts","../tests/debounce-test.ts","../tests/utils/mock-stable-error.ts","../tests/debug-info-test.ts","../tests/debug-test.ts","../tests/defer-debug-info-test.ts","../tests/defer-iterable-test.ts","../tests/defer-once-test.ts","../tests/defer-test.ts","../tests/events-test.ts","../tests/join-test.ts","../tests/later-test.ts","../tests/multi-turn-test.ts","../tests/queue-debug-info-test.ts","../tests/queue-push-unique-test.ts","../tests/queue-test.ts","../tests/run-test.ts","../tests/throttle-test.ts"],"sourcesContent":["import Backburner from 'backburner';\n\nconst skipIfNotSupported = !!console['createTask'] ? QUnit.test : QUnit.skip;\n\nQUnit.module('tests/async_stacks');\n\nQUnit.test('schedule - does not affect normal behaviour', function(assert) {\n  let bb = new Backburner(['one']);\n  let callCount = 0;\n\n  bb.run(() => {\n    bb.schedule('one', () => callCount += 1)\n    bb.schedule('one', () => callCount += 1)\n  });\n  assert.strictEqual(callCount, 2, 'schedule works correctly with ASYNC_STACKS disabled');\n\n  bb.ASYNC_STACKS = true;\n\n  bb.run(() => {\n    bb.schedule('one', () => callCount += 1)\n    bb.schedule('one', () => callCount += 1)\n  });\n  assert.strictEqual(callCount, 4, 'schedule works correctly with ASYNC_STACKS enabled');\n});\n\nskipIfNotSupported('schedule - ASYNC_STACKS flag enables async stack tagging', function(assert) {\n  let bb = new Backburner(['one']);\n\n  bb.schedule('one', () => {});\n\n  assert.true(bb.currentInstance && (bb.currentInstance.queues.one.consoleTaskFor(0) === undefined), 'No consoleTask is stored');\n\n  bb.ASYNC_STACKS = true;\n\n  bb.schedule('one', () => {});\n\n  const task = bb.currentInstance && bb.currentInstance.queues.one.consoleTaskFor(1);\n  assert.true(!!task?.run, 'consoleTask is stored in queue');\n});\n\nQUnit.test('later - ASYNC_STACKS does not affect normal behaviour', function(assert) {\n  let bb = new Backburner(['one']);\n  let done = assert.async();\n  bb.ASYNC_STACKS = true;\n\n  bb.later(() => {\n    assert.true(true, 'timer called')\n    done()\n  });\n});\n\n\nskipIfNotSupported('later - skips async stack when ASYNC_STACKS is false', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['one']);\n\n  bb.later(() => {\n    const task = bb.currentInstance && bb.currentInstance.queues.one.consoleTaskFor(0, true);\n    assert.true(bb.currentInstance && (bb.currentInstance.queues.one.consoleTaskFor(0, true) === undefined), 'consoleTask is not stored')\n    done();\n  });\n});\n\n\nskipIfNotSupported('later - ASYNC_STACKS flag enables async stack tagging', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['one']);\n  bb.ASYNC_STACKS = true;\n\n  bb.later(() => {\n    const task = bb.currentInstance && bb.currentInstance.queues.one.consoleTaskFor(0, true);\n    assert.true(!!task?.run, 'consoleTask is stored in timer queue and then passed to runloop queue')\n    done();\n  });\n});\n","\"use strict\";\n\n/**\n * A reference to the global object\n *\n * @type {object} globalObject\n */\nvar globalObject;\n\n/* istanbul ignore else */\nif (typeof global !== \"undefined\") {\n    // Node\n    globalObject = global;\n} else if (typeof window !== \"undefined\") {\n    // Browser\n    globalObject = window;\n} else {\n    // WebWorker\n    globalObject = self;\n}\n\nmodule.exports = globalObject;\n","\"use strict\";\n\nvar call = Function.call;\n\nmodule.exports = function copyPrototypeMethods(prototype) {\n    // eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\n    return Object.getOwnPropertyNames(prototype).reduce(function(result, name) {\n        // ignore size because it throws from Map\n        if (\n            name !== \"size\" &&\n            name !== \"caller\" &&\n            name !== \"callee\" &&\n            name !== \"arguments\" &&\n            typeof prototype[name] === \"function\"\n        ) {\n            result[name] = call.bind(prototype[name]);\n        }\n\n        return result;\n    }, Object.create(null));\n};\n","\"use strict\";\n\nvar copyPrototype = require(\"./copy-prototype\");\n\nmodule.exports = copyPrototype(Array.prototype);\n","\"use strict\";\n\nvar every = require(\"./prototypes/array\").every;\n\n/**\n * @private\n */\nfunction hasCallsLeft(callMap, spy) {\n    if (callMap[spy.id] === undefined) {\n        callMap[spy.id] = 0;\n    }\n\n    return callMap[spy.id] < spy.callCount;\n}\n\n/**\n * @private\n */\nfunction checkAdjacentCalls(callMap, spy, index, spies) {\n    var calledBeforeNext = true;\n\n    if (index !== spies.length - 1) {\n        calledBeforeNext = spy.calledBefore(spies[index + 1]);\n    }\n\n    if (hasCallsLeft(callMap, spy) && calledBeforeNext) {\n        callMap[spy.id] += 1;\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * A Sinon proxy object (fake, spy, stub)\n *\n * @typedef {object} SinonProxy\n * @property {Function} calledBefore - A method that determines if this proxy was called before another one\n * @property {string} id - Some id\n * @property {number} callCount - Number of times this proxy has been called\n */\n\n/**\n * Returns true when the spies have been called in the order they were supplied in\n *\n * @param  {SinonProxy[] | SinonProxy} spies An array of proxies, or several proxies as arguments\n * @returns {boolean} true when spies are called in order, false otherwise\n */\nfunction calledInOrder(spies) {\n    var callMap = {};\n    // eslint-disable-next-line no-underscore-dangle\n    var _spies = arguments.length > 1 ? arguments : spies;\n\n    return every(_spies, checkAdjacentCalls.bind(null, callMap));\n}\n\nmodule.exports = calledInOrder;\n","\"use strict\";\n\n/**\n * Returns a display name for a function\n *\n * @param  {Function} func\n * @returns {string}\n */\nmodule.exports = function functionName(func) {\n    if (!func) {\n        return \"\";\n    }\n\n    try {\n        return (\n            func.displayName ||\n            func.name ||\n            // Use function decomposition as a last resort to get function\n            // name. Does not rely on function decomposition to work - if it\n            // doesn't debugging will be slightly less informative\n            // (i.e. toString will say 'spy' rather than 'myFunc').\n            (String(func).match(/function ([^\\s(]+)/) || [])[1]\n        );\n    } catch (e) {\n        // Stringify may fail and we might get an exception, as a last-last\n        // resort fall back to empty string.\n        return \"\";\n    }\n};\n","\"use strict\";\n\nvar functionName = require(\"./function-name\");\n\n/**\n * Returns a display name for a value from a constructor\n *\n * @param  {object} value A value to examine\n * @returns {(string|null)} A string or null\n */\nfunction className(value) {\n    return (\n        (value.constructor && value.constructor.name) ||\n        // The next branch is for IE11 support only:\n        // Because the name property is not set on the prototype\n        // of the Function object, we finally try to grab the\n        // name from its definition. This will never be reached\n        // in node, so we are not able to test this properly.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n        (typeof value.constructor === \"function\" &&\n            /* istanbul ignore next */\n            functionName(value.constructor)) ||\n        null\n    );\n}\n\nmodule.exports = className;\n","/* eslint-disable no-console */\n\"use strict\";\n\n/**\n * Returns a function that will invoke the supplied function and print a\n * deprecation warning to the console each time it is called.\n *\n * @param  {Function} func\n * @param  {string} msg\n * @returns {Function}\n */\nexports.wrap = function(func, msg) {\n    var wrapped = function() {\n        exports.printWarning(msg);\n        return func.apply(this, arguments);\n    };\n    if (func.prototype) {\n        wrapped.prototype = func.prototype;\n    }\n    return wrapped;\n};\n\n/**\n * Returns a string which can be supplied to `wrap()` to notify the user that a\n * particular part of the sinon API has been deprecated.\n *\n * @param  {string} packageName\n * @param  {string} funcName\n * @returns {string}\n */\nexports.defaultMsg = function(packageName, funcName) {\n    return (\n        packageName +\n        \".\" +\n        funcName +\n        \" is deprecated and will be removed from the public API in a future version of \" +\n        packageName +\n        \".\"\n    );\n};\n\n/**\n * Prints a warning on the console, when it exists\n *\n * @param  {string} msg\n * @returns {undefined}\n */\nexports.printWarning = function(msg) {\n    /* istanbul ignore next */\n    if (typeof process === \"object\" && process.emitWarning) {\n        // Emit Warnings in Node\n        process.emitWarning(msg);\n    } else if (console.info) {\n        console.info(msg);\n    } else {\n        console.log(msg);\n    }\n};\n","\"use strict\";\n\n/**\n * Returns true when fn returns true for all members of obj.\n * This is an every implementation that works for all iterables\n *\n * @param  {object}   obj\n * @param  {Function} fn\n * @returns {boolean}\n */\nmodule.exports = function every(obj, fn) {\n    var pass = true;\n\n    try {\n        // eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\n        obj.forEach(function() {\n            if (!fn.apply(this, arguments)) {\n                // Throwing an error is the only way to break `forEach`\n                throw new Error();\n            }\n        });\n    } catch (e) {\n        pass = false;\n    }\n\n    return pass;\n};\n","\"use strict\";\n\nvar sort = require(\"./prototypes/array\").sort;\nvar slice = require(\"./prototypes/array\").slice;\n\n/**\n * @private\n */\nfunction comparator(a, b) {\n    // uuid, won't ever be equal\n    var aCall = a.getCall(0);\n    var bCall = b.getCall(0);\n    var aId = (aCall && aCall.callId) || -1;\n    var bId = (bCall && bCall.callId) || -1;\n\n    return aId < bId ? -1 : 1;\n}\n\n/**\n * A Sinon proxy object (fake, spy, stub)\n *\n * @typedef {object} SinonProxy\n * @property {Function} getCall - A method that can return the first call\n */\n\n/**\n * Sorts an array of SinonProxy instances (fake, spy, stub) by their first call\n *\n * @param  {SinonProxy[] | SinonProxy} spies\n * @returns {SinonProxy[]}\n */\nfunction orderByFirstCall(spies) {\n    return sort(slice(spies), comparator);\n}\n\nmodule.exports = orderByFirstCall;\n","\"use strict\";\n\nvar copyPrototype = require(\"./copy-prototype\");\n\nmodule.exports = copyPrototype(Function.prototype);\n","\"use strict\";\n\nvar copyPrototype = require(\"./copy-prototype\");\n\nmodule.exports = copyPrototype(Map.prototype);\n","\"use strict\";\n\nvar copyPrototype = require(\"./copy-prototype\");\n\nmodule.exports = copyPrototype(Object.prototype);\n","\"use strict\";\n\nvar copyPrototype = require(\"./copy-prototype\");\n\nmodule.exports = copyPrototype(Set.prototype);\n","\"use strict\";\n\nvar copyPrototype = require(\"./copy-prototype\");\n\nmodule.exports = copyPrototype(String.prototype);\n","\"use strict\";\n\nmodule.exports = {\n    array: require(\"./array\"),\n    function: require(\"./function\"),\n    map: require(\"./map\"),\n    object: require(\"./object\"),\n    set: require(\"./set\"),\n    string: require(\"./string\")\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.typeDetect = factory());\n}(this, (function () { 'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\n\n/* eslint-disable no-undef */\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\n\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nfunction typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  // Not caching existence of `window` and related properties due to potential\n  // for `window` to be unset before tests in quasi-browser environments.\n  if (typeof window === 'object' && window !== null) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (typeof window.location === 'object' && obj === window.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (typeof window.document === 'object' && obj === window.document) {\n      return 'Document';\n    }\n\n    if (typeof window.navigator === 'object') {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */\n      if (typeof window.navigator.mimeTypes === 'object' &&\n          obj === window.navigator.mimeTypes) {\n        return 'MimeTypeArray';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */\n      if (typeof window.navigator.plugins === 'object' &&\n          obj === window.navigator.plugins) {\n        return 'PluginArray';\n      }\n    }\n\n    if ((typeof window.HTMLElement === 'function' ||\n        typeof window.HTMLElement === 'object') &&\n        obj instanceof window.HTMLElement) {\n      /* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */\n      if (obj.tagName === 'BLOCKQUOTE') {\n        return 'HTMLQuoteElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TD') {\n        return 'HTMLTableDataCellElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TH') {\n        return 'HTMLTableHeaderCellElement';\n      }\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n}\n\nreturn typeDetect;\n\n})));\n","\"use strict\";\n\nvar type = require(\"type-detect\");\n\n/**\n * Returns the lower-case result of running type from type-detect on the value\n *\n * @param  {*} value\n * @returns {string}\n */\nmodule.exports = function typeOf(value) {\n    return type(value).toLowerCase();\n};\n","\"use strict\";\n\n/**\n * Returns a string representation of the value\n *\n * @param  {*} value\n * @returns {string}\n */\nfunction valueToString(value) {\n    if (value && value.toString) {\n        // eslint-disable-next-line @sinonjs/no-prototype-methods/no-prototype-methods\n        return value.toString();\n    }\n    return String(value);\n}\n\nmodule.exports = valueToString;\n","\"use strict\";\n\nmodule.exports = {\n    global: require(\"./global\"),\n    calledInOrder: require(\"./called-in-order\"),\n    className: require(\"./class-name\"),\n    deprecated: require(\"./deprecated\"),\n    every: require(\"./every\"),\n    functionName: require(\"./function-name\"),\n    orderByFirstCall: require(\"./order-by-first-call\"),\n    prototypes: require(\"./prototypes\"),\n    typeOf: require(\"./type-of\"),\n    valueToString: require(\"./value-to-string\")\n};\n","\"use strict\";\n\nvar globalObject = require(\"@sinonjs/commons\").global;\n\n// eslint-disable-next-line complexity\nfunction withGlobal(_global) {\n    var userAgent = _global.navigator && _global.navigator.userAgent;\n    var isRunningInIE = userAgent && userAgent.indexOf(\"MSIE \") > -1;\n    var maxTimeout = Math.pow(2, 31) - 1; //see https://heycam.github.io/webidl/#abstract-opdef-converttoint\n    var NOOP = function() {\n        return undefined;\n    };\n    var NOOP_ARRAY = function() {\n        return [];\n    };\n    var timeoutResult = _global.setTimeout(NOOP, 0);\n    var addTimerReturnsObject = typeof timeoutResult === \"object\";\n    var hrtimePresent =\n        _global.process && typeof _global.process.hrtime === \"function\";\n    var hrtimeBigintPresent =\n        hrtimePresent && typeof _global.process.hrtime.bigint === \"function\";\n    var nextTickPresent =\n        _global.process && typeof _global.process.nextTick === \"function\";\n    var performancePresent =\n        _global.performance && typeof _global.performance.now === \"function\";\n    var hasPerformancePrototype =\n        _global.Performance &&\n        (typeof _global.Performance).match(/^(function|object)$/);\n    var queueMicrotaskPresent = _global.hasOwnProperty(\"queueMicrotask\");\n    var requestAnimationFramePresent =\n        _global.requestAnimationFrame &&\n        typeof _global.requestAnimationFrame === \"function\";\n    var cancelAnimationFramePresent =\n        _global.cancelAnimationFrame &&\n        typeof _global.cancelAnimationFrame === \"function\";\n    var requestIdleCallbackPresent =\n        _global.requestIdleCallback &&\n        typeof _global.requestIdleCallback === \"function\";\n    var cancelIdleCallbackPresent =\n        _global.cancelIdleCallback &&\n        typeof _global.cancelIdleCallback === \"function\";\n    var setImmediatePresent =\n        _global.setImmediate && typeof _global.setImmediate === \"function\";\n\n    // Make properties writable in IE, as per\n    // http://www.adequatelygood.com/Replacing-setTimeout-Globally.html\n    /* eslint-disable no-self-assign */\n    if (isRunningInIE) {\n        _global.setTimeout = _global.setTimeout;\n        _global.clearTimeout = _global.clearTimeout;\n        _global.setInterval = _global.setInterval;\n        _global.clearInterval = _global.clearInterval;\n        _global.Date = _global.Date;\n    }\n\n    // setImmediate is not a standard function\n    // avoid adding the prop to the window object if not present\n    if (setImmediatePresent) {\n        _global.setImmediate = _global.setImmediate;\n        _global.clearImmediate = _global.clearImmediate;\n    }\n    /* eslint-enable no-self-assign */\n\n    _global.clearTimeout(timeoutResult);\n\n    var NativeDate = _global.Date;\n    var uniqueTimerId = 1;\n\n    function isNumberFinite(num) {\n        if (Number.isFinite) {\n            return Number.isFinite(num);\n        }\n\n        if (typeof num !== \"number\") {\n            return false;\n        }\n\n        return isFinite(num);\n    }\n\n    /**\n     * Parse strings like \"01:10:00\" (meaning 1 hour, 10 minutes, 0 seconds) into\n     * number of milliseconds. This is used to support human-readable strings passed\n     * to clock.tick()\n     */\n    function parseTime(str) {\n        if (!str) {\n            return 0;\n        }\n\n        var strings = str.split(\":\");\n        var l = strings.length;\n        var i = l;\n        var ms = 0;\n        var parsed;\n\n        if (l > 3 || !/^(\\d\\d:){0,2}\\d\\d?$/.test(str)) {\n            throw new Error(\n                \"tick only understands numbers, 'm:s' and 'h:m:s'. Each part must be two digits\"\n            );\n        }\n\n        while (i--) {\n            parsed = parseInt(strings[i], 10);\n\n            if (parsed >= 60) {\n                throw new Error(\"Invalid time \" + str);\n            }\n\n            ms += parsed * Math.pow(60, l - i - 1);\n        }\n\n        return ms * 1000;\n    }\n\n    /**\n     * Get the decimal part of the millisecond value as nanoseconds\n     *\n     * @param {Number} msFloat the number of milliseconds\n     * @returns {Number} an integer number of nanoseconds in the range [0,1e6)\n     *\n     * Example: nanoRemainer(123.456789) -> 456789\n     */\n    function nanoRemainder(msFloat) {\n        var modulo = 1e6;\n        var remainder = (msFloat * 1e6) % modulo;\n        var positiveRemainder = remainder < 0 ? remainder + modulo : remainder;\n\n        return Math.floor(positiveRemainder);\n    }\n\n    /**\n     * Used to grok the `now` parameter to createClock.\n     * @param epoch {Date|number} the system time\n     */\n    function getEpoch(epoch) {\n        if (!epoch) {\n            return 0;\n        }\n        if (typeof epoch.getTime === \"function\") {\n            return epoch.getTime();\n        }\n        if (typeof epoch === \"number\") {\n            return epoch;\n        }\n        throw new TypeError(\"now should be milliseconds since UNIX epoch\");\n    }\n\n    function inRange(from, to, timer) {\n        return timer && timer.callAt >= from && timer.callAt <= to;\n    }\n\n    function mirrorDateProperties(target, source) {\n        var prop;\n        for (prop in source) {\n            if (source.hasOwnProperty(prop)) {\n                target[prop] = source[prop];\n            }\n        }\n\n        // set special now implementation\n        if (source.now) {\n            target.now = function now() {\n                return target.clock.now;\n            };\n        } else {\n            delete target.now;\n        }\n\n        // set special toSource implementation\n        if (source.toSource) {\n            target.toSource = function toSource() {\n                return source.toSource();\n            };\n        } else {\n            delete target.toSource;\n        }\n\n        // set special toString implementation\n        target.toString = function toString() {\n            return source.toString();\n        };\n\n        target.prototype = source.prototype;\n        target.parse = source.parse;\n        target.UTC = source.UTC;\n        target.prototype.toUTCString = source.prototype.toUTCString;\n\n        return target;\n    }\n\n    function createDate() {\n        function ClockDate(year, month, date, hour, minute, second, ms) {\n            // the Date constructor called as a function, ref Ecma-262 Edition 5.1, section 15.9.2.\n            // This remains so in the 10th edition of 2019 as well.\n            if (!(this instanceof ClockDate)) {\n                return new NativeDate(ClockDate.clock.now).toString();\n            }\n\n            // if Date is called as a constructor with 'new' keyword\n            // Defensive and verbose to avoid potential harm in passing\n            // explicit undefined when user does not pass argument\n            switch (arguments.length) {\n                case 0:\n                    return new NativeDate(ClockDate.clock.now);\n                case 1:\n                    return new NativeDate(year);\n                case 2:\n                    return new NativeDate(year, month);\n                case 3:\n                    return new NativeDate(year, month, date);\n                case 4:\n                    return new NativeDate(year, month, date, hour);\n                case 5:\n                    return new NativeDate(year, month, date, hour, minute);\n                case 6:\n                    return new NativeDate(\n                        year,\n                        month,\n                        date,\n                        hour,\n                        minute,\n                        second\n                    );\n                default:\n                    return new NativeDate(\n                        year,\n                        month,\n                        date,\n                        hour,\n                        minute,\n                        second,\n                        ms\n                    );\n            }\n        }\n\n        return mirrorDateProperties(ClockDate, NativeDate);\n    }\n\n    function enqueueJob(clock, job) {\n        // enqueues a microtick-deferred task - ecma262/#sec-enqueuejob\n        if (!clock.jobs) {\n            clock.jobs = [];\n        }\n        clock.jobs.push(job);\n    }\n\n    function runJobs(clock) {\n        // runs all microtick-deferred tasks - ecma262/#sec-runjobs\n        if (!clock.jobs) {\n            return;\n        }\n        for (var i = 0; i < clock.jobs.length; i++) {\n            var job = clock.jobs[i];\n            job.func.apply(null, job.args);\n            if (clock.loopLimit && i > clock.loopLimit) {\n                throw new Error(\n                    \"Aborting after running \" +\n                        clock.loopLimit +\n                        \" timers, assuming an infinite loop!\"\n                );\n            }\n        }\n        clock.jobs = [];\n    }\n\n    function addTimer(clock, timer) {\n        if (timer.func === undefined) {\n            throw new Error(\"Callback must be provided to timer calls\");\n        }\n\n        timer.type = timer.immediate ? \"Immediate\" : \"Timeout\";\n\n        if (timer.hasOwnProperty(\"delay\")) {\n            if (!isNumberFinite(timer.delay)) {\n                timer.delay = 0;\n            }\n            timer.delay = timer.delay > maxTimeout ? 1 : timer.delay;\n            timer.delay = Math.max(0, timer.delay);\n        }\n\n        if (timer.hasOwnProperty(\"interval\")) {\n            timer.type = \"Interval\";\n            timer.interval = timer.interval > maxTimeout ? 1 : timer.interval;\n        }\n\n        if (timer.hasOwnProperty(\"animation\")) {\n            timer.type = \"AnimationFrame\";\n            timer.animation = true;\n        }\n\n        if (!clock.timers) {\n            clock.timers = {};\n        }\n\n        timer.id = uniqueTimerId++;\n        timer.createdAt = clock.now;\n        timer.callAt =\n            clock.now + (parseInt(timer.delay) || (clock.duringTick ? 1 : 0));\n\n        clock.timers[timer.id] = timer;\n\n        if (addTimerReturnsObject) {\n            var res = {\n                id: timer.id,\n                ref: function() {\n                    return res;\n                },\n                unref: function() {\n                    return res;\n                },\n                refresh: function() {\n                    return res;\n                }\n            };\n            return res;\n        }\n\n        return timer.id;\n    }\n\n    /* eslint consistent-return: \"off\" */\n    function compareTimers(a, b) {\n        // Sort first by absolute timing\n        if (a.callAt < b.callAt) {\n            return -1;\n        }\n        if (a.callAt > b.callAt) {\n            return 1;\n        }\n\n        // Sort next by immediate, immediate timers take precedence\n        if (a.immediate && !b.immediate) {\n            return -1;\n        }\n        if (!a.immediate && b.immediate) {\n            return 1;\n        }\n\n        // Sort next by creation time, earlier-created timers take precedence\n        if (a.createdAt < b.createdAt) {\n            return -1;\n        }\n        if (a.createdAt > b.createdAt) {\n            return 1;\n        }\n\n        // Sort next by id, lower-id timers take precedence\n        if (a.id < b.id) {\n            return -1;\n        }\n        if (a.id > b.id) {\n            return 1;\n        }\n\n        // As timer ids are unique, no fallback `0` is necessary\n    }\n\n    function firstTimerInRange(clock, from, to) {\n        var timers = clock.timers;\n        var timer = null;\n        var id, isInRange;\n\n        for (id in timers) {\n            if (timers.hasOwnProperty(id)) {\n                isInRange = inRange(from, to, timers[id]);\n\n                if (\n                    isInRange &&\n                    (!timer || compareTimers(timer, timers[id]) === 1)\n                ) {\n                    timer = timers[id];\n                }\n            }\n        }\n\n        return timer;\n    }\n\n    function firstTimer(clock) {\n        var timers = clock.timers;\n        var timer = null;\n        var id;\n\n        for (id in timers) {\n            if (timers.hasOwnProperty(id)) {\n                if (!timer || compareTimers(timer, timers[id]) === 1) {\n                    timer = timers[id];\n                }\n            }\n        }\n\n        return timer;\n    }\n\n    function lastTimer(clock) {\n        var timers = clock.timers;\n        var timer = null;\n        var id;\n\n        for (id in timers) {\n            if (timers.hasOwnProperty(id)) {\n                if (!timer || compareTimers(timer, timers[id]) === -1) {\n                    timer = timers[id];\n                }\n            }\n        }\n\n        return timer;\n    }\n\n    function callTimer(clock, timer) {\n        if (typeof timer.interval === \"number\") {\n            clock.timers[timer.id].callAt += timer.interval;\n        } else {\n            delete clock.timers[timer.id];\n        }\n\n        if (typeof timer.func === \"function\") {\n            timer.func.apply(null, timer.args);\n        } else {\n            /* eslint no-eval: \"off\" */\n            eval(timer.func);\n        }\n    }\n\n    function clearTimer(clock, timerId, ttype) {\n        if (!timerId) {\n            // null appears to be allowed in most browsers, and appears to be\n            // relied upon by some libraries, like Bootstrap carousel\n            return;\n        }\n\n        if (!clock.timers) {\n            clock.timers = {};\n        }\n\n        // in Node, timerId is an object with .ref()/.unref(), and\n        // its .id field is the actual timer id.\n        var id = typeof timerId === \"object\" ? timerId.id : timerId;\n\n        if (clock.timers.hasOwnProperty(id)) {\n            // check that the ID matches a timer of the correct type\n            var timer = clock.timers[id];\n            if (timer.type === ttype) {\n                delete clock.timers[id];\n            } else {\n                var clear =\n                    ttype === \"AnimationFrame\"\n                        ? \"cancelAnimationFrame\"\n                        : \"clear\" + ttype;\n                var schedule =\n                    timer.type === \"AnimationFrame\"\n                        ? \"requestAnimationFrame\"\n                        : \"set\" + timer.type;\n                throw new Error(\n                    \"Cannot clear timer: timer created with \" +\n                        schedule +\n                        \"() but cleared with \" +\n                        clear +\n                        \"()\"\n                );\n            }\n        }\n    }\n\n    function uninstall(clock, target, config) {\n        var method, i, l;\n        var installedHrTime = \"_hrtime\";\n        var installedNextTick = \"_nextTick\";\n\n        for (i = 0, l = clock.methods.length; i < l; i++) {\n            method = clock.methods[i];\n            if (method === \"hrtime\" && target.process) {\n                target.process.hrtime = clock[installedHrTime];\n            } else if (method === \"nextTick\" && target.process) {\n                target.process.nextTick = clock[installedNextTick];\n            } else if (method === \"performance\") {\n                var originalPerfDescriptor = Object.getOwnPropertyDescriptor(\n                    clock,\n                    \"_\" + method\n                );\n                if (\n                    originalPerfDescriptor &&\n                    originalPerfDescriptor.get &&\n                    !originalPerfDescriptor.set\n                ) {\n                    Object.defineProperty(\n                        target,\n                        method,\n                        originalPerfDescriptor\n                    );\n                } else if (originalPerfDescriptor.configurable) {\n                    target[method] = clock[\"_\" + method];\n                }\n            } else {\n                if (target[method] && target[method].hadOwnProperty) {\n                    target[method] = clock[\"_\" + method];\n                    if (\n                        method === \"clearInterval\" &&\n                        config.shouldAdvanceTime === true\n                    ) {\n                        target[method](clock.attachedInterval);\n                    }\n                } else {\n                    try {\n                        delete target[method];\n                    } catch (ignore) {\n                        /* eslint no-empty: \"off\" */\n                    }\n                }\n            }\n        }\n\n        // Prevent multiple executions which will completely remove these props\n        clock.methods = [];\n\n        // return pending timers, to enable checking what timers remained on uninstall\n        if (!clock.timers) {\n            return [];\n        }\n        return Object.keys(clock.timers).map(function mapper(key) {\n            return clock.timers[key];\n        });\n    }\n\n    function hijackMethod(target, method, clock) {\n        var prop;\n        clock[method].hadOwnProperty = Object.prototype.hasOwnProperty.call(\n            target,\n            method\n        );\n        clock[\"_\" + method] = target[method];\n\n        if (method === \"Date\") {\n            var date = mirrorDateProperties(clock[method], target[method]);\n            target[method] = date;\n        } else if (method === \"performance\") {\n            var originalPerfDescriptor = Object.getOwnPropertyDescriptor(\n                target,\n                method\n            );\n            // JSDOM has a read only performance field so we have to save/copy it differently\n            if (\n                originalPerfDescriptor &&\n                originalPerfDescriptor.get &&\n                !originalPerfDescriptor.set\n            ) {\n                Object.defineProperty(\n                    clock,\n                    \"_\" + method,\n                    originalPerfDescriptor\n                );\n\n                var perfDescriptor = Object.getOwnPropertyDescriptor(\n                    clock,\n                    method\n                );\n                Object.defineProperty(target, method, perfDescriptor);\n            } else {\n                target[method] = clock[method];\n            }\n        } else {\n            target[method] = function() {\n                return clock[method].apply(clock, arguments);\n            };\n\n            for (prop in clock[method]) {\n                if (clock[method].hasOwnProperty(prop)) {\n                    target[method][prop] = clock[method][prop];\n                }\n            }\n        }\n\n        target[method].clock = clock;\n    }\n\n    function doIntervalTick(clock, advanceTimeDelta) {\n        clock.tick(advanceTimeDelta);\n    }\n\n    var timers = {\n        setTimeout: _global.setTimeout,\n        clearTimeout: _global.clearTimeout,\n        setInterval: _global.setInterval,\n        clearInterval: _global.clearInterval,\n        Date: _global.Date\n    };\n\n    if (setImmediatePresent) {\n        timers.setImmediate = _global.setImmediate;\n        timers.clearImmediate = _global.clearImmediate;\n    }\n\n    if (hrtimePresent) {\n        timers.hrtime = _global.process.hrtime;\n    }\n\n    if (nextTickPresent) {\n        timers.nextTick = _global.process.nextTick;\n    }\n\n    if (performancePresent) {\n        timers.performance = _global.performance;\n    }\n\n    if (requestAnimationFramePresent) {\n        timers.requestAnimationFrame = _global.requestAnimationFrame;\n    }\n\n    if (queueMicrotaskPresent) {\n        timers.queueMicrotask = true;\n    }\n\n    if (cancelAnimationFramePresent) {\n        timers.cancelAnimationFrame = _global.cancelAnimationFrame;\n    }\n\n    if (requestIdleCallbackPresent) {\n        timers.requestIdleCallback = _global.requestIdleCallback;\n    }\n\n    if (cancelIdleCallbackPresent) {\n        timers.cancelIdleCallback = _global.cancelIdleCallback;\n    }\n\n    var keys =\n        Object.keys ||\n        function(obj) {\n            var ks = [];\n            var key;\n\n            for (key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    ks.push(key);\n                }\n            }\n\n            return ks;\n        };\n\n    var originalSetTimeout = _global.setImmediate || _global.setTimeout;\n\n    /**\n     * @param start {Date|number} the system time - non-integer values are floored\n     * @param loopLimit {number}  maximum number of timers that will be run when calling runAll()\n     */\n    function createClock(start, loopLimit) {\n        // eslint-disable-next-line no-param-reassign\n        start = Math.floor(getEpoch(start));\n        // eslint-disable-next-line no-param-reassign\n        loopLimit = loopLimit || 1000;\n        var nanos = 0;\n        var adjustedSystemTime = [0, 0]; // [millis, nanoremainder]\n\n        if (NativeDate === undefined) {\n            throw new Error(\n                \"The global scope doesn't have a `Date` object\" +\n                    \" (see https://github.com/sinonjs/sinon/issues/1852#issuecomment-419622780)\"\n            );\n        }\n\n        var clock = {\n            now: start,\n            timeouts: {},\n            Date: createDate(),\n            loopLimit: loopLimit\n        };\n\n        clock.Date.clock = clock;\n\n        function getTimeToNextFrame() {\n            return 16 - ((clock.now - start) % 16);\n        }\n\n        function hrtime(prev) {\n            var millisSinceStart = clock.now - adjustedSystemTime[0] - start;\n            var secsSinceStart = Math.floor(millisSinceStart / 1000);\n            var remainderInNanos =\n                (millisSinceStart - secsSinceStart * 1e3) * 1e6 +\n                nanos -\n                adjustedSystemTime[1];\n\n            if (Array.isArray(prev)) {\n                if (prev[1] > 1e9) {\n                    throw new TypeError(\n                        \"Number of nanoseconds can't exceed a billion\"\n                    );\n                }\n\n                var oldSecs = prev[0];\n                var nanoDiff = remainderInNanos - prev[1];\n                var secDiff = secsSinceStart - oldSecs;\n\n                if (nanoDiff < 0) {\n                    nanoDiff += 1e9;\n                    secDiff -= 1;\n                }\n\n                return [secDiff, nanoDiff];\n            }\n            return [secsSinceStart, remainderInNanos];\n        }\n\n        if (hrtimeBigintPresent) {\n            hrtime.bigint = function() {\n                var parts = hrtime();\n                return BigInt(parts[0]) * BigInt(1e9) + BigInt(parts[1]); // eslint-disable-line\n            };\n        }\n\n        clock.requestIdleCallback = function requestIdleCallback(\n            func,\n            timeout\n        ) {\n            var timeToNextIdlePeriod = 0;\n\n            if (clock.countTimers() > 0) {\n                timeToNextIdlePeriod = 50; // const for now\n            }\n\n            var result = addTimer(clock, {\n                func: func,\n                args: Array.prototype.slice.call(arguments, 2),\n                delay:\n                    typeof timeout === \"undefined\"\n                        ? timeToNextIdlePeriod\n                        : Math.min(timeout, timeToNextIdlePeriod)\n            });\n\n            return result.id || result;\n        };\n\n        clock.cancelIdleCallback = function cancelIdleCallback(timerId) {\n            return clearTimer(clock, timerId, \"Timeout\");\n        };\n\n        clock.setTimeout = function setTimeout(func, timeout) {\n            return addTimer(clock, {\n                func: func,\n                args: Array.prototype.slice.call(arguments, 2),\n                delay: timeout\n            });\n        };\n\n        clock.clearTimeout = function clearTimeout(timerId) {\n            return clearTimer(clock, timerId, \"Timeout\");\n        };\n\n        clock.nextTick = function nextTick(func) {\n            return enqueueJob(clock, {\n                func: func,\n                args: Array.prototype.slice.call(arguments, 1)\n            });\n        };\n\n        clock.queueMicrotask = function queueMicrotask(func) {\n            return clock.nextTick(func); // explicitly drop additional arguments\n        };\n\n        clock.setInterval = function setInterval(func, timeout) {\n            // eslint-disable-next-line no-param-reassign\n            timeout = parseInt(timeout, 10);\n            return addTimer(clock, {\n                func: func,\n                args: Array.prototype.slice.call(arguments, 2),\n                delay: timeout,\n                interval: timeout\n            });\n        };\n\n        clock.clearInterval = function clearInterval(timerId) {\n            return clearTimer(clock, timerId, \"Interval\");\n        };\n\n        if (setImmediatePresent) {\n            clock.setImmediate = function setImmediate(func) {\n                return addTimer(clock, {\n                    func: func,\n                    args: Array.prototype.slice.call(arguments, 1),\n                    immediate: true\n                });\n            };\n\n            clock.clearImmediate = function clearImmediate(timerId) {\n                return clearTimer(clock, timerId, \"Immediate\");\n            };\n        }\n\n        clock.countTimers = function countTimers() {\n            return (\n                Object.keys(clock.timers || {}).length +\n                (clock.jobs || []).length\n            );\n        };\n\n        clock.requestAnimationFrame = function requestAnimationFrame(func) {\n            var result = addTimer(clock, {\n                func: func,\n                delay: getTimeToNextFrame(),\n                args: [clock.now + getTimeToNextFrame()],\n                animation: true\n            });\n\n            return result.id || result;\n        };\n\n        clock.cancelAnimationFrame = function cancelAnimationFrame(timerId) {\n            return clearTimer(clock, timerId, \"AnimationFrame\");\n        };\n\n        clock.runMicrotasks = function runMicrotasks() {\n            runJobs(clock);\n        };\n\n        function doTick(tickValue, isAsync, resolve, reject) {\n            var msFloat =\n                typeof tickValue === \"number\"\n                    ? tickValue\n                    : parseTime(tickValue);\n            var ms = Math.floor(msFloat);\n            var remainder = nanoRemainder(msFloat);\n            var nanosTotal = nanos + remainder;\n            var tickTo = clock.now + ms;\n\n            if (msFloat < 0) {\n                throw new TypeError(\"Negative ticks are not supported\");\n            }\n\n            // adjust for positive overflow\n            if (nanosTotal >= 1e6) {\n                tickTo += 1;\n                nanosTotal -= 1e6;\n            }\n\n            nanos = nanosTotal;\n            var tickFrom = clock.now;\n            var previous = clock.now;\n            var timer,\n                firstException,\n                oldNow,\n                nextPromiseTick,\n                compensationCheck,\n                postTimerCall;\n\n            clock.duringTick = true;\n\n            // perform microtasks\n            oldNow = clock.now;\n            runJobs(clock);\n            if (oldNow !== clock.now) {\n                // compensate for any setSystemTime() call during microtask callback\n                tickFrom += clock.now - oldNow;\n                tickTo += clock.now - oldNow;\n            }\n\n            function doTickInner() {\n                // perform each timer in the requested range\n                timer = firstTimerInRange(clock, tickFrom, tickTo);\n                // eslint-disable-next-line no-unmodified-loop-condition\n                while (timer && tickFrom <= tickTo) {\n                    if (clock.timers[timer.id]) {\n                        tickFrom = timer.callAt;\n                        clock.now = timer.callAt;\n                        oldNow = clock.now;\n                        try {\n                            runJobs(clock);\n                            callTimer(clock, timer);\n                        } catch (e) {\n                            firstException = firstException || e;\n                        }\n\n                        if (isAsync) {\n                            // finish up after native setImmediate callback to allow\n                            // all native es6 promises to process their callbacks after\n                            // each timer fires.\n                            originalSetTimeout(nextPromiseTick);\n                            return;\n                        }\n\n                        compensationCheck();\n                    }\n\n                    postTimerCall();\n                }\n\n                // perform process.nextTick()s again\n                oldNow = clock.now;\n                runJobs(clock);\n                if (oldNow !== clock.now) {\n                    // compensate for any setSystemTime() call during process.nextTick() callback\n                    tickFrom += clock.now - oldNow;\n                    tickTo += clock.now - oldNow;\n                }\n                clock.duringTick = false;\n\n                // corner case: during runJobs new timers were scheduled which could be in the range [clock.now, tickTo]\n                timer = firstTimerInRange(clock, tickFrom, tickTo);\n                if (timer) {\n                    try {\n                        clock.tick(tickTo - clock.now); // do it all again - for the remainder of the requested range\n                    } catch (e) {\n                        firstException = firstException || e;\n                    }\n                } else {\n                    // no timers remaining in the requested range: move the clock all the way to the end\n                    clock.now = tickTo;\n\n                    // update nanos\n                    nanos = nanosTotal;\n                }\n                if (firstException) {\n                    throw firstException;\n                }\n\n                if (isAsync) {\n                    resolve(clock.now);\n                } else {\n                    return clock.now;\n                }\n            }\n\n            nextPromiseTick =\n                isAsync &&\n                function() {\n                    try {\n                        compensationCheck();\n                        postTimerCall();\n                        doTickInner();\n                    } catch (e) {\n                        reject(e);\n                    }\n                };\n\n            compensationCheck = function() {\n                // compensate for any setSystemTime() call during timer callback\n                if (oldNow !== clock.now) {\n                    tickFrom += clock.now - oldNow;\n                    tickTo += clock.now - oldNow;\n                    previous += clock.now - oldNow;\n                }\n            };\n\n            postTimerCall = function() {\n                timer = firstTimerInRange(clock, previous, tickTo);\n                previous = tickFrom;\n            };\n\n            return doTickInner();\n        }\n\n        /**\n         * @param {tickValue} {String|Number} number of milliseconds or a human-readable value like \"01:11:15\"\n         */\n        clock.tick = function tick(tickValue) {\n            return doTick(tickValue, false);\n        };\n\n        if (typeof _global.Promise !== \"undefined\") {\n            clock.tickAsync = function tickAsync(ms) {\n                return new _global.Promise(function(resolve, reject) {\n                    originalSetTimeout(function() {\n                        try {\n                            doTick(ms, true, resolve, reject);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n            };\n        }\n\n        clock.next = function next() {\n            runJobs(clock);\n            var timer = firstTimer(clock);\n            if (!timer) {\n                return clock.now;\n            }\n\n            clock.duringTick = true;\n            try {\n                clock.now = timer.callAt;\n                callTimer(clock, timer);\n                runJobs(clock);\n                return clock.now;\n            } finally {\n                clock.duringTick = false;\n            }\n        };\n\n        if (typeof _global.Promise !== \"undefined\") {\n            clock.nextAsync = function nextAsync() {\n                return new _global.Promise(function(resolve, reject) {\n                    originalSetTimeout(function() {\n                        try {\n                            var timer = firstTimer(clock);\n                            if (!timer) {\n                                resolve(clock.now);\n                                return;\n                            }\n\n                            var err;\n                            clock.duringTick = true;\n                            clock.now = timer.callAt;\n                            try {\n                                callTimer(clock, timer);\n                            } catch (e) {\n                                err = e;\n                            }\n                            clock.duringTick = false;\n\n                            originalSetTimeout(function() {\n                                if (err) {\n                                    reject(err);\n                                } else {\n                                    resolve(clock.now);\n                                }\n                            });\n                        } catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n            };\n        }\n\n        clock.runAll = function runAll() {\n            var numTimers, i;\n            runJobs(clock);\n            for (i = 0; i < clock.loopLimit; i++) {\n                if (!clock.timers) {\n                    return clock.now;\n                }\n\n                numTimers = keys(clock.timers).length;\n                if (numTimers === 0) {\n                    return clock.now;\n                }\n\n                clock.next();\n            }\n\n            throw new Error(\n                \"Aborting after running \" +\n                    clock.loopLimit +\n                    \" timers, assuming an infinite loop!\"\n            );\n        };\n\n        clock.runToFrame = function runToFrame() {\n            return clock.tick(getTimeToNextFrame());\n        };\n\n        if (typeof _global.Promise !== \"undefined\") {\n            clock.runAllAsync = function runAllAsync() {\n                return new _global.Promise(function(resolve, reject) {\n                    var i = 0;\n                    function doRun() {\n                        originalSetTimeout(function() {\n                            try {\n                                var numTimers;\n                                if (i < clock.loopLimit) {\n                                    if (!clock.timers) {\n                                        resolve(clock.now);\n                                        return;\n                                    }\n\n                                    numTimers = Object.keys(clock.timers)\n                                        .length;\n                                    if (numTimers === 0) {\n                                        resolve(clock.now);\n                                        return;\n                                    }\n\n                                    clock.next();\n\n                                    i++;\n\n                                    doRun();\n                                    return;\n                                }\n\n                                reject(\n                                    new Error(\n                                        \"Aborting after running \" +\n                                            clock.loopLimit +\n                                            \" timers, assuming an infinite loop!\"\n                                    )\n                                );\n                            } catch (e) {\n                                reject(e);\n                            }\n                        });\n                    }\n                    doRun();\n                });\n            };\n        }\n\n        clock.runToLast = function runToLast() {\n            var timer = lastTimer(clock);\n            if (!timer) {\n                runJobs(clock);\n                return clock.now;\n            }\n\n            return clock.tick(timer.callAt - clock.now);\n        };\n\n        if (typeof _global.Promise !== \"undefined\") {\n            clock.runToLastAsync = function runToLastAsync() {\n                return new _global.Promise(function(resolve, reject) {\n                    originalSetTimeout(function() {\n                        try {\n                            var timer = lastTimer(clock);\n                            if (!timer) {\n                                resolve(clock.now);\n                            }\n\n                            resolve(clock.tickAsync(timer.callAt));\n                        } catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n            };\n        }\n\n        clock.reset = function reset() {\n            nanos = 0;\n            clock.timers = {};\n            clock.jobs = [];\n            clock.now = start;\n        };\n\n        clock.setSystemTime = function setSystemTime(systemTime) {\n            // determine time difference\n            var newNow = getEpoch(systemTime);\n            var difference = newNow - clock.now;\n            var id, timer;\n\n            adjustedSystemTime[0] = adjustedSystemTime[0] + difference;\n            adjustedSystemTime[1] = adjustedSystemTime[1] + nanos;\n            // update 'system clock'\n            clock.now = newNow;\n            nanos = 0;\n\n            // update timers and intervals to keep them stable\n            for (id in clock.timers) {\n                if (clock.timers.hasOwnProperty(id)) {\n                    timer = clock.timers[id];\n                    timer.createdAt += difference;\n                    timer.callAt += difference;\n                }\n            }\n        };\n\n        if (performancePresent) {\n            clock.performance = Object.create(null);\n\n            if (hasPerformancePrototype) {\n                var proto = _global.Performance.prototype;\n\n                Object.getOwnPropertyNames(proto).forEach(function(name) {\n                    if (name.indexOf(\"getEntries\") === 0) {\n                        // match expected return type for getEntries functions\n                        clock.performance[name] = NOOP_ARRAY;\n                    } else {\n                        clock.performance[name] = NOOP;\n                    }\n                });\n            }\n\n            clock.performance.now = function lolexNow() {\n                var hrt = hrtime();\n                var millis = hrt[0] * 1000 + hrt[1] / 1e6;\n                return millis;\n            };\n        }\n\n        if (hrtimePresent) {\n            clock.hrtime = hrtime;\n        }\n\n        return clock;\n    }\n\n    /**\n     * @param config {Object} optional config\n     * @param config.target {Object} the target to install timers in (default `window`)\n     * @param config.now {number|Date}  a number (in milliseconds) or a Date object (default epoch)\n     * @param config.toFake {string[]} names of the methods that should be faked.\n     * @param config.loopLimit {number} the maximum number of timers that will be run when calling runAll()\n     * @param config.shouldAdvanceTime {Boolean} tells lolex to increment mocked time automatically (default false)\n     * @param config.advanceTimeDelta {Number} increment mocked time every <<advanceTimeDelta>> ms (default: 20ms)\n     */\n    // eslint-disable-next-line complexity\n    function install(config) {\n        if (\n            arguments.length > 1 ||\n            config instanceof Date ||\n            Array.isArray(config) ||\n            typeof config === \"number\"\n        ) {\n            throw new TypeError(\n                \"lolex.install called with \" +\n                    String(config) +\n                    \" lolex 2.0+ requires an object parameter - see https://github.com/sinonjs/lolex\"\n            );\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        config = typeof config !== \"undefined\" ? config : {};\n        config.shouldAdvanceTime = config.shouldAdvanceTime || false;\n        config.advanceTimeDelta = config.advanceTimeDelta || 20;\n\n        var i, l;\n        var target = config.target || _global;\n        var clock = createClock(config.now, config.loopLimit);\n\n        clock.uninstall = function() {\n            return uninstall(clock, target, config);\n        };\n\n        clock.methods = config.toFake || [];\n\n        if (clock.methods.length === 0) {\n            // do not fake nextTick by default - GitHub#126\n            clock.methods = keys(timers).filter(function(key) {\n                return key !== \"nextTick\" && key !== \"queueMicrotask\";\n            });\n        }\n\n        for (i = 0, l = clock.methods.length; i < l; i++) {\n            if (clock.methods[i] === \"hrtime\") {\n                if (\n                    target.process &&\n                    typeof target.process.hrtime === \"function\"\n                ) {\n                    hijackMethod(target.process, clock.methods[i], clock);\n                }\n            } else if (clock.methods[i] === \"nextTick\") {\n                if (\n                    target.process &&\n                    typeof target.process.nextTick === \"function\"\n                ) {\n                    hijackMethod(target.process, clock.methods[i], clock);\n                }\n            } else {\n                if (\n                    clock.methods[i] === \"setInterval\" &&\n                    config.shouldAdvanceTime === true\n                ) {\n                    var intervalTick = doIntervalTick.bind(\n                        null,\n                        clock,\n                        config.advanceTimeDelta\n                    );\n                    var intervalId = target[clock.methods[i]](\n                        intervalTick,\n                        config.advanceTimeDelta\n                    );\n                    clock.attachedInterval = intervalId;\n                }\n                hijackMethod(target, clock.methods[i], clock);\n            }\n        }\n\n        return clock;\n    }\n\n    return {\n        timers: timers,\n        createClock: createClock,\n        install: install,\n        withGlobal: withGlobal\n    };\n}\n\nvar defaultImplementation = withGlobal(globalObject);\n\nexports.timers = defaultImplementation.timers;\nexports.createClock = defaultImplementation.createClock;\nexports.install = defaultImplementation.install;\nexports.withGlobal = withGlobal;\n","import Backburner from 'backburner';\nimport lolex from 'lolex';\n\n// used to ensure tests for fake timers can reliably use native setTimeout\nconst SET_TIMEOUT = setTimeout;\nlet fakeClock;\n\nfunction escapeCurrentMicrotaskQueue() {\n  return new Promise((resolve) => {\n    // this ensures that we have been to the end of the current\n    // events microtask queue\n    setTimeout(resolve, 0);\n  });\n}\n\nQUnit.module('tests/autorun', {\n  afterEach() {\n    if (fakeClock) {\n      fakeClock.uninstall();\n    }\n  }\n});\n\nQUnit.test('autorun', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['zomg']);\n  let step = 0;\n\n  assert.ok(!bb.currentInstance, 'The DeferredActionQueues object is lazily instaniated');\n  assert.equal(step++, 0);\n\n  bb.schedule('zomg', null, () => {\n    assert.equal(step++, 2);\n    setTimeout(() => {\n      assert.ok(!bb.hasTimers(), 'The all timers are cleared');\n      done();\n    });\n  });\n\n  assert.ok(bb.currentInstance, 'The DeferredActionQueues object exists');\n  assert.equal(step++, 1);\n});\n\nQUnit.test('autorun (joins next run if not yet flushed)', function(assert) {\n  let bb = new Backburner(['zomg']);\n  let order = -1;\n\n  let tasks = {\n    one: { count: 0, order: -1 },\n    two: { count: 0, order: -1 }\n  };\n\n  bb.schedule('zomg', null, () => {\n    tasks.one.count++;\n    tasks.one.order = ++order;\n  });\n\n  assert.deepEqual(tasks, {\n    one: { count: 0, order: -1 },\n    two: { count: 0, order: -1 }\n  });\n\n  bb.run(() => {\n    bb.schedule('zomg', null, () => {\n      tasks.two.count++;\n      tasks.two.order = ++order;\n    });\n\n    assert.deepEqual(tasks, {\n      one: { count: 0, order: -1 },\n      two: { count: 0, order: -1 }\n    });\n  });\n\n  assert.deepEqual(tasks, {\n    one: { count: 1, order: 0 },\n    two: { count: 1, order: 1 }\n  });\n});\n\nQUnit.test('autorun completes before items scheduled by later (via microtasks)', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['first', 'second']);\n  let order = new Array();\n\n  // this later will be scheduled into the `first` queue when\n  // its timer is up\n  bb.later(() => {\n    order.push('second - later');\n  }, 0);\n\n  // scheduling this into the second queue so that we can confirm this _still_\n  // runs first (due to autorun resolving before scheduled timer)\n  bb.schedule('second', null, () => {\n    order.push('first - scheduled');\n  });\n\n  setTimeout(() => {\n    assert.deepEqual(order, ['first - scheduled', 'second - later']);\n    done();\n  }, 20);\n});\n\nQUnit.test('can be canceled (private API)', function(assert) {\n  assert.expect(0);\n\n  let done = assert.async();\n  let bb = new Backburner(['zomg']);\n\n  bb.schedule('zomg', null, () => {\n    assert.notOk(true, 'should not flush');\n  });\n\n  bb['_cancelAutorun']();\n\n  setTimeout(done, 10);\n});\n\nQUnit.test('autorun interleaved with microtasks do not get dropped [GH#332]', function(assert) {\n  let done = assert.async();\n  let actual: string[] = [];\n  let bb = new Backburner(['actions', 'render']);\n\n  bb.schedule('render', function() {\n    actual.push('first');\n    bb.schedule('actions', () => {\n      actual.push('action1');\n    });\n\n    Promise.resolve().then(() => {\n      actual.push('second');\n      bb.schedule('actions', () => {\n        actual.push('action2');\n      });\n\n      return Promise.resolve().then(() => {\n        actual.push('third');\n\n        bb.schedule('actions', () => {\n          actual.push('action3');\n        });\n      });\n    });\n  });\n\n  setTimeout(function() {\n    assert.deepEqual(actual, ['first', 'action1', 'second', 'action2', 'third', 'action3']);\n\n    done();\n  });\n});\n\nQUnit.test('autorun functions even when using fake timers', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['zomg']);\n  let step = 0;\n\n  assert.ok(!bb.currentInstance, 'The DeferredActionQueues object is lazily instaniated');\n  assert.equal(step++, 0);\n\n  fakeClock = lolex.install();\n  bb.schedule('zomg', null, () => {\n    assert.equal(step++, 2);\n    SET_TIMEOUT(() => {\n      assert.ok(!bb.hasTimers(), 'The all timers are cleared');\n      done();\n    });\n  });\n\n  assert.ok(bb.currentInstance, 'The DeferredActionQueues object exists');\n  assert.equal(step++, 1);\n});\n\nQUnit.test('customizing flushing per queue via flush', function(assert) {\n  assert.step('start');\n\n  let deferredFlush;\n\n  let bb = new Backburner(\n    [\n      'zomg',\n      'render',\n      'afterRender'\n    ],\n    {\n      flush(queueName, flush) {\n        if (queueName === 'render') {\n          deferredFlush = flush;\n        } else {\n          flush();\n        }\n      }\n    }\n  );\n\n  bb.schedule('zomg', null, () => {\n    assert.step('running zomg');\n  });\n\n  bb.schedule('render', null, () => {\n    assert.step('running render');\n  });\n\n  bb.schedule('afterRender', null, () => {\n    assert.step('running afterRender');\n  });\n\n  return escapeCurrentMicrotaskQueue()\n    .then(() => {\n      deferredFlush();\n    })\n    .then(escapeCurrentMicrotaskQueue)\n    .then(() => {\n      assert.verifySteps([\n        'start',\n        'running zomg',\n        'running render',\n        'running afterRender',\n      ]);\n    });\n});\n\nQUnit.test('customized flushing - precedence is rechecked upon each flush', function(assert) {\n  assert.step('start');\n\n  let deferredFlush;\n\n  let bb = new Backburner(\n    [\n      'zomg',\n      'render',\n      'afterRender'\n    ],\n    {\n      flush(queueName, flush) {\n        if (deferredFlush === undefined && queueName === 'render') {\n          deferredFlush = flush;\n        } else {\n          flush();\n        }\n      }\n    }\n  );\n\n  bb.schedule('zomg', null, () => {\n    assert.step('running zomg');\n  });\n\n  bb.schedule('render', null, () => {\n    assert.step('running render');\n  });\n\n  bb.schedule('afterRender', null, () => {\n    assert.step('running afterRender');\n  });\n\n  return escapeCurrentMicrotaskQueue()\n    .then(() => {\n      bb.schedule('zomg', null, () => {\n        assert.step('running zomg 2');\n      });\n\n      deferredFlush();\n    })\n    .then(escapeCurrentMicrotaskQueue)\n    .then(() => {\n      assert.verifySteps([\n        'start',\n        'running zomg',\n        'running zomg 2',\n        'running render',\n        'running afterRender',\n      ]);\n    });\n});\n\nQUnit.test('customizing flushing per queue via flush - with forced run', function(assert) {\n  assert.step('start');\n\n  let deferredFlush;\n\n  let bb = new Backburner(\n    [\n      'zomg',\n      'render',\n      'afterRender'\n    ],\n    {\n      flush(queueName, flush) {\n        if (queueName === 'render') {\n          deferredFlush = flush;\n        } else {\n          flush();\n        }\n      }\n    }\n  );\n\n  bb.schedule('zomg', null, () => {\n    assert.step('running zomg');\n  });\n\n  bb.schedule('render', null, () => {\n    assert.step('running render');\n  });\n\n  bb.schedule('afterRender', null, () => {\n    assert.step('running afterRender');\n  });\n\n  return escapeCurrentMicrotaskQueue()\n    .then(() => {\n      bb.run(() => {});\n\n      assert.verifySteps([\n        'start',\n        'running zomg',\n        'running render',\n        'running afterRender',\n      ]);\n    });\n});\n","import Backburner from 'backburner';\n\nQUnit.module('tests/bb-has-timers');\n\nQUnit.test('hasTimers', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['ohai']);\n  let timer;\n  let target = {\n    fn() { }\n  };\n\n  bb.schedule('ohai', null, () => {\n    assert.ok(!bb.hasTimers(), 'Initially there are no timers');\n\n    timer = bb.later('ohai', () => {});\n    assert.ok(bb.hasTimers(), 'hasTimers checks timers');\n\n    bb.cancel(timer);\n\n    assert.ok(!bb.hasTimers(), 'Timers are cleared');\n\n    timer = bb.debounce(target, 'fn', 200);\n    assert.ok(bb.hasTimers(), 'hasTimers checks debouncees');\n\n    bb.cancel(timer);\n    assert.ok(!bb.hasTimers(), 'Timers are cleared');\n\n    timer = bb.throttle(target, 'fn', 200);\n    assert.ok(bb.hasTimers(), 'hasTimers checks throttlers');\n\n    bb.cancel(timer);\n    assert.ok(!bb.hasTimers(), 'Timers are cleared');\n\n    done();\n  });\n});\n","import Backburner from 'backburner';\n\nQUnit.module('tests/build-next', function() {\n\n  QUnit.test('can build custom flushing next', function(assert) {\n    let done = assert.async();\n    let next = Backburner.buildNext(() => assert.step('custom next'));\n\n    assert.step('start');\n    Promise.resolve().then(() => assert.step('first promise resolved'));\n    next();\n    Promise.resolve().then(() => assert.step('second promise resolved'));\n    assert.step('end');\n\n    setTimeout(() => {\n      assert.verifySteps([\n        'start',\n        'end',\n        'first promise resolved',\n        'custom next',\n        'second promise resolved',\n      ]);\n      done();\n    }, 10);\n  });\n});\n","\nimport Backburner from 'backburner';\n\nQUnit.module('tests/cancel');\n\nQUnit.test('scheduleOnce', function(assert) {\n  assert.expect(3);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    let timer = bb.scheduleOnce('one', () => functionWasCalled = true);\n\n    assert.ok(timer, 'Timer object was returned');\n    assert.ok(bb.cancel(timer), 'Cancel returned true');\n    assert.ok(!functionWasCalled, 'function was not called');\n  });\n});\n\nQUnit.test('cancelling does not affect future scheduleOnce calls', function(assert) {\n  assert.expect(5);\n\n  let bb = new Backburner(['queueName']);\n  const f1Calls: string[] = [];\n  const f2Calls: string[] = [];\n  const f3Calls: string[] = [];\n  const f1 = (arg: string) => f1Calls.push(arg);\n  const f2 = (arg: string) => f2Calls.push(arg);\n  const f3 = (arg: string) => f3Calls.push(arg);\n\n  bb.run(() => {\n    const toCancel = bb.scheduleOnce('queueName', null, f1, 'f1 cancelled schedule');\n    bb.scheduleOnce('queueName', null, f2, 'f2 first schedule');\n    bb.scheduleOnce('queueName', null, f3, 'f3 first schedule');\n    bb.cancel(toCancel);\n    bb.scheduleOnce('queueName', null, f2, 'f2 second schedule');\n  });\n\n  assert.equal(f1Calls.length, 0, 'f1 was not called')\n  assert.equal(f2Calls.length, 1, 'f2 was called once')\n  assert.equal(f3Calls.length, 1, 'f3 was called once')\n  assert.deepEqual(f2Calls, ['f2 second schedule'], 'f2 received the correct argument')\n  assert.deepEqual(f3Calls, ['f3 first schedule'], 'f3 received the correct argument')\n});\n\nQUnit.test('setTimeout', function(assert) {\n  assert.expect(5);\n  let done = assert.async();\n\n  let called = false;\n  let bb = new Backburner(['one'], {\n    onBegin() {\n      called = true;\n    }\n  });\n\n  let functionWasCalled = false;\n  let timer = bb.later(() => functionWasCalled = true);\n\n  assert.ok(timer, 'Timer object was returned');\n  assert.ok(bb.cancel(timer), 'Cancel returned true');\n  assert.ok(!called, 'onBegin was not called');\n\n  setTimeout(() => {\n    assert.ok(!functionWasCalled, 'function was not called');\n    assert.ok(!called, 'onBegin was not called');\n    done();\n  }, 0);\n});\n\nQUnit.test('setTimeout with multiple pending', function(assert) {\n  assert.expect(7);\n\n  let done = assert.async();\n  let called = false;\n  let bb = new Backburner(['one'], {\n    onBegin() {\n      called = true;\n    }\n  });\n  let function1WasCalled = false;\n  let function2WasCalled = false;\n\n  let timer1 = bb.later(() => function1WasCalled = true);\n  let timer2 = bb.later(() => function2WasCalled = true);\n\n  assert.ok(timer1, 'Timer object 2 was returned');\n  assert.ok(bb.cancel(timer1), 'Cancel for timer 1 returned true');\n  assert.ok(timer2, 'Timer object 2 was returned');\n  assert.ok(!called, 'onBegin was not called');\n\n  setTimeout(() => {\n    assert.ok(!function1WasCalled, 'function 1 was not called');\n    assert.ok(function2WasCalled, 'function 2 was called');\n    assert.ok(called, 'onBegin was called');\n\n    done();\n  }, 10);\n});\n\nQUnit.test('setTimeout and creating a new later', function(assert) {\n  assert.expect(7);\n  let done = assert.async();\n  let called = false;\n  let bb = new Backburner(['one'], {\n    onBegin() {\n      called = true;\n    }\n  });\n  let function1WasCalled = false;\n  let function2WasCalled = false;\n\n  let timer1 = bb.later(() => function1WasCalled = true, 0);\n\n  assert.ok(timer1, 'Timer object 2 was returned');\n  assert.ok(bb.cancel(timer1), 'Cancel for timer 1 returned true');\n\n  let timer2 = bb.later(() => function2WasCalled = true, 1);\n\n  assert.ok(timer2, 'Timer object 2 was returned');\n  assert.ok(!called, 'onBegin was not called');\n\n  setTimeout(() => {\n    assert.ok(!function1WasCalled, 'function 1 was not called');\n    assert.ok(function2WasCalled, 'function 2 was called');\n    assert.ok(called, 'onBegin was called');\n    done();\n  }, 50);\n});\n\nQUnit.test('cancelTimers', function(assert) {\n  assert.expect(8);\n  let done = assert.async();\n\n  let bb = new Backburner(['one']);\n  let laterWasCalled = false;\n  let debounceWasCalled = false;\n  let throttleWasCalled = false;\n\n  let timer1 = bb.later(() => laterWasCalled = true, 0);\n  let timer2 = bb.debounce(() => debounceWasCalled = true, 0);\n  let timer3 = bb.throttle(() => throttleWasCalled = true, 0, false);\n\n  assert.ok(timer1, 'Timer object was returned');\n  assert.ok(timer2, 'Timer object was returned');\n  assert.ok(timer3, 'Timer object was returned');\n  assert.ok(bb.hasTimers(), 'bb has scheduled timer');\n\n  bb.cancelTimers();\n\n  setTimeout(function() {\n    assert.ok(!bb.hasTimers(), 'bb has no scheduled timer');\n    assert.ok(!laterWasCalled, 'later function was not called');\n    assert.ok(!debounceWasCalled, 'debounce function was not called');\n    assert.ok(!throttleWasCalled, 'throttle function was not called');\n    done();\n  }, 100);\n});\n\nQUnit.test('cancel during flush', function(assert) {\n  assert.expect(1);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    let timer1 = bb.scheduleOnce('one', () => bb.cancel(timer2));\n    let timer2 = bb.scheduleOnce('one', () => functionWasCalled = true);\n  });\n\n  assert.ok(!functionWasCalled, 'function was not called');\n});\n\nQUnit.test('with target', function(assert) {\n  assert.expect(3);\n\n  let obj = {\n    ___FOO___: 1\n  };\n\n  let bb = new Backburner(['action']);\n\n  let wasCalled = 0;\n\n  function fn() {\n    wasCalled++;\n  }\n\n  bb.run(() => {\n    let timer = bb.scheduleOnce('action', obj, fn);\n\n    assert.equal(wasCalled, 0);\n\n    bb.cancel(timer);\n    bb.scheduleOnce('action', obj, fn);\n\n    assert.equal(wasCalled, 0);\n  });\n\n  assert.equal(wasCalled, 1);\n});\n\nQUnit.test('no target', function(assert) {\n  assert.expect(3);\n\n  let bb = new Backburner(['action']);\n\n  let wasCalled = 0;\n\n  function fn() {\n    wasCalled++;\n  }\n\n  bb.run(() => {\n    let timer = bb.scheduleOnce('action', fn);\n\n    assert.equal(wasCalled, 0);\n\n    bb.cancel(timer);\n    bb.scheduleOnce('action', fn);\n\n    assert.equal(wasCalled, 0);\n  });\n\n  assert.equal(wasCalled, 1);\n});\n\nQUnit.test('cancel always returns boolean', function(assert) {\n  let bb = new Backburner(['one']);\n\n  bb.run(function() {\n    let timer1 = bb.schedule('one', null, function() {});\n    assert.equal(bb.cancel(timer1), true);\n    assert.equal(bb.cancel(timer1), false);\n    assert.equal(bb.cancel(timer1), false);\n\n    let timer2 = bb.later(function() {}, 10);\n    assert.equal(bb.cancel(timer2), true);\n    assert.equal(bb.cancel(timer2), false);\n    assert.equal(bb.cancel(timer2), false);\n\n    let timer3 = bb.debounce(function() {}, 10);\n    assert.equal(bb.cancel(timer3), true);\n    assert.equal(bb.cancel(timer3), false);\n    assert.equal(bb.cancel(timer3), false);\n\n    assert.equal(bb.cancel(undefined), false);\n    assert.equal(bb.cancel(null), false);\n    assert.equal(bb.cancel({}), false);\n    assert.equal(bb.cancel([]), false);\n    assert.equal(bb.cancel(42), false);\n    assert.equal(bb.cancel('42'), false);\n  });\n});\n","import Backburner, { buildPlatform } from 'backburner';\n\nQUnit.module('tests/configurable-timeout');\n\nQUnit.test('We can configure a custom platform', function(assert) {\n  assert.expect(1);\n\n  let bb = new Backburner(['one'], {\n    _buildPlatform(flush) {\n      let platform = buildPlatform(flush);\n      platform['isFakePlatform'] = true;\n      return platform;\n    }\n  });\n\n  assert.ok(bb['_platform']!['isFakePlatform'], 'We can pass in a custom platform');\n});\n\nQUnit.test('We can use a custom setTimeout', function(assert) {\n  assert.expect(1);\n  let done = assert.async();\n\n  let customNextWasUsed = false;\n  let bb = new Backburner(['one'], {\n    _buildPlatform(flush) {\n      return {\n        next() {\n          throw new TypeError('NOT IMPLEMENTED');\n        },\n        clearNext() { },\n        setTimeout(cb) {\n          customNextWasUsed = true;\n          return setTimeout(cb);\n        },\n        clearTimeout(timer) {\n          return clearTimeout(timer);\n        },\n        now() {\n          return Date.now();\n        },\n        isFakePlatform: true\n      };\n    }\n  });\n\n  bb.setTimeout(() => {\n    assert.ok(customNextWasUsed , 'custom later was used');\n    done();\n  });\n});\n\nQUnit.test('We can use a custom next', function(assert) {\n  assert.expect(1);\n  let done = assert.async();\n\n  let customNextWasUsed = false;\n  let bb = new Backburner(['one'], {\n    _buildPlatform(flush) {\n      return {\n        setTimeout() {\n          throw new TypeError('NOT IMPLEMENTED');\n        },\n        clearTimeout(timer) {\n          return clearTimeout(timer);\n        },\n        next() {\n          // next is used for the autorun\n          customNextWasUsed = true;\n          return setTimeout(flush);\n        },\n        clearNext() { },\n        now() { return Date.now(); },\n        isFakePlatform: true\n      };\n    }\n  });\n\n  bb.scheduleOnce('one', () => {\n    assert.ok(customNextWasUsed , 'custom later was used');\n    done();\n  });\n});\n\nQUnit.test('We can use a custom clearTimeout', function(assert) {\n  assert.expect(2);\n\n  let functionWasCalled = false;\n  let customClearTimeoutWasUsed = false;\n  let bb = new Backburner(['one'], {\n    _buildPlatform(flush) {\n      return {\n        setTimeout(method, wait) {\n          return setTimeout(method, wait);\n        },\n        clearTimeout(timer) {\n          customClearTimeoutWasUsed = true;\n          return clearTimeout(timer);\n        },\n        next() {\n          return setTimeout(flush, 0);\n        },\n        clearNext() {\n          customClearTimeoutWasUsed = true;\n        },\n        now() {\n          return Date.now();\n        }\n      };\n    }\n  });\n\n  bb.scheduleOnce('one', () => functionWasCalled = true);\n  bb.cancelTimers();\n\n  bb.run(() => {\n    bb.scheduleOnce('one', () => {\n      assert.ok(!functionWasCalled, 'function was not called');\n      assert.ok(customClearTimeoutWasUsed, 'custom clearTimeout was used');\n    });\n  });\n});\n\nQUnit.test('We can use a custom now', function(assert) {\n  assert.expect(1);\n  let done = assert.async();\n\n  let currentTime = 10;\n  let customNowWasUsed = false;\n  let bb = new Backburner(['one'], {\n    _buildPlatform(flush) {\n      return {\n        setTimeout(method, wait) {\n          return setTimeout(method, wait);\n        },\n        clearTimeout(id) {\n          clearTimeout(id);\n        },\n        next() {\n          return setTimeout(flush, 0);\n        },\n        clearNext() { },\n        now() {\n          customNowWasUsed = true;\n          return currentTime += 10;\n        },\n      };\n    }\n  });\n\n  bb.later(() => {\n    assert.ok(customNowWasUsed , 'custom now was used');\n    done();\n  }, 10);\n});\n","import Backburner from 'backburner';\nimport lolex from 'lolex';\n\nconst DATE_NOW = Date.now;\nlet fakeClock;\n\nQUnit.module('tests/debounce', {\n  afterEach() {\n    if (fakeClock) {\n      fakeClock.uninstall();\n    }\n  }\n});\n\nQUnit.test('debounce', function(assert) {\n  assert.expect(14);\n\n  let bb = new Backburner(['zomg']);\n  let step = 0;\n  let done = assert.async();\n\n  let wasCalled = false;\n  function debouncee() {\n    assert.ok(!wasCalled);\n    wasCalled = true;\n  }\n\n  // let's debounce the function `debouncee` for 40ms\n  // it will be executed 40ms after\n  bb.debounce(null, debouncee, 40);\n  assert.equal(step++, 0);\n\n  // let's schedule `debouncee` to run in 10ms\n  setTimeout(() => {\n    assert.equal(step++, 1);\n    assert.ok(!wasCalled, '@10ms, should not yet have been called');\n    bb.debounce(null, debouncee, 40);\n  }, 10);\n\n  // let's schedule `debouncee` to run again in 30ms\n  setTimeout(() => {\n    assert.equal(step++, 2);\n    assert.ok(!wasCalled, '@ 30ms, should not yet have been called');\n    bb.debounce(null, debouncee, 40);\n  }, 30);\n\n  // let's schedule `debouncee` to run yet again in 60ms\n  setTimeout(() => {\n    assert.equal(step++, 3);\n    assert.ok(!wasCalled, '@ 60ms, should not yet have been called');\n    bb.debounce(null, debouncee, 40);\n  }, 60);\n\n  // now, let's schedule an assertion to occur at 110ms,\n  // 10ms after `debouncee` has been called the last time\n  setTimeout(() => {\n    assert.equal(step++, 4);\n    assert.ok(wasCalled, '@ 110ms should have been called');\n  }, 110);\n\n  // great, we've made it this far, there's one more thing\n  // we need to test. we want to make sure we can call `debounce`\n  // again with the same target/method after it has executed\n\n  // at the 120ms mark, let's schedule another call to `debounce`\n  setTimeout(() => {\n    wasCalled = false; // reset the flag\n\n    // assert call order\n    assert.equal(step++, 5);\n\n    // call debounce for the second time\n    bb.debounce(null, debouncee, 100);\n\n    // assert that it is called in the future and not blackholed\n    setTimeout(() => {\n      assert.equal(step++, 6);\n      assert.ok(wasCalled, 'Another debounce call with the same function can be executed later');\n      done();\n    }, 230);\n  }, 120);\n});\n\nQUnit.test('debounce - immediate', function(assert) {\n  assert.expect(16);\n\n  let done = assert.async();\n  let bb = new Backburner(['zomg']);\n  let step = 0;\n\n  let wasCalled = false;\n  function debouncee() {\n    assert.ok(!wasCalled);\n    wasCalled = true;\n  }\n\n  // let's debounce the function `debouncee` for 40ms\n  // it will be executed immediately, and prevent\n  // any actions for 40ms after\n  bb.debounce(null, debouncee, 40, true);\n  assert.equal(step++, 0);\n  assert.ok(wasCalled);\n  wasCalled = false;\n\n  // let's schedule `debouncee` to run in 10ms\n  setTimeout(() => {\n    assert.equal(step++, 1);\n    assert.ok(!wasCalled);\n    bb.debounce(null, debouncee, 40, true);\n  }, 10);\n\n  // let's schedule `debouncee` to run again in 30ms\n  setTimeout(() => {\n    assert.equal(step++, 2);\n    assert.ok(!wasCalled);\n    bb.debounce(null, debouncee, 40, true);\n  }, 30);\n\n  // let's schedule `debouncee` to run yet again in 60ms\n  setTimeout(() => {\n    assert.equal(step++, 3);\n    assert.ok(!wasCalled);\n    bb.debounce(null, debouncee, 40, true);\n  }, 60);\n\n  // now, let's schedule an assertion to occur at 110ms,\n  // 10ms after `debouncee` has been called the last time\n  setTimeout(() => {\n    assert.equal(step++, 4);\n    assert.ok(!wasCalled);\n  }, 110);\n\n  // great, we've made it this far, there's one more thing\n  // we need to QUnit.test. we want to make sure we can call `debounce`\n  // again with the same target/method after it has executed\n\n  // at the 120ms mark, let's schedule another call to `debounce`\n  setTimeout(() => {\n    wasCalled = false; // reset the flag\n\n    // assert call order\n    assert.equal(step++, 5);\n\n    // call debounce for the second time\n    bb.debounce(null, debouncee, 100, true);\n    assert.ok(wasCalled, 'Another debounce call with the same function can be executed later');\n    wasCalled = false;\n\n    // assert that it is called in the future and not blackholed\n    setTimeout(() => {\n      assert.equal(step++, 6);\n      assert.ok(!wasCalled);\n      done();\n    }, 230);\n  }, 120);\n});\n\nQUnit.test('debounce + immediate joins existing run loop instances', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    throw error;\n  }\n\n  let bb = new Backburner(['errors'], {\n    onError: onError\n  });\n\n  bb.run(() => {\n    let parentInstance = bb.currentInstance;\n    bb.debounce(null, () => {\n      assert.equal(bb.currentInstance, parentInstance);\n    }, 20, true);\n  });\n});\n\nQUnit.test('debounce accept time interval like string numbers', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['zomg']);\n  let step = 0;\n  let wasCalled = false;\n\n  function debouncee() {\n    assert.ok(!wasCalled);\n    wasCalled = true;\n  }\n\n  bb.debounce(null, debouncee, '40');\n  assert.equal(step++, 0);\n\n  setTimeout(() => {\n    assert.equal(step++, 1);\n    assert.ok(!wasCalled);\n    bb.debounce(null, debouncee, '40');\n  }, 10);\n\n  setTimeout(() => {\n    assert.equal(step++, 2);\n    assert.ok(wasCalled);\n    done();\n  }, 60);\n});\n\nQUnit.test('debounce returns timer information usable for canceling', function(assert) {\n  assert.expect(3);\n\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let wasCalled = false;\n\n  function debouncee() {\n    assert.ok(false, 'this method shouldn\\'t be called');\n    wasCalled = true;\n  }\n\n  let timer = bb.debounce(null, debouncee, 1);\n\n  assert.ok(bb.cancel(timer), 'the timer is cancelled');\n\n  // should return false second time around\n  assert.ok(!bb.cancel(timer), 'the timer no longer exists in the list');\n\n  setTimeout(() => {\n    assert.ok(!wasCalled, 'the timer wasn\\'t called after waiting');\n    done();\n  }, 60);\n});\n\nQUnit.test('debounce cancelled after it\\'s executed returns false', function(assert) {\n  assert.expect(3);\n\n  let done = assert.async();\n  let bb = new Backburner(['darkknight']);\n  let wasCalled = false;\n\n  function debouncee() {\n    assert.ok(true, 'the debounced method was called');\n    wasCalled = true;\n  }\n\n  let timer = bb.debounce(null, debouncee, 1);\n\n  setTimeout(() => {\n    assert.ok(!bb.cancel(timer), 'no timer existed to cancel');\n    assert.ok(wasCalled, 'the timer was actually called');\n    done();\n  }, 10);\n\n});\n\nQUnit.test('debounced function is called with final argument', function(assert) {\n  assert.expect(1);\n\n  let done = assert.async();\n  let bb = new Backburner(['joker']);\n\n  function debouncee(arg) {\n    assert.equal('bus', arg, 'the debounced is called with right argument');\n    done();\n  }\n\n  bb.debounce(null, debouncee, 'car', 10);\n  bb.debounce(null, debouncee, 'bicycle', 10);\n  bb.debounce(null, debouncee, 'bus', 10);\n});\n\nQUnit.test('debounce cancelled doesn\\'t cancel older items', function(assert) {\n  assert.expect(4);\n\n  let bb = new Backburner(['robin']);\n  let wasCalled = false;\n  let done = assert.async();\n\n  function debouncee() {\n    assert.ok(true, 'the debounced method was called');\n    if (wasCalled) {\n      done();\n    }\n    wasCalled = true;\n  }\n\n  let timer = bb.debounce(null, debouncee, 1);\n\n  setTimeout(() => {\n    bb.debounce(null, debouncee, 1);\n    assert.ok(!bb.cancel(timer), 'the second timer isn\\'t removed, despite appearing to be the same');\n    assert.ok(wasCalled, 'the timer was actually called');\n  }, 10);\n});\n\nQUnit.test('debounce that is immediate, and cancelled and called again happens immediately', function(assert) {\n  assert.expect(3);\n\n  let done = assert.async();\n  let bb = new Backburner(['robin']);\n  let calledCount = 0;\n\n  function debouncee() {\n    calledCount++;\n  }\n\n  let timer = bb.debounce(null, debouncee, 1000, true);\n\n  setTimeout(() => { // 10 millisecond delay\n    assert.equal(1, calledCount, 'debounced method was called');\n    assert.ok(bb.cancel(timer), 'debounced delay was cancelled');\n    bb.debounce(null, debouncee, 1000, true);\n\n    setTimeout(() => { // 10 millisecond delay\n      assert.equal(2, calledCount, 'debounced method was called again immediately');\n      done();\n    }, 10);\n  }, 10);\n\n});\n\nQUnit.test('debounce without a target, without args', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  let calledWith = new Array();\n  function debouncee(...args) {\n    calledCount++;\n    calledWith.push(args);\n  }\n\n  bb.debounce(debouncee, 10);\n  bb.debounce(debouncee, 10);\n  bb.debounce(debouncee, 10);\n  assert.equal(calledCount, 0, 'debounced method was not called immediately');\n\n  setTimeout(() => {\n    assert.equal(calledCount, 0, 'debounced method was not called on next tick');\n  }, 0);\n\n  setTimeout(() => {\n    assert.equal(calledCount, 1, 'debounced method was was only called once');\n    assert.deepEqual(calledWith, [ [] ], 'debounce called once without arguments');\n    done();\n  }, 20);\n});\n\nQUnit.test('debounce without a target, without args - can be canceled', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  function debouncee() {\n    calledCount++;\n  }\n\n  bb.debounce(debouncee, 10);\n  bb.debounce(debouncee, 10);\n  let timer = bb.debounce(debouncee, 10);\n  assert.equal(calledCount, 0, 'debounced method was not called immediately');\n\n  setTimeout(() => {\n    bb.cancel(timer);\n    assert.equal(calledCount, 0, 'debounced method was not called on next tick');\n  }, 0);\n\n  setTimeout(() => {\n    assert.equal(calledCount, 0, 'debounced method was canceled properly');\n    done();\n  }, 20);\n});\n\nQUnit.test('debounce without a target, without args, immediate', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  let calledWith = new Array();\n  function debouncee(...args) {\n    calledCount++;\n    calledWith.push(args);\n  }\n\n  bb.debounce(debouncee, 10, true);\n  bb.debounce(debouncee, 10, true);\n  bb.debounce(debouncee, 10, true);\n  assert.equal(calledCount, 1, 'debounced method was called immediately');\n  assert.deepEqual(calledWith, [ [] ], 'debounce method was called with the correct arguments');\n\n  setTimeout(() => {\n    bb.debounce(debouncee, 10, true);\n    assert.equal(calledCount, 1, 'debounced method was not called again within the time window');\n  }, 0);\n\n  setTimeout(() => {\n    assert.equal(calledCount, 1, 'debounced method was was only called once');\n    done();\n  }, 20);\n});\n\nQUnit.test('debounce without a target, without args, immediate - can be canceled', function(assert) {\n  let bb = new Backburner(['batman']);\n\n  let fooCalledCount = 0;\n  let barCalledCount = 0;\n  function foo() {\n    fooCalledCount++;\n  }\n  function bar() {\n    barCalledCount++;\n  }\n\n  bb.debounce(foo, 10, true);\n  bb.debounce(foo, 10, true);\n  assert.equal(fooCalledCount, 1, 'foo was called immediately, then debounced');\n\n  bb.debounce(bar, 10, true);\n  let timer = bb.debounce(bar, 10, true);\n  assert.equal(barCalledCount, 1, 'bar was called immediately, then debounced');\n\n  bb.cancel(timer);\n  bb.debounce(bar, 10, true);\n  assert.equal(barCalledCount, 2, 'after canceling the prior debounce, bar was called again');\n});\n\nQUnit.test('debounce without a target, with args', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  let calledWith: object[] = [];\n  function debouncee(first) {\n    calledCount++;\n    calledWith.push(first);\n  }\n\n  let foo = { isFoo: true };\n  let bar = { isBar: true };\n  let baz = { isBaz: true };\n  bb.debounce(debouncee, foo, 10);\n  bb.debounce(debouncee, bar, 10);\n  bb.debounce(debouncee, baz, 10);\n  assert.equal(calledCount, 0, 'debounced method was not called immediately');\n\n  setTimeout(() => {\n    assert.deepEqual(calledWith, [{ isBaz: true }], 'debounce method was only called once, with correct argument');\n    done();\n  }, 20);\n});\n\nQUnit.test('debounce without a target, with args - can be canceled', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  let calledWith: object[] = [];\n  function debouncee(first) {\n    calledCount++;\n    calledWith.push(first);\n  }\n\n  let foo = { isFoo: true };\n  let bar = { isBar: true };\n  let baz = { isBaz: true };\n  bb.debounce(debouncee, foo, 10);\n  bb.debounce(debouncee, bar, 10);\n  let timer = bb.debounce(debouncee, baz, 10);\n  assert.equal(calledCount, 0, 'debounced method was not called immediately');\n\n  setTimeout(() => {\n    assert.deepEqual(calledWith, [], 'debounce method has not been called on next tick');\n    bb.cancel(timer);\n  }, 0);\n\n  setTimeout(() => {\n    assert.deepEqual(calledWith, [], 'debounce method is not called when canceled');\n    done();\n  }, 20);\n});\n\nQUnit.test('debounce without a target, with args, immediate', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  let calledWith = new Array();\n  function debouncee(first) {\n    calledCount++;\n    calledWith.push(first);\n  }\n\n  let foo = { isFoo: true };\n  let bar = { isBar: true };\n  let baz = { isBaz: true };\n  let qux = { isQux: true };\n  bb.debounce(debouncee, foo, 10, true);\n  bb.debounce(debouncee, bar, 10, true);\n  bb.debounce(debouncee, baz, 10, true);\n\n  assert.deepEqual(calledWith, [{ isFoo: true }], 'debounce method was only called once, with correct argument');\n\n  setTimeout(() => {\n    bb.debounce(debouncee, qux, 10, true);\n    assert.deepEqual(calledWith, [{ isFoo: true }], 'debounce method was only called once, with correct argument');\n  }, 0);\n\n  setTimeout(() => {\n    assert.deepEqual(calledWith, [{ isFoo: true }], 'debounce method was only called once, with correct argument');\n    done();\n  }, 20);\n});\n\nQUnit.test('debounce without a target, with args, immediate - can be canceled', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  let calledWith: object[] = [];\n  function debouncee(first) {\n    calledCount++;\n    calledWith.push(first);\n  }\n\n  let foo = { isFoo: true };\n  let bar = { isBar: true };\n  let baz = { isBaz: true };\n  let qux = { isQux: true };\n  bb.debounce(debouncee, foo, 10, true);\n  bb.debounce(debouncee, bar, 10, true);\n  let timer = bb.debounce(debouncee, baz, 10, true);\n\n  assert.deepEqual(calledWith, [{ isFoo: true }], 'debounce method was only called once, with correct argument');\n\n  setTimeout(() => {\n    bb.cancel(timer);\n    bb.debounce(debouncee, qux, 10, true);\n    assert.deepEqual(calledWith, [{ isFoo: true }, { isQux: true }], 'debounce method was called again after canceling prior timer');\n  }, 0);\n\n  setTimeout(() => {\n    assert.deepEqual(calledWith, [{ isFoo: true }, { isQux: true }], 'debounce method was not called again');\n    done();\n  }, 20);\n});\n\nQUnit.test('onError', function(assert) {\n  assert.expect(1);\n\n  let done = assert.async();\n\n  function onError(error) {\n    assert.equal('QUnit.test error', error.message);\n    done();\n  }\n\n  let bb = new Backburner(['errors'], {\n    onError\n  });\n\n  bb.debounce(null, () => { throw new Error('QUnit.test error'); }, 20);\n});\n\nQUnit.test('debounce within a debounce can be canceled GH#183', function(assert) {\n  assert.expect(3);\n\n  let done = assert.async();\n  let bb = new Backburner(['zomg']);\n\n  let foo = () => {\n    assert.ok(true, 'foo called');\n    return bb.debounce(bar, 10);\n  };\n\n  let bar = () => {\n    assert.ok(true, 'bar called');\n    let timer = foo();\n    bb.cancel(timer);\n\n    setTimeout(done, 10);\n  };\n\n  foo();\n});\n\nQUnit.test('when [callback, string] args passed', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    bb.debounce(function(name) {\n      assert.equal(name, 'batman');\n      functionWasCalled = true;\n    }, 'batman', 100, true);\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('can be ran \"early\" with fake timers GH#351', function(assert) {\n  assert.expect(1);\n  let done = assert.async();\n\n  let bb = new Backburner(['one']);\n  fakeClock = lolex.install();\n\n  let startTime = DATE_NOW();\n  bb.debounce(() => {\n    let endTime = DATE_NOW();\n    assert.ok(endTime - startTime < 100, 'executed in less than 5000ms');\n    done();\n  }, 5000);\n\n  fakeClock.tick(5001);\n});\n","\nconst ERROR = Error;\n// @ts-ignore - Skip preventing overriding the readonly Error object\nError = ERROR;\nlet stacks: string[] = [];\n\nexport function pushStackTrace(stackLine: string) {\n  stacks.push(stackLine);\n\n  return stackLine;\n}\n\nexport function overrideError(_Error) {\n  // @ts-ignore\n  Error = _Error;\n}\n\nexport function resetError() {\n  // @ts-ignore\n  Error = ERROR;\n  stacks = [];\n}\n\nexport default class MockStableError {\n  constructor(public message: string) {}\n\n  get stack(): string {\n    return stacks.pop() || '';\n  }\n}\n","import Backburner from 'backburner';\nimport MockStableError, {\n  overrideError,\n  pushStackTrace,\n  resetError,\n} from './utils/mock-stable-error';\n\nQUnit.module('tests/debug-info', {\n  beforeEach: function() {\n    // @ts-ignore\n    overrideError(MockStableError);\n  },\n\n  afterEach: function() {\n    resetError();\n  }\n});\n\nQUnit.test('getDebugInfo returns undefined when DEBUG = false', function(assert) {\n  assert.expect(1);\n\n  let debugInfo;\n  let bb = new Backburner(['one']);\n\n  bb.run(function() {\n    debugInfo = bb.getDebugInfo();\n\n    assert.equal(debugInfo, undefined, 'DebugInfo is undefined when DEBUG = false');\n  });\n});\n\nQUnit.test('getDebugInfo returns debugInfo using later when DEBUG = true', function(assert) {\n  assert.expect(1);\n\n  let debugInfo;\n  let target1 = { one: true };\n  let target2 = { two: true };\n  let method = () => {};\n  let arg1 = 1;\n  let arg2 = 2;\n  let twoStack = pushStackTrace('Two stack');\n  let oneStack = pushStackTrace('One stack');\n  let bb = new Backburner(['one']);\n\n  bb.DEBUG = true;\n\n  bb.run(function() {\n    bb.later(target1, method, arg1, 1000);\n    bb.later(target2, method, arg1, arg2, 1000);\n\n    debugInfo = bb.getDebugInfo();\n\n    resetError();\n\n    assert.deepEqual(debugInfo.timers,\n    [\n      {\n        args: [arg1],\n        method,\n        stack: oneStack,\n        target: target1\n      },\n      {\n        args: [arg1, arg2],\n        method,\n        stack: twoStack,\n        target: target2\n      }\n    ]\n    , 'debugInfo is output');\n  });\n});\n\nQUnit.test('getDebugInfo returns debugInfo using throttle when DEBUG = true', function(assert) {\n  assert.expect(1);\n\n  let debugInfo;\n  let target1 = { one: true };\n  let target2 = { two: true };\n  let method = () => {};\n  let arg1 = 1;\n  let arg2 = 2;\n  let twoStack = pushStackTrace('Two stack');\n  let oneStack = pushStackTrace('One stack');\n  let bb = new Backburner(['one']);\n\n  bb.DEBUG = true;\n\n  bb.run(function() {\n    bb.throttle(target1, method, arg1, 1000, false);\n    bb.throttle(target2, method, arg1, arg2, 1000, false);\n\n    debugInfo = bb.getDebugInfo();\n\n    resetError();\n\n    assert.deepEqual(debugInfo.timers,\n    [\n      {\n        args: [arg1],\n        method,\n        stack: oneStack,\n        target: target1\n      },\n      {\n        args: [arg1, arg2],\n        method,\n        stack: twoStack,\n        target: target2\n      }\n    ]\n    , 'debugInfo is output');\n  });\n});\n\nQUnit.test('getDebugInfo returns debugInfo using debounce when DEBUG = true', function(assert) {\n  assert.expect(1);\n\n  let debugInfo;\n  let target1 = { one: true };\n  let target2 = { two: true };\n  let method = () => {};\n  let arg1 = 1;\n  let arg2 = 2;\n  let twoStack = pushStackTrace('Two stack');\n  let oneStack = pushStackTrace('One stack');\n  let bb = new Backburner(['one']);\n\n  bb.DEBUG = true;\n\n  bb.run(function() {\n    bb.debounce(target1, method, arg1, 1000);\n    bb.debounce(target2, method, arg1, arg2, 1000);\n\n    debugInfo = bb.getDebugInfo();\n\n    resetError();\n\n    assert.deepEqual(debugInfo.timers,\n    [\n      {\n        args: [arg1],\n        method,\n        stack: oneStack,\n        target: target1\n      },\n      {\n        args: [arg1, arg2],\n        method,\n        stack: twoStack,\n        target: target2\n      }\n    ]\n    , 'debugInfo is output');\n  });\n});\n\nQUnit.test('getDebugInfo returns debugInfo using when DEBUG = true', function(assert) {\n  assert.expect(1);\n\n  let debugInfo;\n  let target1 = { one: true };\n  let target2 = { two: true };\n  let method = () => {};\n  let arg1 = 1;\n  let arg2 = 2;\n  let twoStack = pushStackTrace('Two stack');\n  let oneStack = pushStackTrace('One stack');\n  let bb = new Backburner(['one', 'two']);\n\n  bb.DEBUG = true;\n\n  bb.run(function() {\n    bb.schedule('one', target1, method, arg1);\n    bb.schedule('two', target2, method, arg1, arg2);\n\n    debugInfo = bb.getDebugInfo();\n\n    resetError();\n\n    assert.deepEqual(debugInfo.instanceStack,\n    [\n      {\n        one: [\n          {\n            args: [arg1],\n            method,\n            stack: oneStack,\n            target: target1\n          }\n        ],\n        two: [\n          {\n            args: [arg1, arg2],\n            method,\n            stack: twoStack,\n            target: target2\n          }\n        ]\n      }\n    ]\n    , 'debugInfo is output');\n  });\n});\n\nQUnit.test('getDebugInfo returns debugInfo when DEBUG = true in nested run', function(assert) {\n  assert.expect(1);\n\n  let debugInfo;\n  let method = () => {};\n  let twoStack = pushStackTrace('Two stack');\n  let oneStack = pushStackTrace('One stack');\n  let fourStack = pushStackTrace('Four stack');\n  let threeStack = pushStackTrace('Three stack');\n  let bb = new Backburner(['one', 'two', 'three', 'four']);\n\n  bb.DEBUG = true;\n\n  bb.run(function() {\n    bb.schedule('one', method);\n    bb.schedule('two', method);\n\n    bb.run(function() {\n      bb.schedule('three', method);\n      bb.schedule('four', method);\n\n      debugInfo = bb.getDebugInfo();\n\n      resetError();\n\n      assert.deepEqual(debugInfo.instanceStack,\n        [\n          {\n            four: [\n              {\n                args: undefined,\n                method,\n                stack: fourStack,\n                target: null\n              }\n            ],\n            one: [],\n            three: [\n              {\n                args: undefined,\n                method,\n                stack: threeStack,\n                target: null\n              }\n            ],\n            two: []\n          },\n          {\n            four: [],\n            one: [\n              {\n                args: undefined,\n                method,\n                stack: oneStack,\n                target: null\n              }\n            ],\n            three: [],\n            two: [\n              {\n                args: undefined,\n                method,\n                stack: twoStack,\n                target: null\n              }\n            ]\n          }\n        ]\n      , 'debugInfo is output');\n      });\n    });\n});\n\nQUnit.test('autorun', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['one']);\n  let autorunStack = pushStackTrace('Autorun stack');\n  pushStackTrace('Schedule stack');\n\n  bb.DEBUG = true;\n\n  bb.schedule('one', null, () => {\n    setTimeout(() => {\n      assert.equal(bb.getDebugInfo()!.autorun, null);\n      done();\n    });\n  });\n\n  assert.equal(bb.getDebugInfo()!.autorun!.stack, autorunStack);\n});\n","import Backburner from 'backburner';\n\nQUnit.module('tests/debug');\n\nQUnit.test('schedule - DEBUG flag enables stack tagging', function(assert) {\n  let bb = new Backburner(['one']);\n\n  bb.schedule('one', () => {});\n  if (!bb.currentInstance) {\n    throw new Error('bb has no instance');\n  }\n\n  assert.ok(bb.currentInstance && !bb.currentInstance.queues.one.stackFor(0), 'No stack is recorded');\n\n  bb.DEBUG = true;\n\n  bb.schedule('one', () => {});\n\n  if (new Error().stack) { // workaround for CLI runner :(\n    assert.expect(4);\n    let stack = bb.currentInstance && bb.currentInstance.queues.one.stackFor(1);\n    assert.ok(typeof stack === 'string', 'A stack is recorded');\n\n    let onError = function(error, errorRecordedForStack) {\n      assert.ok(errorRecordedForStack, 'errorRecordedForStack passed to error function');\n      assert.ok(errorRecordedForStack.stack, 'stack is recorded');\n    };\n\n    bb = new Backburner(['errors'], { onError });\n    bb.DEBUG = true;\n\n    bb.run(() => {\n      bb.schedule('errors', () => {\n        throw new Error('message!');\n      });\n    });\n  }\n});\n\nQUnit.test('later - DEBUG flag off does not capture stack', function(assert) {\n  let done = assert.async();\n  let onError = function(error, errorRecordedForStack) {\n    assert.strictEqual(errorRecordedForStack, undefined, 'errorRecordedForStack is not passed to error function when DEBUG is not set');\n    done();\n  };\n  let bb = new Backburner(['one'], { onError });\n\n  bb.later(() => {\n    throw new Error('message!');\n  });\n});\n\nif (new Error().stack) { // workaround for CLI runner :(\n  QUnit.test('later - DEBUG flag on captures stack', function(assert) {\n    assert.expect(3);\n\n    let done = assert.async();\n    let onError = function(error, errorRecordedForStack) {\n      assert.ok(errorRecordedForStack, 'errorRecordedForStack passed to error function');\n      assert.ok(errorRecordedForStack.stack, 'stack is recorded');\n      assert.ok(errorRecordedForStack.stack.indexOf('later') > -1, 'stack includes `later` invocation');\n      done();\n    };\n    let bb = new Backburner(['one'], { onError });\n    bb.DEBUG = true;\n\n    bb.later(() => {\n      throw new Error('message!');\n    });\n  });\n}\n","import Backburner from 'backburner';\nimport MockStableError, {\n  overrideError,\n  pushStackTrace,\n  resetError,\n} from './utils/mock-stable-error';\n\nQUnit.module('tests/defer-debug-info', {\n  beforeEach: function() {\n    // @ts-ignore\n    overrideError(MockStableError);\n  },\n\n  afterEach: function() {\n    resetError();\n  }\n});\n\nQUnit.test('_getDebugInfo returns empty object with DEBUG = false', function(assert) {\n  assert.expect(1);\n\n  let debugInfo;\n  let bb = new Backburner(['render', 'afterRender']);\n\n  bb.run(() => {\n    debugInfo = bb.currentInstance && bb.currentInstance._getDebugInfo(bb.DEBUG);\n\n    assert.equal(debugInfo, undefined);\n  });\n});\n\nQUnit.test('_getDebugInfo returns debugInfo when DEBUG = true', function(assert) {\n  assert.expect(1);\n\n  let debugInfo;\n  let method = () => {};\n  let afterRenderStack = pushStackTrace('afterRender stack');\n  let renderStack = pushStackTrace('render stack');\n  let bb = new Backburner(['render', 'afterRender']);\n\n  bb.DEBUG = true;\n\n  bb.run(() => {\n    bb.schedule('render', method);\n    bb.schedule('afterRender', method);\n\n    debugInfo = bb.currentInstance && bb.currentInstance._getDebugInfo(bb.DEBUG);\n\n    assert.deepEqual(debugInfo, {\n      render: [\n        {\n          target: null,\n          method,\n          args: undefined,\n          stack: renderStack\n        }\n      ],\n      afterRender: [\n        {\n          target: null,\n          method,\n          args: undefined,\n          stack: afterRenderStack\n        }\n      ]\n    });\n  });\n});\n","import Backburner from 'backburner';\n\nQUnit.module('tests/defer-iterable');\n\nclass Iterator {\n  private _collection: Function[];\n  private _iteration: number = 0;\n  constructor(collection: Function[]) {\n    this._collection = collection;\n  }\n\n  public next() {\n    let iteration = this._iteration++;\n    let collection = this._collection;\n    let done = collection.length <= iteration;\n\n    let value = done ? undefined : collection[iteration];\n\n    return {\n      done,\n      value\n    };\n  }\n}\n\nQUnit.test('deferIterable', function(assert) {\n  let bb = new Backburner(['zomg']);\n  let order = 0;\n\n  let tasks = {\n    one:   { count: 0, order: -1 },\n    two:   { count: 0, order: -1 },\n    three: { count: 0, order: -1 }\n  };\n\n  function task1() {\n    tasks.one.count++;\n    tasks.one.order = order++;\n  }\n\n  function task2() {\n    tasks.two.count++;\n    tasks.two.order = order++;\n  }\n\n  function task3() {\n    tasks.three.count++;\n    tasks.three.order = order++;\n  }\n\n  let iterator = () => new Iterator([\n    task1,\n    task2,\n    task3\n  ]);\n\n  bb.run(() => {\n    bb.scheduleIterable('zomg', iterator);\n\n    assert.deepEqual(tasks, {\n      one:   { count: 0,  order: -1 },\n      two:   { count: 0,  order: -1 },\n      three: { count: 0,  order: -1 }\n    });\n  });\n\n  assert.deepEqual(tasks, {\n    one:   { count: 1,  order: 0 },\n    two:   { count: 1,  order: 1 },\n    three: { count: 1,  order: 2 }\n  });\n});\n","import Backburner from 'backburner';\n\nQUnit.module('tests/defer-once');\n\nQUnit.test('when passed a function', function(assert) {\n  assert.expect(1);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    bb.scheduleOnce('one', () => {\n      functionWasCalled = true;\n    });\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('when passed a target and method', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    bb.scheduleOnce('one', {zomg: 'hi'}, function() {\n      assert.equal(this.zomg, 'hi', 'the target was properly set');\n      functionWasCalled = true;\n    });\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('when passed a target and method name', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n  let targetObject = {\n    zomg: 'hi',\n    checkFunction() {\n      assert.equal(this.zomg, 'hi', 'the target was properly set');\n      functionWasCalled = true;\n    }\n  };\n\n  bb.run(() => bb.scheduleOnce('one', targetObject, 'checkFunction'));\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('throws when passed a null method', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('You attempted to schedule an action in a queue (deferErrors) for a method that doesn\\'t exist', error.message);\n  }\n\n  let bb = new Backburner(['deferErrors'], {\n    onError\n  });\n\n  bb.run(() => bb.scheduleOnce('deferErrors', {zomg: 'hi'}, null));\n});\n\nQUnit.test('throws when passed an undefined method', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('You attempted to schedule an action in a queue (deferErrors) for a method that doesn\\'t exist', error.message);\n  }\n\n  let bb = new Backburner(['deferErrors'], {\n    onError\n  });\n\n  bb.run(() => bb.deferOnce('deferErrors', {zomg: 'hi'}, undefined));\n});\n\nQUnit.test('throws when passed an method name that does not exists on the target', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('You attempted to schedule an action in a queue (deferErrors) for a method that doesn\\'t exist', error.message);\n  }\n\n  let bb = new Backburner(['deferErrors'], {\n    onError\n  });\n\n  bb.run(() => bb.deferOnce('deferErrors', {zomg: 'hi'}, 'checkFunction'));\n});\n\nQUnit.test('when passed a target, method, and arguments', function(assert) {\n  assert.expect(5);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    bb.scheduleOnce('one', {zomg: 'hi'}, function(a, b, c) {\n      assert.equal(this.zomg, 'hi', 'the target was properly set');\n      assert.equal(a, 1, 'the first arguments was passed in');\n      assert.equal(b, 2, 'the second arguments was passed in');\n      assert.equal(c, 3, 'the third arguments was passed in');\n      functionWasCalled = true;\n    }, 1, 2, 3);\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('when passed same function twice', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n  let functionWasCalled = false;\n\n  function deferMethod() {\n    i++;\n    assert.equal(i, 1, 'Function should be called only once');\n    functionWasCalled = true;\n  }\n\n  bb.run(() => {\n    bb.scheduleOnce('one', deferMethod);\n    bb.scheduleOnce('one', deferMethod);\n  });\n\n  assert.ok(functionWasCalled, 'function was called only once');\n});\n\nQUnit.test('when passed same function twice with same target', function(assert) {\n  assert.expect(3);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n  let functionWasCalled = false;\n\n  function deferMethod() {\n    i++;\n    assert.equal(i, 1, 'Function should be called only once');\n    assert.equal(this['first'], 1, 'the target property was set');\n    functionWasCalled = true;\n  }\n\n  let argObj = {first: 1};\n\n  bb.run(() => {\n    bb.scheduleOnce('one', argObj, deferMethod);\n    bb.scheduleOnce('one', argObj, deferMethod);\n  });\n\n  assert.ok(functionWasCalled, 'function was called only once');\n});\n\nQUnit.test('when passed same function twice with different targets', function(assert) {\n  assert.expect(3);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n\n  function deferMethod() {\n    i++;\n    assert.equal(this['first'], 1, 'the target property was set');\n  }\n\n  bb.run(() => {\n    bb.scheduleOnce('one', {first: 1}, deferMethod);\n    bb.scheduleOnce('one', {first: 1}, deferMethod);\n  });\n\n  assert.equal(i, 2, 'function was called twice');\n});\n\nQUnit.test('when passed same function twice with same arguments and same target', function(assert) {\n  assert.expect(4);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n\n  function deferMethod(a, b) {\n    i++;\n    assert.equal(a, 1, 'First argument is set only one time');\n    assert.equal(b, 2, 'Second argument remains same');\n    assert.equal(this['first'], 1, 'the target property was set');\n  }\n\n  let argObj = {first: 1};\n\n  bb.run(() => {\n    bb.scheduleOnce('one', argObj, deferMethod, 1, 2);\n    bb.scheduleOnce('one', argObj, deferMethod, 1, 2);\n  });\n\n  assert.equal(i, 1, 'function was called once');\n});\n\nQUnit.test('when passed same function twice with same target and different arguments', function(assert) {\n  assert.expect(4);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n\n  function deferMethod(a, b) {\n    i++;\n    assert.equal(a, 3, 'First argument of only second call is set');\n    assert.equal(b, 2, 'Second argument remains same');\n    assert.equal(this['first'], 1, 'the target property was set');\n  }\n\n  let argObj = {first: 1};\n\n  bb.run(() => {\n    bb.scheduleOnce('one', argObj, deferMethod, 1, 2);\n    bb.scheduleOnce('one', argObj, deferMethod, 3, 2);\n  });\n\n  assert.equal(i, 1, 'function was called once');\n});\n\nQUnit.test('when passed same function twice with different target and different arguments', function(assert) {\n  assert.expect(7);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n\n  function deferMethod(a, b) {\n    i++;\n    if (i === 1) {\n      assert.equal(a, 1, 'First argument set during first call');\n    } else {\n      assert.equal(a, 3, 'First argument set during second call');\n    }\n    assert.equal(b, 2, 'Second argument remains same');\n    assert.equal(this['first'], 1, 'the target property was set');\n  }\n\n  let argObj = {first: 1};\n\n  bb.run(() => {\n    bb.scheduleOnce('one', {first: 1}, deferMethod, 1, 2);\n    bb.scheduleOnce('one', {first: 1}, deferMethod, 3, 2);\n  });\n\n  assert.equal(i, 2, 'function was called twice');\n});\n\nQUnit.test('when passed same function with same target after already triggering in current loop', function(assert) {\n  assert.expect(5);\n\n  let bb = new Backburner(['one', 'two']);\n  let i = 0;\n\n  function deferMethod(a) {\n    i++;\n    assert.equal(a, i, 'Correct argument is set');\n    assert.equal(this['first'], 1, 'the target property was set');\n  }\n\n  function scheduleMethod() {\n    bb.scheduleOnce('one', argObj, deferMethod, 2);\n  }\n\n  let argObj = {first: 1};\n\n  bb.run(() => {\n    bb.scheduleOnce('one', argObj, deferMethod, 1);\n    bb.scheduleOnce('two', argObj, scheduleMethod);\n  });\n\n  assert.equal(i, 2, 'function was called twice');\n});\n\nQUnit.test('when passed same function with same target after already triggering in current loop', function(assert) {\n  assert.expect(5);\n\n  let argObj = {first: 1};\n  let bb = new Backburner(['one', 'two'], { });\n\n  let i = 0;\n\n  function deferMethod(a) {\n    i++;\n    assert.equal(a, i, 'Correct argument is set');\n    assert.equal(this['first'], 1, 'the target property was set');\n  }\n\n  function scheduleMethod() {\n    bb.scheduleOnce('one', argObj, deferMethod, 2);\n  }\n\n  bb.run(() => {\n    bb.scheduleOnce('one', argObj, deferMethod, 1);\n    bb.scheduleOnce('two', argObj, scheduleMethod);\n  });\n\n  assert.equal(i, 2, 'function was called twice');\n});\n\nQUnit.test('onError', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('QUnit.test error', error.message);\n  }\n\n  let bb = new Backburner(['errors'], { onError });\n\n  bb.run(() => {\n    bb.scheduleOnce('errors', () => {\n      throw new Error('QUnit.test error');\n    });\n  });\n});\n\nQUnit.test('when [queueName, callback, string] args passed', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    bb.scheduleOnce('one', function(name) {\n      assert.equal(name, 'batman');\n      functionWasCalled = true;\n    }, 'batman', 100);\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n","import Backburner from 'backburner';\nlet originalDateValueOf = Date.prototype.valueOf;\n\nQUnit.module('tests/defer', {\n  afterEach() {\n    Date.prototype.valueOf = originalDateValueOf;\n  }\n});\n\nQUnit.test('when passed a function', function(assert) {\n  assert.expect(1);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    bb.schedule('one', () => functionWasCalled = true);\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('when passed a target and method', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    bb.schedule('one', { zomg: 'hi' }, function() {\n      assert.equal(this.zomg, 'hi', 'the target was properly set');\n      functionWasCalled = true;\n    });\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('when [queueName, callback, string] args passed', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    bb.schedule('one', function(name) {\n      assert.equal(name, 'batman');\n      functionWasCalled = true;\n    }, 'batman');\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('when passed a target and method name', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n  let targetObject = {\n    zomg: 'hi',\n    checkFunction() {\n      assert.equal(this.zomg, 'hi', 'the target was properly set');\n      functionWasCalled = true;\n    }\n  };\n\n  bb.run(() => bb.schedule('one', targetObject, 'checkFunction'));\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('throws when passed a null method', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('You attempted to schedule an action in a queue (deferErrors) for a method that doesn\\'t exist', error.message);\n  }\n\n  let bb = new Backburner(['deferErrors'], {\n    onError\n  });\n\n  bb.run(() => bb.schedule('deferErrors', { zomg: 'hi' }, null));\n});\n\nQUnit.test('throws when passed an undefined method', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('You attempted to schedule an action in a queue (deferErrors) for a method that doesn\\'t exist', error.message);\n  }\n\n  let bb = new Backburner(['deferErrors'], {\n    onError\n  });\n\n  bb.run(() => bb.schedule('deferErrors', { zomg: 'hi' }, undefined));\n});\n\nQUnit.test('throws when passed an method name that does not exists on the target', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('You attempted to schedule an action in a queue (deferErrors) for a method that doesn\\'t exist', error.message);\n  }\n\n  let bb = new Backburner(['deferErrors'], {\n    onError\n  });\n\n  bb.run(() => bb.schedule('deferErrors', { zomg: 'hi' }, 'checkFunction'));\n});\n\nQUnit.test('when passed a target, method, and arguments', function(assert) {\n  assert.expect(5);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    bb.schedule('one', { zomg: 'hi' }, function(a, b, c) {\n      assert.equal(this.zomg, 'hi', 'the target was properly set');\n      assert.equal(a, 1, 'the first arguments was passed in');\n      assert.equal(b, 2, 'the second arguments was passed in');\n      assert.equal(c, 3, 'the third arguments was passed in');\n      functionWasCalled = true;\n    }, 1, 2, 3);\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('when passed same function twice', function(assert) {\n  assert.expect(1);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n\n  function deferMethod() {\n    i++;\n  }\n\n  bb.run(() => {\n    bb.schedule('one', deferMethod);\n    bb.schedule('one', deferMethod);\n  });\n\n  assert.equal(i, 2, 'function was called twice');\n});\n\nQUnit.test('when passed same function twice with arguments', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n  let argObj = {first : 1};\n\n  function deferMethod() {\n    assert.equal(this['first'], 1, 'the target property was set');\n  }\n\n  bb.run(() => {\n    bb.schedule('one', argObj, deferMethod);\n    bb.schedule('one', argObj, deferMethod);\n  });\n});\n\nQUnit.test('when passed same function twice with same arguments and same target', function(assert) {\n  assert.expect(7);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n\n  function deferMethod(a, b) {\n    i++;\n    assert.equal(a, 1, 'First argument is set twice');\n    assert.equal(b, 2, 'Second argument is set twice');\n    assert.equal(this['first'], 1, 'the target property was set');\n  }\n\n  let argObj = { first: 1 };\n\n  bb.run(() => {\n    bb.schedule('one', argObj, deferMethod, 1, 2);\n    bb.schedule('one', argObj, deferMethod, 1, 2);\n  });\n\n  assert.equal(i, 2, 'function was called twice');\n});\n\nQUnit.test('when passed same function twice with same target and different arguments', function(assert) {\n  assert.expect(7);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n\n  function deferMethod(a, b) {\n    i++;\n    if (i === 1) {\n      assert.equal(a, 1, 'First argument set during first call');\n    } else {\n      assert.equal(a, 3, 'First argument set during second call');\n    }\n    assert.equal(b, 2, 'Second argument remains same');\n    assert.equal(this['first'], 1, 'the target property was set');\n  }\n\n  let argObj = { first: 1 };\n\n  bb.run(() => {\n    bb.schedule('one', argObj, deferMethod, 1, 2);\n    bb.schedule('one', argObj, deferMethod, 3, 2);\n  });\n\n  assert.equal(i, 2, 'function was called twice');\n});\n\nQUnit.test('when passed same function twice with different target and different arguments', function(assert) {\n  assert.expect(7);\n\n  let bb = new Backburner(['one']);\n  let i = 0;\n\n  function deferMethod(a, b) {\n    i++;\n    if (i === 1) {\n      assert.equal(a, 1, 'First argument set during first call');\n    } else {\n      assert.equal(a, 3, 'First argument set during second call');\n    }\n    assert.equal(b, 2, 'Second argument remains same');\n    assert.equal(this['first'], 1, 'the target property was set');\n  }\n\n  let argObj = {first: 1};\n\n  bb.run(() => {\n    bb.schedule('one', { first: 1 }, deferMethod, 1, 2);\n    bb.schedule('one', { first: 1 }, deferMethod, 3, 2);\n  });\n\n  assert.equal(i, 2, 'function was called twice');\n});\n\nQUnit.test('onError', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('QUnit.test error', error.message);\n  }\n\n  let bb = new Backburner(['errors'], {\n    onError\n  });\n\n  bb.run(() => {\n    bb.schedule('errors', () => {\n      throw new Error('QUnit.test error');\n    });\n  });\n});\n","import Backburner from 'backburner';\n\nQUnit.module('tests/events');\n\nQUnit.test('end event should fire after runloop completes', function(assert) {\n  assert.expect(3);\n  let callNumber = 0;\n\n  let bb = new Backburner(['one', 'two']);\n\n  bb.on('end', () => callNumber++);\n\n  function funcOne() {\n    assert.equal(callNumber, 0);\n  }\n\n  function funcTwo() {\n    assert.equal(callNumber, 0);\n  }\n\n  bb.run(() => {\n    bb.schedule('one', null, funcOne);\n    bb.schedule('two', null, funcTwo);\n  });\n\n  assert.equal(callNumber, 1);\n});\n\nQUnit.test('end event should fire before onEnd', function(assert) {\n  assert.expect(3);\n  let callNumber = 0;\n\n  let bb = new Backburner(['one', 'two'], {\n    onEnd() {\n      assert.equal(callNumber, 1);\n    }\n  });\n\n  bb.on('end', () => callNumber++);\n\n  function funcOne() {\n    assert.equal(callNumber, 0);\n  }\n\n  function funcTwo() {\n    assert.equal(callNumber, 0);\n  }\n\n  bb.run(() => {\n    bb.schedule('one', null, funcOne);\n    bb.schedule('two', null, funcTwo);\n  });\n});\n\nQUnit.test('end event should be passed the current and next instance', function(assert) {\n  assert.expect(4);\n  let callNumber = 0;\n\n  let firstArgument = null;\n  let secondArgument = null;\n\n  let bb = new Backburner(['one'], {\n    onEnd(first, second) {\n      assert.equal(firstArgument, first);\n      assert.equal(secondArgument, second);\n    }\n  });\n\n  bb.on('end', (first, second) => {\n    firstArgument = first;\n    secondArgument = second;\n  });\n\n  bb.run(() => bb.schedule('one', null, () => {}));\n  bb.run(() => bb.schedule('one', null, () => {}));\n});\n// blah\n\nQUnit.test('begin event should fire before runloop begins', function(assert) {\n  assert.expect(4);\n  let callNumber = 0;\n\n  let bb = new Backburner(['one', 'two']);\n\n  bb.on('begin', () => callNumber++);\n\n  function funcOne() {\n    assert.equal(callNumber, 1);\n  }\n\n  function funcTwo() {\n    assert.equal(callNumber, 1);\n  }\n\n  assert.equal(callNumber, 0);\n  bb.run(() => {\n    bb.schedule('one', null, funcOne);\n    bb.schedule('two', null, funcTwo);\n  });\n\n  assert.equal(callNumber, 1);\n});\n\nQUnit.test('begin event should fire before onBegin', function(assert) {\n  assert.expect(1);\n  let callNumber = 0;\n\n  let bb = new Backburner(['one', 'two'], {\n    onBegin() {\n      assert.equal(callNumber, 1);\n    }\n  });\n\n  bb.on('begin', () => callNumber++);\n\n  bb.run(() => {\n    bb.schedule('one', null, () => {});\n    bb.schedule('two', null, () => {});\n  });\n});\n\nQUnit.test('begin event should be passed the current and previous instance', function(assert) {\n  assert.expect(4);\n  let callNumber = 0;\n\n  let firstArgument = null;\n  let secondArgument = null;\n\n  let bb = new Backburner(['one'], {\n    onBegin(first, second) {\n      assert.equal(firstArgument, first);\n      assert.equal(secondArgument, second);\n    }\n  });\n\n  bb.on('begin', (first, second) => {\n    firstArgument = first;\n    secondArgument = second;\n  });\n\n  bb.run(() => bb.schedule('one', null, () => {}));\n  bb.run(() => bb.schedule('one', null, () => {}));\n});\n\n// blah\nQUnit.test('events should work with multiple callbacks', function(assert) {\n  assert.expect(2);\n  let firstCalled = false;\n  let secondCalled = false;\n\n  let bb = new Backburner(['one']);\n\n  function first() {\n    firstCalled = true;\n  }\n\n  function second() {\n    secondCalled = true;\n  }\n\n  bb.on('end', first);\n  bb.on('end', second);\n\n  bb.run(() => bb.schedule('one', null, () => {}));\n\n  assert.equal(secondCalled, true);\n  assert.equal(firstCalled, true);\n});\n\nQUnit.test('off should unregister specific callback', function(assert) {\n  assert.expect(2);\n  let firstCalled = false;\n  let secondCalled = false;\n\n  let bb = new Backburner(['one']);\n\n  function first() {\n    firstCalled = true;\n  }\n\n  function second() {\n    secondCalled = true;\n  }\n\n  bb.on('end', first);\n  bb.on('end', second);\n\n  bb.off('end', first);\n\n  bb.run(() => bb.schedule('one', null, () => {}));\n\n  assert.equal(secondCalled, true);\n  assert.equal(firstCalled, false);\n});\n","import Backburner from 'backburner';\n\nQUnit.module('tests/join');\n\nfunction depth(bb) {\n  return bb.instanceStack.length + (bb.currentInstance ? 1 : 0);\n}\n\nQUnit.test('outside of a run loop', function(assert) {\n  assert.expect(4);\n\n  let bb = new Backburner(['one']);\n\n  assert.equal(depth(bb), 0);\n  let result = bb.join(() => {\n    assert.equal(depth(bb), 1);\n    return 'result';\n  });\n  assert.equal(result, 'result');\n  assert.equal(depth(bb), 0);\n});\n\nQUnit.test('inside of a run loop', function(assert) {\n  assert.expect(4);\n\n  let bb = new Backburner(['one']);\n\n  assert.equal(depth(bb), 0);\n  bb.run(() => {\n    let result = bb.join(() => {\n      assert.equal(depth(bb), 1);\n      return 'result';\n    });\n    assert.equal(result, 'result');\n  });\n  assert.equal(depth(bb), 0);\n});\n\nQUnit.test('nested join calls', function(assert) {\n  assert.expect(7);\n\n  let bb = new Backburner(['one']);\n\n  assert.equal(depth(bb), 0);\n  bb.join(() => {\n    assert.equal(depth(bb), 1);\n    bb.join(() => {\n      assert.equal(depth(bb), 1);\n      bb.join(() => {\n        assert.equal(depth(bb), 1);\n      });\n      assert.equal(depth(bb), 1);\n    });\n    assert.equal(depth(bb), 1);\n  });\n  assert.equal(depth(bb), 0);\n});\n\nQUnit.test('nested run loops', function(assert) {\n  assert.expect(7);\n\n  let bb = new Backburner(['one']);\n\n  assert.equal(depth(bb), 0);\n  bb.join(() => {\n    assert.equal(depth(bb), 1);\n    bb.run(() => {\n      assert.equal(depth(bb), 2);\n      bb.join(() => {\n        assert.equal(depth(bb), 2);\n      });\n      assert.equal(depth(bb), 2);\n    });\n    assert.equal(depth(bb), 1);\n  });\n  assert.equal(depth(bb), 0);\n});\n\nQUnit.test('queue execution order', function(assert) {\n  assert.expect(1);\n\n  let bb = new Backburner(['one']);\n  let items: number[] = [];\n\n  bb.run(() => {\n    items.push(0);\n    bb.schedule('one', () => items.push(4));\n    bb.join(() => {\n      items.push(1);\n      bb.schedule('one', () => items.push(5));\n      items.push(2);\n    });\n    bb.schedule('one', () => items.push(6));\n    items.push(3);\n  });\n  assert.deepEqual(items, [0, 1, 2, 3, 4, 5, 6]);\n});\n\nQUnit.test('without an onError run.join can be caught via `try`/`catch`', function(assert) {\n  assert.expect(1);\n\n  let bb = new Backburner(['errors']);\n\n  assert.throws(() => {\n    bb.join(() => {\n      throw new Error('test error');\n    });\n  }, /test error/);\n});\n\nQUnit.test('with an onError which does not rethrow, when joining existing instance, can be caught via `try`/`catch`', function(assert) {\n  assert.expect(1);\n\n  let bb = new Backburner(['errors'], {\n    onError(error) {\n      assert.notOk(true, 'onError should not be called as the error from .join is handled by assert.throws');\n    }\n  });\n\n  bb.run(() => {\n    assert.throws(() => {\n      bb.join(() => {\n        throw new Error('test error');\n      });\n    }, /test error/, 'error from within .join can be caught with try/catch');\n  });\n});\n\nQUnit.test('onError which does not rethrow is invoked (only once) when not joining an existing instance', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('test error', error.message);\n  }\n\n  let bb = new Backburner(['errors'], {\n    onError: onError\n  });\n\n  bb.join(() => {\n    throw new Error('test error');\n  });\n});\n\nQUnit.test('onError which does not rethrow is invoked (only once) when joining an existing instance', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('test error', error.message);\n  }\n\n  let bb = new Backburner(['errors'], {\n    onError: onError\n  });\n\n  bb.run(() => {\n    bb.join(() => {\n      throw new Error('test error');\n    });\n  });\n});\n\nQUnit.test('onError which does rethrow is invoked (only once) when not joining an existing instance', function(assert) {\n  assert.expect(2);\n\n  function onError(error) {\n    assert.equal('test error', error.message);\n    throw error;\n  }\n\n  let bb = new Backburner(['errors'], {\n    onError: onError\n  });\n\n  assert.throws(() => {\n    bb.join(() => {\n      throw new Error('test error');\n    });\n  }, /test error/);\n});\n\nQUnit.test('onError which does rethrow is invoked (only once) when joining an existing instance', function(assert) {\n  assert.expect(2);\n\n  function onError(error) {\n    assert.equal('test error', error.message);\n    throw error;\n  }\n\n  let bb = new Backburner(['errors'], {\n    onError: onError\n  });\n\n  assert.throws(() => {\n    bb.run(() => {\n      bb.join(() => {\n        throw new Error('test error');\n      });\n    });\n  }, /test error/);\n});\n\nQUnit.test('when [callback, string] args passed', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.join(function(name) {\n    assert.equal(name, 'batman');\n    functionWasCalled = true;\n  }, 'batman');\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n","/* tslint:disable:no-shadowed-variable*/\nimport Backburner from 'backburner';\nimport lolex from 'lolex';\n\nconst originalDateNow = Date.now;\nconst originalDateValueOf = Date.prototype.valueOf;\n\nlet fakeClock;\nQUnit.module('tests/set-timeout-test', {\n  afterEach() {\n    Date.now = originalDateNow;\n    Date.prototype.valueOf = originalDateValueOf;\n    if (fakeClock) {\n      fakeClock.uninstall();\n    }\n  }\n});\n\nQUnit.test('later', function(assert) {\n  assert.expect(6);\n\n  let bb = new Backburner(['one']);\n  let step = 0;\n  let instance;\n  let done = assert.async();\n\n  // Force +new Date to return the same result while scheduling\n  // run.later timers. Otherwise: non-determinism!\n  let now = +new Date();\n  Date.prototype.valueOf = function() { return now; };\n\n  bb.later(null, () => {\n    instance = bb.currentInstance;\n    assert.equal(step++, 0);\n  }, 10);\n\n  bb.later(null, () => {\n    assert.equal(step++, 1);\n    assert.equal(instance, bb.currentInstance, 'same instance');\n  }, 10);\n\n  Date.prototype.valueOf = originalDateValueOf;\n  // spin so that when we execute timers (+new Date()) will be greater than the\n  // time scheduled above; not a problem in real life as we will never 'wait'\n  // 0ms\n  while ((+ new Date()) <= now + 10) {}\n\n  bb.later(null, () => {\n    assert.equal(step++, 2);\n\n    bb.later(null, () => {\n      assert.equal(step++, 3);\n      assert.ok(true, 'Another later will execute correctly');\n      done();\n    }, 1);\n  }, 20);\n});\n\nQUnit.test('later should rely on stubbed `Date.now`', function(assert) {\n  assert.expect(1);\n\n  let bb = new Backburner(['one']);\n  let done = assert.async();\n  let globalNowWasUsed = false;\n\n  Date.now = function() {\n    globalNowWasUsed = true;\n    return originalDateNow();\n  };\n\n  bb.later(() => {\n    assert.ok(globalNowWasUsed);\n    done();\n  }, 1);\n});\n\nQUnit.test('later shedules timers correctly after time travel', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let done = assert.async();\n  let start = originalDateNow();\n  let now = start;\n\n  Date.now = () => now;\n\n  let called1At = 0;\n  let called2At = 0;\n\n  bb.later(() => called1At = originalDateNow(), 1000);\n\n  now += 1000;\n\n  bb.later(() => called2At = originalDateNow(), 10);\n\n  now += 10;\n\n  setTimeout(() => {\n    assert.ok(called1At !== 0, 'timeout 1 was called');\n    assert.ok(called2At !== 0, 'timeout 2 was called');\n    done();\n  }, 20);\n});\n\nlet bb;\nQUnit.module('later arguments / arity', {\n  beforeEach() {\n    bb = new Backburner(['one']);\n  },\n  afterEach() {\n    bb = undefined;\n    if (fakeClock) {\n      fakeClock.uninstall();\n    }\n  }\n});\n\nQUnit.test('[callback]', function(assert) {\n  assert.expect(2);\n\n  let done = assert.async();\n\n  bb.later(function() {\n    assert.equal(arguments.length, 0);\n    assert.ok(true, 'was called');\n    done();\n  });\n});\n\nQUnit.test('[callback, undefined]', function(assert) {\n  assert.expect(2);\n  let done = assert.async();\n\n  bb.later(function() {\n    assert.equal(arguments.length, 1);\n    assert.ok(true, 'was called');\n    done();\n  }, undefined);\n});\n\nQUnit.test('[null, callback, undefined]', function(assert) {\n  assert.expect(2);\n  let done = assert.async();\n\n  bb.later(null, function() {\n    assert.equal(arguments.length, 0);\n    assert.ok(true, 'was called');\n    done();\n  });\n});\n\nQUnit.test('[null, callback, undefined]', function(assert) {\n  assert.expect(2);\n  let done = assert.async();\n\n  bb.later(null, function() {\n    assert.equal(arguments.length, 1);\n    assert.ok(true, 'was called');\n    done();\n  }, undefined);\n});\n\nQUnit.test('[null, callback, null]', function(assert) {\n  assert.expect(3);\n\n  let done = assert.async();\n\n  bb.later(null, function() {\n    assert.equal(arguments.length, 1);\n    assert.equal(arguments[0], null);\n    assert.ok(true, 'was called');\n    done();\n  }, null);\n});\n\nQUnit.test('[callback, string, string, string]', function(assert) {\n  assert.expect(5);\n\n  let done = assert.async();\n\n  bb.later(function() {\n    assert.equal(arguments.length, 3);\n    assert.equal(arguments[0], 'a');\n    assert.equal(arguments[1], 'b');\n    assert.equal(arguments[2], 'c');\n    assert.ok(true, 'was called');\n    done();\n  }, 'a', 'b', 'c');\n});\n\nQUnit.test('[null, callback, string, string, string]', function(assert) {\n  assert.expect(5);\n\n  let done = assert.async();\n\n  bb.later(null, function() {\n    assert.equal(arguments.length, 3);\n    assert.equal(arguments[0], 'a');\n    assert.equal(arguments[1], 'b');\n    assert.equal(arguments[2], 'c');\n    assert.ok(true, 'was called');\n    done();\n  }, 'a', 'b', 'c');\n});\n\nQUnit.test('[null, callback, string, string, string, number]', function(assert) {\n  assert.expect(5);\n  let done = assert.async();\n  bb.later(null, function() {\n    assert.equal(arguments.length, 3);\n    assert.equal(arguments[0], 'a');\n    assert.equal(arguments[1], 'b');\n    assert.equal(arguments[2], 'c');\n    assert.ok(true, 'was called');\n    done();\n  }, 'a', 'b', 'c', 10);\n});\n\nQUnit.test('[null, callback, string, string, string, numericString]', function(assert) {\n  assert.expect(5);\n  let done = assert.async();\n  bb.later(null, function() {\n    assert.equal(arguments.length, 3);\n    assert.equal(arguments[0], 'a');\n    assert.equal(arguments[1], 'b');\n    assert.equal(arguments[2], 'c');\n    assert.ok(true, 'was called');\n    done();\n  },  'a', 'b', 'c', '1');\n});\n\nQUnit.test('[obj, string]', function(assert) {\n  assert.expect(1);\n  let done = assert.async();\n  bb.later({\n    bro() {\n      assert.ok(true, 'was called');\n      done();\n    }\n  }, 'bro');\n});\n\nQUnit.test('[obj, string, value]', function(assert) {\n  assert.expect(3);\n  let done = assert.async();\n  bb.later({\n    bro() {\n      assert.equal(arguments.length, 1);\n      assert.equal(arguments[0], 'value');\n      assert.ok(true, 'was called');\n      done();\n    }\n  }, 'bro', 'value');\n});\n\nQUnit.test('[obj, string, value, number]', function(assert) {\n  let done = assert.async();\n  bb.later({\n    bro() {\n      assert.equal(arguments.length, 1);\n      assert.equal(arguments[0], 'value');\n      assert.ok(true, 'was called');\n      done();\n    }\n  }, 'bro', 'value', 1);\n});\n\nQUnit.test('[obj, string, value, numericString]', function(assert) {\n  let done = assert.async();\n  bb.later({\n    bro() {\n      assert.equal(arguments.length, 1);\n      assert.equal(arguments[0], 'value');\n      assert.ok(true, 'was called');\n      done();\n    }\n  }, 'bro', 'value', '1');\n});\n\nQUnit.test('onError', function(assert) {\n  assert.expect(1);\n\n  let done = assert.async();\n\n  function onError(error) {\n    assert.equal('test error', error.message);\n    done();\n  }\n\n  bb = new Backburner(['errors'], { onError });\n\n  bb.later(() => { throw new Error('test error'); }, 1);\n});\n\nQUnit.test('later doesn\\'t trigger twice with earlier later', function(assert) {\n  assert.expect(4);\n\n  bb = new Backburner(['one']);\n  let called1 = 0;\n  let called2 = 0;\n  let beginCalls = 0;\n  let endCalls = 0;\n  let oldBegin = bb.begin;\n  let oldEnd = bb.end;\n  let done = assert.async();\n\n  bb.begin = function() {\n    beginCalls++;\n    oldBegin.call(bb);\n  };\n\n  bb.end = function() {\n    endCalls++;\n    oldEnd.call(bb);\n  };\n\n  bb.later(() => called1++, 50);\n  bb.later(() => called2++, 10);\n\n  setTimeout(() => {\n    assert.equal(called1, 1, 'timeout 1 was called once');\n    assert.equal(called2, 1, 'timeout 2 was called once');\n    assert.equal(beginCalls, 2, 'begin() was called twice');\n    assert.equal(endCalls, 2, 'end() was called twice');\n    done();\n  }, 100);\n});\n\nQUnit.test('later with two Backburner instances', function(assert) {\n  assert.expect(8);\n\n  let steps = 0;\n  let done = assert.async();\n  let bb1 = new Backburner(['one'], {\n    onBegin() {\n      assert.equal(++steps, 4);\n    }\n  });\n  let bb2 = new Backburner(['one'], {\n    onBegin() {\n      assert.equal(++steps, 6);\n    }\n  });\n\n  assert.equal(++steps, 1);\n\n  bb1.later(() => assert.equal(++steps, 5), 10);\n\n  assert.equal(++steps, 2);\n\n  bb2.later(() => assert.equal(++steps, 7), 10);\n\n  assert.equal(++steps, 3);\n\n  setTimeout(() => {\n    assert.equal(++steps, 8);\n    done();\n  }, 50);\n});\n\nQUnit.test('expired timeout doesn\\'t hang when setting a new timeout', function(assert) {\n  assert.expect(3);\n\n  let called1At = 0;\n  let called2At = 0;\n  let done = assert.async();\n\n  bb.later(() => called1At = Date.now(), 1);\n\n  // Block JS to simulate https://github.com/ebryn/backburner.js/issues/135\n  let waitUntil = Date.now() + 5;\n  while (Date.now() < waitUntil) { }\n\n  bb.later(() => called2At = Date.now(), 50);\n\n  setTimeout(() => {\n    assert.ok(called1At !== 0, 'timeout 1 was called');\n    assert.ok(called2At !== 0, 'timeout 2 was called');\n    assert.ok(called2At - called1At > 10, 'timeout 1 did not wait for timeout 2');\n    done();\n  }, 60);\n});\n\nQUnit.test('NaN timeout doesn\\'t hang other timeouts', function(assert) {\n  assert.expect(2);\n\n  let done = assert.async();\n  let called1At = 0;\n  let called2At = 0;\n\n  bb.later(() => called1At = Date.now(), 1);\n  bb.later(() => {}, NaN);\n  bb.later(() => called2At = Date.now(), 10);\n\n  setTimeout(() => {\n    assert.ok(called1At !== 0, 'timeout 1 was called');\n    assert.ok(called2At !== 0, 'timeout 2 was called');\n    done();\n  }, 20);\n});\n\nQUnit.test('when [callback, string] args passed', function(assert) {\n  assert.expect(1);\n  let done = assert.async();\n\n  let bb = new Backburner(['one']);\n\n  bb.later(function(name) {\n    assert.equal(name, 'batman');\n    done();\n  }, 'batman', 0);\n});\n\nQUnit.test('can be ran \"early\" with fake timers GH#351', function(assert) {\n  assert.expect(1);\n  let done = assert.async();\n\n  let bb = new Backburner(['one']);\n\n  fakeClock = lolex.install();\n\n  let startTime = originalDateNow();\n  bb.later(function(name) {\n    let endTime = originalDateNow();\n    assert.ok(endTime - startTime < 100, 'did not wait for 5s to run timer');\n    done();\n  }, 5000);\n\n  fakeClock.tick(5001);\n});\n\nQUnit.test('debounce called before later', function(assert) {\n  assert.expect(1);\n\n  let done = assert.async(1);\n  let bb = new Backburner(['one']);\n  let func = function() {};\n\n  bb.run(() => {\n    bb.debounce(func, 1000);\n    setTimeout(function() {\n      bb.debounce(func, 1000);\n    }, 50);\n\n    let before = Date.now();\n\n    bb.later(function() {\n      let diff = Date.now() - before;\n      assert.ok(diff < 1010, '.later called with too much delay');\n      done();\n    }, 1000);\n  });\n\n });\n\nQUnit.test('boundRunExpiredTimers is called once when first timer canceled', function(assert) {\n  let done = assert.async(1);\n\n  let bb = new Backburner(['one']);\n\n  let timer = bb.later(function() {}, 500);\n  bb.cancel(timer);\n\n  let boundRunExpiredTimers = bb['_boundRunExpiredTimers'];\n  bb['_boundRunExpiredTimers'] = function() {\n    assert.ok(true);\n    done();\n    return boundRunExpiredTimers.apply(bb, arguments);\n  };\n\n  bb.later(function() {}, 800);\n});\n","import Backburner, { buildPlatform } from 'backburner';\n\nQUnit.module('tests/multi-turn');\n\nconst queue: any[] = [];\nlet platform;\nfunction buildFakePlatform(flush) {\n  platform = buildPlatform(flush);\n  platform.flushSync = function() {\n    flush();\n  };\n  return platform;\n}\n\nQUnit.test('basic', function(assert) {\n  let bb = new Backburner(['zomg'], {\n    // This is just a place holder for now, but somehow the system needs to\n    // know to when to stop\n    mustYield() {\n      return true; // yield after each step, for now.\n    },\n    _buildPlatform: buildFakePlatform\n  });\n\n  let order = -1;\n  let tasks = {\n    one:   { count: 0, order: -1 },\n    two:   { count: 0, order: -1 },\n    three: { count: 0, order: -1 }\n  };\n\n  bb.schedule('zomg', null, () => {\n    tasks.one.count++;\n    tasks.one.order = ++order;\n  });\n\n  bb.schedule('zomg', null, () => {\n    tasks.two.count++;\n    tasks.two.order = ++order;\n  });\n\n  bb.schedule('zomg', null, () => {\n    tasks.three.count++;\n    tasks.three.order = ++order;\n  });\n\n  assert.deepEqual(tasks, {\n    one:   { count: 0, order: -1 },\n    two:   { count: 0, order: -1 },\n    three: { count: 0, order: -1 }\n  }, 'no tasks have been run before the platform flushes');\n\n  platform.flushSync();\n\n  assert.deepEqual(tasks, {\n    one:   { count: 1, order:  0 },\n    two:   { count: 0, order: -1 },\n    three: { count: 0, order: -1 }\n  }, 'TaskOne has been run before the platform flushes');\n\n  platform.flushSync();\n\n  assert.deepEqual(tasks, {\n    one:   { count: 1, order:  0 },\n    two:   { count: 1, order:  1 },\n    three: { count: 0, order: -1 }\n  }, 'TaskOne and TaskTwo has been run before the platform flushes');\n\n  platform.flushSync();\n\n  assert.deepEqual(tasks, {\n    one:   { count: 1, order:  0 },\n    two:   { count: 1, order:  1 },\n    three: { count: 1, order:  2 }\n  }, 'TaskOne, TaskTwo and TaskThree has been run before the platform flushes');\n});\n\nQUnit.test('properly cancel items which are added during flush', function(assert) {\n  let bb = new Backburner(['zomg'], {\n    // This is just a place holder for now, but somehow the system needs to\n    // know to when to stop\n    mustYield() {\n      return true; // yield after each step, for now.\n    },\n\n    _buildPlatform: buildFakePlatform\n  });\n\n  let fooCalled = 0;\n  let barCalled = 0;\n\n  let obj1 = {\n    foo() {\n      fooCalled++;\n    }\n  };\n\n  let obj2 = {\n    bar() {\n      barCalled++;\n    }\n  };\n\n  bb.scheduleOnce('zomg', obj1, 'foo');\n  bb.scheduleOnce('zomg', obj1, 'foo');\n  bb.scheduleOnce('zomg', obj2, 'bar');\n  bb.scheduleOnce('zomg', obj2, 'bar');\n\n  platform.flushSync();\n\n  let timer1 = bb.scheduleOnce('zomg', obj1, 'foo');\n  let timer2 = bb.scheduleOnce('zomg', obj2, 'bar');\n  bb.cancel(timer1);\n  bb.cancel(timer2);\n\n  platform.flushSync();\n  platform.flushSync();\n  platform.flushSync();\n\n  assert.equal(fooCalled, 1, 'fooCalled');\n  assert.equal(barCalled, 1, 'barCalled');\n\n});\n","import Backburner from 'backburner';\nimport MockStableError, {\n  overrideError,\n  pushStackTrace,\n  resetError,\n} from './utils/mock-stable-error';\n\nQUnit.module('tests/queue-debug-info', {\n  beforeEach: function() {\n    // @ts-ignore\n    overrideError(MockStableError);\n  },\n\n  afterEach: function() {\n    resetError();\n  }\n});\n\nQUnit.test('getDebugInfo returns empty array when no debug info is present.', function(assert) {\n  assert.expect(1);\n\n  let debugInfo;\n  let bb = new Backburner(['one']);\n\n  bb.run(function() {\n    debugInfo = bb.currentInstance && bb.currentInstance.queues.one._getDebugInfo(bb.DEBUG);\n\n    assert.equal(debugInfo, undefined, 'DebugInfo is undefined when DEBUG = false');\n  });\n});\n\nQUnit.test('getDebugInfo returns minimal debug info when one item in queue.', function(assert) {\n  assert.expect(2);\n\n  let debugInfo;\n  let method = function() {\n    assert.ok(true);\n  };\n  let stack = pushStackTrace('Top of stack');\n  let bb = new Backburner(['one']);\n\n  bb.DEBUG = true;\n\n  bb.run(function() {\n    bb.schedule('one', method);\n\n    debugInfo = bb.currentInstance && bb.currentInstance.queues.one._getDebugInfo(bb.DEBUG);\n\n    assert.deepEqual(debugInfo, [{\n      target: null,\n      method,\n      args: undefined,\n      stack\n    }]);\n  });\n});\n\nQUnit.test('getDebugInfo returns full debug info when one item in queue.', function(assert) {\n  assert.expect(2);\n\n  let debugInfo;\n  let target = {};\n  let method = function() {\n    assert.ok(true);\n  };\n  let arg1 = 1;\n  let arg2 = 2;\n  let stack = pushStackTrace('Top of stack');\n  let bb = new Backburner(['one']);\n\n  bb.DEBUG = true;\n\n  bb.run(function() {\n    bb.schedule('one', target, method, arg1, arg2);\n\n    debugInfo = bb.currentInstance && bb.currentInstance.queues.one._getDebugInfo(bb.DEBUG);\n\n    assert.deepEqual(debugInfo, [{\n      target,\n      method,\n      args: [arg1, arg2],\n      stack\n    }]);\n  });\n});\n\nQUnit.test('getDebugInfo returns debug info when multiple items in queue.', function(assert) {\n  assert.expect(3);\n\n  let debugInfo;\n  let method = function() {\n    assert.ok(true);\n  };\n  let bottom = pushStackTrace('Bottom');\n  let top = pushStackTrace('Top');\n  let bb = new Backburner(['one']);\n\n  bb.DEBUG = true;\n\n  bb.run(function() {\n    bb.schedule('one', method);\n    bb.schedule('one', method);\n\n    debugInfo = bb.currentInstance && bb.currentInstance.queues.one._getDebugInfo(bb.DEBUG);\n\n    assert.deepEqual(debugInfo, [\n      {\n        target: null,\n        method,\n        args: undefined,\n        stack: top\n      },\n      {\n        target: null,\n        method,\n        args: undefined,\n        stack: bottom\n      }\n    ]);\n  });\n});\n","import Backburner from 'backburner';\n\nlet Queue = (Backburner as any).Queue;\n\nQUnit.module('tests/queue-push-unique');\nlet slice = [].slice;\n\nQUnit.test('pushUnique: 2 different targets', function(assert) {\n  let queue = new Queue('foo');\n  let target1fooWasCalled: string[][] = [];\n  let target2fooWasCalled: string[][] = [];\n  let target1 = {\n    foo() {\n      target1fooWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  let target2 = {\n    foo() {\n      target2fooWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo, ['a']);\n  queue.pushUnique(target2, target2.foo, ['b']);\n\n  assert.deepEqual(target1fooWasCalled, []);\n  assert.deepEqual(target2fooWasCalled, []);\n\n  queue.flush();\n\n  assert.deepEqual(target1fooWasCalled.length, 1, 'expected: target 1.foo to be called only once');\n  assert.deepEqual(target1fooWasCalled[0], ['a']);\n  assert.deepEqual(target2fooWasCalled.length, 1, 'expected: target 2.foo to be called only once');\n  assert.deepEqual(target2fooWasCalled[0], ['b']);\n});\n\nQUnit.test('pushUnique: 1 target, 2 different methods', function(assert) {\n  let queue = new Queue('foo');\n  let target1fooWasCalled: string[][] = [];\n  let target1barWasCalled: string[][] = [];\n  let target1 = {\n    foo: function() {\n      target1fooWasCalled.push(slice.call(arguments));\n    },\n    bar: function() {\n      target1barWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo, ['a']);\n  queue.pushUnique(target1, target1.bar, ['b']);\n\n  assert.deepEqual(target1fooWasCalled, []);\n  assert.deepEqual(target1barWasCalled, []);\n\n  queue.flush();\n\n  assert.deepEqual(target1fooWasCalled.length, 1, 'expected: target 1.foo to be called only once');\n  assert.deepEqual(target1fooWasCalled[0], ['a']);\n  assert.deepEqual(target1barWasCalled.length, 1, 'expected: target 1.bar to be called only once');\n  assert.deepEqual(target1barWasCalled[0], ['b']);\n});\n\nQUnit.test('pushUnique: 1 target, 1 different methods called twice', function(assert) {\n  let queue = new Queue('foo');\n  let target1fooWasCalled: string[][] = [];\n  let target1 = {\n    foo: function() {\n      target1fooWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo, ['a']);\n  queue.pushUnique(target1, target1.foo, ['b']);\n\n  assert.deepEqual(target1fooWasCalled, []);\n\n  queue.flush();\n\n  assert.deepEqual(target1fooWasCalled.length, 1, 'expected: target 1.foo to be called only once');\n  assert.deepEqual(target1fooWasCalled[0], ['b']);\n});\n\nQUnit.test('pushUnique: 2 different targets', function(assert) {\n  let queue = new Queue('foo', {});\n  let target1fooWasCalled: string[][] = [];\n  let target2fooWasCalled: string[][] = [];\n  let target1 = {\n    foo: function() {\n      target1fooWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  let target2 = {\n    foo: function() {\n      target2fooWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo, ['a']);\n  queue.pushUnique(target2, target2.foo, ['b']);\n\n  assert.deepEqual(target1fooWasCalled, []);\n  assert.deepEqual(target2fooWasCalled, []);\n\n  queue.flush();\n\n  assert.deepEqual(target1fooWasCalled.length, 1, 'expected: target 1.foo to be called only once');\n  assert.deepEqual(target1fooWasCalled[0], ['a']);\n  assert.deepEqual(target2fooWasCalled.length, 1, 'expected: target 2.foo to be called only once');\n  assert.deepEqual(target2fooWasCalled[0], ['b']);\n});\n\nQUnit.test('pushUnique: 1 target, 2 different methods', function(assert) {\n  let queue = new Queue('foo', {});\n  let target1fooWasCalled: string[][] = [];\n  let target1barWasCalled: string[][] = [];\n  let target1 = {\n    foo: function() {\n      target1fooWasCalled.push(slice.call(arguments));\n    },\n    bar: function() {\n      target1barWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo, ['a']);\n  queue.pushUnique(target1, target1.bar, ['b']);\n\n  assert.deepEqual(target1fooWasCalled, []);\n  assert.deepEqual(target1barWasCalled, []);\n\n  queue.flush();\n\n  assert.deepEqual(target1fooWasCalled.length, 1, 'expected: target 1.foo to be called only once');\n  assert.deepEqual(target1fooWasCalled[0], ['a']);\n  assert.deepEqual(target1barWasCalled.length, 1, 'expected: target 1.bar to be called only once');\n  assert.deepEqual(target1barWasCalled[0], ['b']);\n});\n\nQUnit.test('pushUnique: 1 target, 1 diffe`rent methods called twice', function(assert) {\n  let queue = new Queue('foo', {});\n  let target1fooWasCalled: string[][] = [];\n  let target1 = {\n    foo: function() {\n      target1fooWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo, ['a']);\n  queue.pushUnique(target1, target1.foo, ['b']);\n\n  assert.deepEqual(target1fooWasCalled, []);\n\n  queue.flush();\n\n  assert.deepEqual(target1fooWasCalled.length, 1, 'expected: target 1.foo to be called only once');\n  assert.deepEqual(target1fooWasCalled[0], ['b']);\n});\n\nQUnit.test('pushUnique: 1 target, 2 different methods, second one called twice', function(assert) {\n  let queue = new Queue('foo', {});\n  let target1barWasCalled: string[][] = [];\n  let target1 = {\n    foo: function() {\n    },\n    bar: function() {\n      target1barWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo);\n  queue.pushUnique(target1, target1.bar, ['a']);\n  queue.pushUnique(target1, target1.bar, ['b']);\n\n  assert.deepEqual(target1barWasCalled, []);\n\n  queue.flush();\n\n  assert.deepEqual(target1barWasCalled.length, 1, 'expected: target 1.bar to be called only once');\n});\n\nQUnit.test('pushUnique: 2 different targets', function(assert) {\n  let queue = new Queue('foo', {});\n\n  let target1fooWasCalled: string[][] = [];\n  let target2fooWasCalled: string[][] = [];\n  let target1 = {\n    foo: function() {\n      target1fooWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  let target2 = {\n    foo: function() {\n      target2fooWasCalled.push(slice.call(arguments));\n    }\n  };\n  queue.pushUnique(target1, target1.foo, ['a']);\n  queue.pushUnique(target2, target2.foo, ['b']);\n\n  assert.deepEqual(target1fooWasCalled, []);\n  assert.deepEqual(target2fooWasCalled, []);\n\n  queue.flush();\n\n  assert.deepEqual(target1fooWasCalled.length, 1, 'expected: target 1.foo to be called only once');\n  assert.deepEqual(target1fooWasCalled[0], ['a']);\n  assert.deepEqual(target2fooWasCalled.length, 1, 'expected: target 2.foo to be called only once');\n  assert.deepEqual(target2fooWasCalled[0], ['b']);\n});\n\nQUnit.test('pushUnique: 1 target, 2 different methods', function(assert) {\n  let queue = new Queue('foo', {});\n  let target1fooWasCalled: string[][] = [];\n  let target1barWasCalled: string[][] = [];\n  let target1 = {\n    foo: function() {\n      target1fooWasCalled.push(slice.call(arguments));\n    },\n    bar: function() {\n      target1barWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo, ['a']);\n  queue.pushUnique(target1, target1.bar, ['b']);\n\n  assert.deepEqual(target1fooWasCalled, []);\n  assert.deepEqual(target1barWasCalled, []);\n\n  queue.flush();\n\n  assert.deepEqual(target1fooWasCalled.length, 1, 'expected: target 1.foo to be called only once');\n  assert.deepEqual(target1fooWasCalled[0], ['a']);\n  assert.deepEqual(target1barWasCalled.length, 1, 'expected: target 1.bar to be called only once');\n  assert.deepEqual(target1barWasCalled[0], ['b']);\n});\n\nQUnit.test('pushUnique: 1 target, 1 different methods called twice', function(assert) {\n  let queue = new Queue('foo', {});\n  let target1fooWasCalled: string[][] = [];\n  let target1 = {\n    foo: function() {\n      target1fooWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo, ['a']);\n  queue.pushUnique(target1, target1.foo, ['b']);\n\n  assert.deepEqual(target1fooWasCalled, []);\n\n  queue.flush();\n\n  assert.deepEqual(target1fooWasCalled.length, 1, 'expected: target 1.foo to be called only once');\n  assert.deepEqual(target1fooWasCalled[0], ['b']);\n});\n\nQUnit.test('pushUnique: 1 target, 2 different methods, second one called twice', function(assert) {\n  let queue = new Queue('foo', {});\n\n  let target1barWasCalled: string[][] = [];\n  let target1 = {\n    foo: function() {\n    },\n    bar: function() {\n      target1barWasCalled.push(slice.call(arguments));\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo);\n  queue.pushUnique(target1, target1.bar, ['a']);\n  queue.pushUnique(target1, target1.bar, ['b']);\n\n  assert.deepEqual(target1barWasCalled, []);\n\n  queue.flush();\n\n  assert.equal(target1barWasCalled.length, 1, 'expected: target 1.bar to be called only once');\n});\n\nQUnit.test('can cancel property', function(assert) {\n  let queue = new Queue('foo', {});\n\n  let target1fooWasCalled: number = 0;\n  let target2fooWasCalled: number = 0;\n  let target1 = {\n    foo: function() {\n      target1fooWasCalled++;\n    }\n  };\n\n  let target2 = {\n    foo: function() {\n      target2fooWasCalled++;\n    }\n  };\n\n  let timer1 = queue.pushUnique(target1, target1.foo);\n  let timer2 = queue.pushUnique(target2, target2.foo);\n\n  queue.cancel(timer2);\n  queue.cancel(timer1);\n\n  queue.pushUnique(target1, target1.foo);\n  queue.pushUnique(target1, target1.foo);\n  queue.pushUnique(target2, target2.foo);\n  queue.pushUnique(target2, target2.foo);\n\n  queue.flush();\n\n  assert.equal(target1fooWasCalled, 1);\n  assert.equal(target2fooWasCalled, 1);\n});\n\nQUnit.test('pushUnique: 1 target, 1 method called twice, canceled 2 call', function(assert) {\n  let queue = new Queue('foo');\n  let invocationArgs: string[][] = [];\n  let target1 = {\n    foo: function() {\n      invocationArgs.push(...arguments);\n    }\n  };\n\n  queue.pushUnique(target1, target1.foo, ['a']);\n  let timer = queue.pushUnique(target1, target1.foo, ['b']);\n\n  assert.deepEqual(invocationArgs, [], 'precond - empty initially');\n\n  queue.cancel(timer);\n\n  queue.flush();\n\n  assert.deepEqual(invocationArgs, [], 'still has not been invoked');\n});\n","import Backburner from 'backburner';\n\nQUnit.module('tests/queue');\n\nQUnit.test('actions scheduled on previous queue, start over from beginning', function(assert) {\n  assert.expect(5);\n\n  let bb = new Backburner(['one', 'two']);\n  let step = 0;\n\n  bb.run(function() {\n    assert.equal(step++, 0, '0');\n\n    bb.schedule('two', null, function() {\n      assert.equal(step++, 1, '1');\n\n      bb.schedule('one', null, function() {\n        assert.equal(step++, 3, '3');\n      });\n    });\n\n    bb.schedule('two', null, function() {\n      assert.equal(step++, 2, '2');\n    });\n  });\n\n  assert.equal(step, 4, '4');\n});\n\nQUnit.test('Queue#flush should be recursive if new items are added', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let count = 0;\n\n  bb.run(function() {\n    function increment() {\n      if (++count < 3) {\n        bb.schedule('one', increment);\n      }\n\n      if (count === 3) {\n\n        bb.schedule('one', increment);\n      }\n    }\n\n    increment();\n    assert.equal(count, 1, 'should not have run yet');\n\n    let currentInstance = bb.currentInstance;\n    if (currentInstance) {\n      currentInstance.queues.one.flush();\n    }\n    assert.equal(count, 4, 'should have run all scheduled methods, even ones added during flush');\n  });\n\n});\n\nQUnit.test('Default queue is automatically set to first queue if none is provided', function(assert) {\n  let bb = new Backburner(['one', 'two']);\n  assert.equal(bb.defaultQueue, 'one');\n});\n\nQUnit.test('Default queue can be manually configured', function(assert) {\n  let bb = new Backburner(['one', 'two'], {\n    defaultQueue: 'two'\n  });\n\n  assert.equal(bb.defaultQueue, 'two');\n});\n\nQUnit.test('onBegin and onEnd are called and passed the correct parameters', function(assert) {\n  assert.expect(2);\n\n  let befores: (any | null | undefined)[] = [];\n  let afters: (any | null | undefined)[] = [];\n  let expectedBefores: (any | null | undefined)[] = [];\n  let expectedAfters: (any | null | undefined)[] = [];\n  let outer: any;\n  let inner: any;\n\n  let bb = new Backburner(['one'], {\n    onBegin: function(current, previous) {\n      befores.push(current);\n      befores.push(previous);\n    },\n    onEnd: function(current, next) {\n      afters.push(current);\n      afters.push(next);\n    }\n  });\n\n  bb.run(function() {\n    outer = bb.currentInstance;\n    bb.run(function() {\n      inner = bb.currentInstance;\n    });\n  });\n\n  expectedBefores = [outer, null, inner, outer];\n  expectedAfters = [inner, outer, outer, null];\n\n  assert.deepEqual(befores, expectedBefores, 'before callbacks successful');\n  assert.deepEqual(afters, expectedAfters, 'after callback successful');\n});\n","import Backburner from 'backburner';\n\nQUnit.module('tests/run');\n\nQUnit.test('when passed a function', function(assert) {\n  assert.expect(1);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => functionWasCalled = true);\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('when passed a target and method', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run({zomg: 'hi'}, function() {\n    assert.equal(this.zomg, 'hi', 'the target was properly set');\n    functionWasCalled = true;\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('when passed a target, method, and arguments', function(assert) {\n  assert.expect(5);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run({zomg: 'hi'}, function(a, b, c) {\n    assert.equal(this.zomg, 'hi', 'the target was properly set');\n    assert.equal(a, 1, 'the first arguments was passed in');\n    assert.equal(b, 2, 'the second arguments was passed in');\n    assert.equal(c, 3, 'the third arguments was passed in');\n    functionWasCalled = true;\n  }, 1, 2, 3);\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n\nQUnit.test('nesting run loops preserves the stack', function(assert) {\n  assert.expect(10);\n\n  let bb = new Backburner(['one']);\n  let outerBeforeFunctionWasCalled = false;\n  let middleBeforeFunctionWasCalled = false;\n  let innerFunctionWasCalled = false;\n  let middleAfterFunctionWasCalled = false;\n  let outerAfterFunctionWasCalled = false;\n\n  bb.run(() => {\n    bb.schedule('one', () => {\n      outerBeforeFunctionWasCalled = true;\n    });\n\n    bb.run(() => {\n      bb.schedule('one', () => {\n        middleBeforeFunctionWasCalled = true;\n      });\n\n      bb.run(() => {\n        bb.schedule('one', () => {\n          innerFunctionWasCalled = true;\n        });\n        assert.ok(!innerFunctionWasCalled, 'function is deferred');\n      });\n      assert.ok(innerFunctionWasCalled, 'function is called');\n\n      bb.schedule('one', () => {\n        middleAfterFunctionWasCalled = true;\n      });\n\n      assert.ok(!middleBeforeFunctionWasCalled, 'function is deferred');\n      assert.ok(!middleAfterFunctionWasCalled, 'function is deferred');\n    });\n\n    assert.ok(middleBeforeFunctionWasCalled, 'function is called');\n    assert.ok(middleAfterFunctionWasCalled, 'function is called');\n\n    bb.schedule('one', () => {\n      outerAfterFunctionWasCalled = true;\n    });\n\n    assert.ok(!outerBeforeFunctionWasCalled, 'function is deferred');\n    assert.ok(!outerAfterFunctionWasCalled, 'function is deferred');\n  });\n\n  assert.ok(outerBeforeFunctionWasCalled, 'function is called');\n  assert.ok(outerAfterFunctionWasCalled, 'function is called');\n});\n\nQUnit.test('runs can be nested', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let step = 0;\n\n  bb.run(() => {\n    assert.equal(step++, 0);\n\n    bb.run(() => {\n      assert.equal(step++, 1);\n    });\n  });\n});\n\nQUnit.test('run returns value', function(assert) {\n  let bb = new Backburner(['one']);\n  let value = bb.run(() => 'hi');\n\n  assert.equal(value, 'hi');\n});\n\nQUnit.test('onError', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('QUnit.test error', error.message);\n  }\n\n  let bb = new Backburner(['errors'], {\n    onError: onError\n  });\n\n  bb.run(() => {\n    throw new Error('QUnit.test error');\n  });\n});\n\nQUnit.test('onError set after start', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['errors']);\n\n  bb.run(() => assert.ok(true));\n\n  bb.options.onError = function(error) {\n    assert.equal('QUnit.test error', error.message);\n  };\n\n  bb.run(() => { throw new Error('QUnit.test error'); });\n});\n\nQUnit.test('onError with target and action', function(assert) {\n  assert.expect(3);\n\n  let target = {};\n\n  let bb = new Backburner(['errors'], {\n    onErrorTarget: target,\n    onErrorMethod: 'onerror'\n  });\n\n  bb.run(() => assert.ok(true));\n\n  target['onerror'] = function(error) {\n    assert.equal('QUnit.test error', error.message);\n  };\n\n  bb.run(() => { throw new Error('QUnit.test error'); });\n\n  target['onerror'] = function() { };\n\n  bb.run(() => { throw new Error('QUnit.test error'); });\n\n  target['onerror'] = function(error) {\n    assert.equal('QUnit.test error', error.message);\n  };\n\n  bb.run(() => { throw new Error('QUnit.test error'); });\n});\n\nQUnit.test('when [callback, string] args passed', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(function(name) {\n    assert.equal(name, 'batman');\n    functionWasCalled = true;\n  }, 'batman');\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n","import Backburner from 'backburner';\n\nQUnit.module('tests/throttle');\n\nQUnit.test('throttle', function(assert) {\n  assert.expect(18);\n\n  let bb = new Backburner(['zomg']);\n  let step = 0;\n  let done = assert.async();\n\n  let wasCalled = false;\n  function throttler() {\n    assert.ok(!wasCalled);\n    wasCalled = true;\n  }\n\n  // let's throttle the function `throttler` for 40ms\n  // it will be executed in 40ms\n  bb.throttle(null, throttler, 40, false);\n  assert.equal(step++, 0);\n\n  // let's schedule `throttler` to run in 10ms\n  setTimeout(() => {\n    assert.equal(step++, 1);\n    assert.ok(!wasCalled);\n    bb.throttle(null, throttler, false);\n  }, 10);\n\n  // let's schedule `throttler` to run again in 20ms\n  setTimeout(() => {\n    assert.equal(step++, 2);\n    assert.ok(!wasCalled);\n    bb.throttle(null, throttler, false);\n  }, 20);\n\n  // let's schedule `throttler` to run yet again in 30ms\n  setTimeout(() => {\n    assert.equal(step++, 3);\n    assert.ok(!wasCalled);\n    bb.throttle(null, throttler, false);\n  }, 30);\n\n  // at 40ms, `throttler` will get called once\n\n  // now, let's schedule an assertion to occur at 50ms,\n  // 10ms after `throttler` has been called\n  setTimeout(() => {\n    assert.equal(step++, 4);\n    assert.ok(wasCalled);\n  }, 50);\n\n  // great, we've made it this far, there's one more thing\n  // we need to test. we want to make sure we can call `throttle`\n  // again with the same target/method after it has executed\n  // at the 60ms mark, let's schedule another call to `throttle`\n  setTimeout(() => {\n    wasCalled = false; // reset the flag\n\n    // assert call order\n    assert.equal(step++, 5);\n\n    // call throttle for the second time\n    bb.throttle(null, throttler, 100, false);\n\n    // assert that it is called in the future and not blackholed\n    setTimeout(() => {\n      assert.equal(step++, 6);\n      assert.ok(wasCalled, 'Another throttle call with the same function can be executed later');\n    }, 110);\n  }, 60);\n\n  setTimeout(() => {\n    wasCalled = false; // reset the flag\n\n    // assert call order\n    assert.equal(step++, 7);\n\n    // call throttle again that time using a string number like time interval\n    bb.throttle(null, throttler, '100', false);\n\n    // assert that it is called in the future and not blackholed\n    setTimeout(() => {\n      assert.equal(step++, 8);\n      assert.ok(wasCalled, 'Throttle accept a string number like time interval');\n      done();\n    }, 110);\n  }, 180);\n});\n\nQUnit.test('throttle with cancelTimers', function(assert) {\n  assert.expect(1);\n\n  let count = 0;\n  let bb = new Backburner(['zomg']);\n\n  // Throttle a no-op 10ms\n  bb.throttle(null, () => { /* no-op */ }, 10, false);\n\n  try {\n    bb.cancelTimers();\n  } catch (e) {\n    count++;\n  }\n\n  assert.equal(count, 0, 'calling cancelTimers while something is being throttled does not throw an error');\n});\n\nQUnit.test('throttled function is called with final argument', function(assert) {\n  assert.expect(1);\n  let done = assert.async();\n\n  let count = 0;\n  let bb = new Backburner(['zomg']);\n\n  function throttled(arg) {\n    assert.equal(arg, 'bus');\n    done();\n  }\n\n  bb.throttle(null, throttled, 'car' , 10, false);\n  bb.throttle(null, throttled, 'bicycle' , 10, false);\n  bb.throttle(null, throttled, 'bus' , 10, false);\n});\n\nQUnit.test('throttle returns same timer', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['joker']);\n\n  function throttled1() {}\n  function throttled2() {}\n\n  let timer1 = bb.throttle(null, throttled1, 10);\n  let timer2 = bb.throttle(null, throttled2, 10);\n  let timer3 = bb.throttle(null, throttled1, 10);\n  let timer4 = bb.throttle(null, throttled2, 10);\n\n  assert.equal(timer1, timer3);\n  assert.equal(timer2, timer4);\n});\n\nQUnit.test('throttle leading edge', function(assert) {\n  assert.expect(10);\n\n  let bb = new Backburner(['zerg']);\n  let throttle;\n  let throttle2;\n  let wasCalled = false;\n  let done = assert.async();\n\n  function throttler() {\n    assert.ok(!wasCalled, 'throttler hasn\\'t been called yet');\n    wasCalled = true;\n  }\n\n  // let's throttle the function `throttler` for 40ms\n  // it will be executed immediately, but throttled for the future hits\n  throttle = bb.throttle(null, throttler, 40);\n\n  assert.ok(wasCalled, 'function was executed immediately');\n\n  wasCalled = false;\n  // let's schedule `throttler` to run again, it shouldn't be allowed to queue for another 40 msec\n  throttle2 = bb.throttle(null, throttler, 40);\n\n  assert.equal(throttle, throttle2, 'No new throttle was inserted, returns old throttle');\n\n  setTimeout(() => {\n    assert.ok(!wasCalled, 'attempt to call throttle again didn\\'t happen');\n\n    throttle = bb.throttle(null, throttler, 40);\n    assert.ok(wasCalled, 'newly inserted throttle after timeout functioned');\n\n    assert.ok(bb.cancel(throttle), 'wait time of throttle was cancelled');\n\n    wasCalled = false;\n    throttle2 = bb.throttle(null, throttler, 40);\n    assert.notEqual(throttle, throttle2, 'the throttle is different');\n    assert.ok(wasCalled, 'throttle was inserted and run immediately after cancel');\n    done();\n  }, 60);\n});\n\nQUnit.test('throttle returns timer information usable for cancelling', function(assert) {\n  assert.expect(3);\n\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let wasCalled = false;\n\n  function throttler() {\n    assert.ok(false, 'this method shouldn\\'t be called');\n    wasCalled = true;\n  }\n\n  let timer = bb.throttle(null, throttler, 1, false);\n\n  assert.ok(bb.cancel(timer), 'the timer is cancelled');\n\n  // should return false second time around\n  assert.ok(!bb.cancel(timer), 'the timer no longer exists in the list');\n\n  setTimeout(() => {\n    assert.ok(!wasCalled, 'the timer wasn\\'t called after waiting');\n    done();\n  }, 60);\n});\n\nQUnit.test('throttler cancel after it\\'s executed returns false', function(assert) {\n  assert.expect(3);\n\n  let bb = new Backburner(['darkknight']);\n  let done = assert.async();\n\n  let wasCalled = false;\n\n  function throttler() {\n    assert.ok(true, 'the throttled method was called');\n    wasCalled = true;\n  }\n\n  let timer = bb.throttle(null, throttler, 1);\n\n  setTimeout(() => {\n    assert.ok(!bb.cancel(timer), 'no timer existed to cancel');\n    assert.ok(wasCalled, 'the timer was actually called');\n    done();\n  }, 10);\n});\n\nQUnit.test('throttler returns the appropriate timer to cancel if the old item still exists', function(assert) {\n  assert.expect(5);\n\n  let bb = new Backburner(['robin']);\n  let wasCalled = false;\n  let done = assert.async();\n\n  function throttler() {\n    assert.ok(true, 'the throttled method was called');\n    wasCalled = true;\n  }\n\n  let timer = bb.throttle(null, throttler, 1);\n  let timer2 = bb.throttle(null, throttler, 1);\n\n  assert.deepEqual(timer, timer2, 'the same timer was returned');\n\n  setTimeout(() => {\n    bb.throttle(null, throttler, 1);\n    assert.ok(!bb.cancel(timer), 'the second timer isn\\'t removed, despite appearing to be the same item');\n    assert.ok(wasCalled, 'the timer was actually called');\n    done();\n  }, 10);\n\n});\n\nQUnit.test('throttle without a target, without args', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  let calledWith = new Array();\n  function throttled(...args) {\n    calledCount++;\n    calledWith.push(args);\n  }\n\n  bb.throttle(throttled, 10);\n  bb.throttle(throttled, 10);\n  bb.throttle(throttled, 10);\n  assert.equal(calledCount, 1, 'throttle method was called immediately');\n  assert.deepEqual(calledWith, [ [] ], 'throttle method was called with the correct arguments');\n\n  setTimeout(() => {\n    bb.throttle(throttled, 10);\n    assert.equal(calledCount, 1, 'throttle method was not called again within the time window');\n  }, 0);\n\n  setTimeout(() => {\n    assert.equal(calledCount, 1, 'throttle method was was only called once');\n    done();\n  }, 20);\n});\n\nQUnit.test('throttle without a target, without args - can be canceled', function(assert) {\n  let bb = new Backburner(['batman']);\n\n  let fooCalledCount = 0;\n  let barCalledCount = 0;\n  function foo() {\n    fooCalledCount++;\n  }\n  function bar() {\n    barCalledCount++;\n  }\n\n  bb.throttle(foo, 10);\n  bb.throttle(foo, 10);\n  assert.equal(fooCalledCount, 1, 'foo was called immediately, then throttle');\n\n  bb.throttle(bar, 10);\n  let timer = bb.throttle(bar, 10);\n  assert.equal(barCalledCount, 1, 'bar was called immediately, then throttle');\n\n  bb.cancel(timer);\n  bb.throttle(bar, 10);\n  assert.equal(barCalledCount, 2, 'after canceling the prior throttle, bar was called again');\n});\n\nQUnit.test('throttle without a target, without args, not immediate', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  let calledWith = new Array();\n  function throttled(...args) {\n    calledCount++;\n    calledWith.push(args);\n  }\n\n  bb.throttle(throttled, 10, false);\n  bb.throttle(throttled, 10, false);\n  bb.throttle(throttled, 10, false);\n  assert.equal(calledCount, 0, 'throttle method was not called immediately');\n\n  setTimeout(() => {\n    assert.equal(calledCount, 0, 'throttle method was not called in next tick');\n    bb.throttle(throttled, 10, false);\n  }, 0);\n\n  setTimeout(() => {\n    assert.equal(calledCount, 1, 'throttle method was was only called once');\n    assert.deepEqual(calledWith, [ [] ], 'throttle method was called with the correct arguments');\n    done();\n  }, 20);\n});\n\nQUnit.test('throttle without a target, without args, not immediate - can be canceled', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n\n  let fooCalledCount = 0;\n  let barCalledCount = 0;\n  function foo() {\n    fooCalledCount++;\n  }\n  function bar() {\n    barCalledCount++;\n  }\n\n  bb.throttle(foo, 10, false);\n  bb.throttle(foo, 10, false);\n  assert.equal(fooCalledCount, 0, 'foo was not called immediately');\n\n  bb.throttle(bar, 10, false);\n  let timer = bb.throttle(bar, 10, false);\n  assert.equal(barCalledCount, 0, 'bar was not called immediately');\n\n  setTimeout(() => {\n    assert.equal(fooCalledCount, 0, 'foo was not called within the time window');\n    assert.equal(barCalledCount, 0, 'bar was not called within the time window');\n\n    bb.cancel(timer);\n  }, 0);\n\n  setTimeout(() => {\n    assert.equal(fooCalledCount, 1, 'foo ran');\n    assert.equal(barCalledCount, 0, 'bar was properly canceled');\n\n    bb.throttle(bar, 10, false);\n\n    setTimeout(() => {\n      assert.equal(barCalledCount, 1, 'bar was able to run after being canceled');\n      done();\n    }, 20);\n  }, 20);\n});\n\nQUnit.test('throttle without a target, with args', function(assert) {\n  let bb = new Backburner(['batman']);\n  let calledWith: object[] = [];\n  function throttled(first) {\n    calledWith.push(first);\n  }\n\n  let foo = { isFoo: true };\n  let bar = { isBar: true };\n  let baz = { isBaz: true };\n  bb.throttle(throttled, foo, 10);\n  bb.throttle(throttled, bar, 10);\n  bb.throttle(throttled, baz, 10);\n\n  assert.deepEqual(calledWith, [{ isFoo: true }], 'throttle method was only called once, with correct argument');\n});\n\nQUnit.test('throttle without a target, with args - can be canceled', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  let calledWith: object[] = [];\n  function throttled(first) {\n    calledCount++;\n    calledWith.push(first);\n  }\n\n  let foo = { isFoo: true };\n  let bar = { isBar: true };\n  let baz = { isBaz: true };\n  let qux = { isQux: true };\n  bb.throttle(throttled, foo, 10);\n  bb.throttle(throttled, bar, 10);\n  let timer = bb.throttle(throttled, baz, 10);\n\n  assert.deepEqual(calledWith, [{ isFoo: true }], 'throttle method was only called once, with correct argument');\n\n  setTimeout(() => {\n    bb.cancel(timer);\n    bb.throttle(throttled, qux, 10, true);\n    assert.deepEqual(calledWith, [{ isFoo: true }, { isQux: true }], 'throttle method was called again after canceling prior timer');\n  }, 0);\n\n  setTimeout(() => {\n    assert.deepEqual(calledWith, [{ isFoo: true }, { isQux: true }], 'throttle method was not called again');\n    done();\n  }, 20);\n});\n\nQUnit.test('throttle without a target, with args, not immediate', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledWith: object[] = [];\n  function throttler(first) {\n    calledWith.push(first);\n  }\n\n  let foo = { isFoo: true };\n  let bar = { isBar: true };\n  let baz = { isBaz: true };\n  bb.throttle(throttler, foo, 10, false);\n  bb.throttle(throttler, bar, 10, false);\n  bb.throttle(throttler, baz, 10, false);\n  assert.deepEqual(calledWith, [], 'throttler was not called immediately');\n\n  setTimeout(() => {\n    assert.deepEqual(calledWith, [{ isBaz: true }], 'debounce method was only called once, with correct argument');\n    done();\n  }, 20);\n});\n\nQUnit.test('throttle without a target, with args, not immediate - can be canceled', function(assert) {\n  let done = assert.async();\n  let bb = new Backburner(['batman']);\n  let calledCount = 0;\n  let calledWith: object[] = [];\n  function throttled(first) {\n    calledCount++;\n    calledWith.push(first);\n  }\n\n  let foo = { isFoo: true };\n  let bar = { isBar: true };\n  let baz = { isBaz: true };\n  bb.throttle(throttled, foo, 10, false);\n  bb.throttle(throttled, bar, 10, false);\n  let timer = bb.throttle(throttled, baz, 10, false);\n  assert.equal(calledCount, 0, 'throttle method was not called immediately');\n\n  setTimeout(() => {\n    assert.deepEqual(calledWith, [], 'throttle method has not been called on next tick');\n    bb.cancel(timer);\n  }, 0);\n\n  setTimeout(() => {\n    assert.deepEqual(calledWith, [], 'throttle method is not called when canceled');\n    done();\n  }, 20);\n});\n\nQUnit.test('onError', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('test error', error.message);\n  }\n\n  let bb = new Backburner(['errors'], {\n    onError: onError\n  });\n\n  bb.throttle(null, () => {\n    throw new Error('test error');\n  }, 20);\n});\n\nQUnit.test('throttle + immediate joins existing run loop instances', function(assert) {\n  assert.expect(1);\n\n  function onError(error) {\n    assert.equal('test error', error.message);\n  }\n\n  let bb = new Backburner(['errors'], {\n    onError: onError\n  });\n\n  bb.run(() => {\n    let parentInstance = bb.currentInstance;\n    bb.throttle(null, () => {\n     assert.equal(bb.currentInstance, parentInstance);\n    }, 20, true);\n  });\n});\n\nQUnit.test('when [callback, string] args passed', function(assert) {\n  assert.expect(2);\n\n  let bb = new Backburner(['one']);\n  let functionWasCalled = false;\n\n  bb.run(() => {\n    bb.throttle(function(name) {\n      assert.equal(name, 'batman');\n      functionWasCalled = true;\n    }, 'batman', 200);\n  });\n\n  assert.ok(functionWasCalled, 'function was called');\n});\n"],"names":["const","let","Backburner","global","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","this","type","require$$6","require$$7","require$$8","require$$9","globalObject","lolex","flush","buildPlatform","fakeClock","originalDateValueOf","slice"],"mappings":";;;;IAEAA,IAAM,kBAAkB,GAAG,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAE7E,KAAK,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;IAEnC,KAAK,CAAC,IAAI,CAAC,6CAA6C,EAAE,UAAS,MAAM;QACvEC,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,uBAAQ,SAAS,IAAI,IAAC,CAAC,CAAA;YACxC,EAAE,CAAC,QAAQ,CAAC,KAAK,uBAAQ,SAAS,IAAI,IAAC,CAAC,CAAA;SACzC,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,EAAE,qDAAqD,CAAC,CAAC;QAExF,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC;QAEvB,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,uBAAQ,SAAS,IAAI,IAAC,CAAC,CAAA;YACxC,EAAE,CAAC,QAAQ,CAAC,KAAK,uBAAQ,SAAS,IAAI,IAAC,CAAC,CAAA;SACzC,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,EAAE,oDAAoD,CAAC,CAAC;IACzF,CAAC,CAAC,CAAC;IAEH,kBAAkB,CAAC,0DAA0D,EAAE,UAAS,MAAM;QAC5FA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,QAAQ,CAAC,KAAK,iBAAU,CAAC,CAAC;QAE7B,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe,KAAK,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,EAAE,0BAA0B,CAAC,CAAC;QAE/H,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC;QAEvB,EAAE,CAAC,QAAQ,CAAC,KAAK,iBAAU,CAAC,CAAC;QAE7BF,IAAM,IAAI,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACnF,MAAM,CAAC,IAAI,CAAC,CAAC,EAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,CAAA,EAAE,gCAAgC,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,uDAAuD,EAAE,UAAS,MAAM;QACjFC,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1B,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC;QAEvB,EAAE,CAAC,KAAK;YACN,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAA;YACjC,IAAI,EAAE,CAAA;SACP,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAGH,kBAAkB,CAAC,sDAAsD,EAAE,UAAS,MAAM;QACxFA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,KAAK;YACNF,IAAM,IAAI,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACzF,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe,KAAK,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,SAAS,CAAC,EAAE,2BAA2B,CAAC,CAAA;YACrI,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAGH,kBAAkB,CAAC,uDAAuD,EAAE,UAAS,MAAM;QACzFC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjC,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC;QAEvB,EAAE,CAAC,KAAK;YACNF,IAAM,IAAI,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACzF,MAAM,CAAC,IAAI,CAAC,CAAC,EAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,CAAA,EAAE,uEAAuE,CAAC,CAAA;YACjG,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC,CAAC;;;;;;;;ICxEF;IACA;IACA;IACA;IACA;IACA,IAAI,YAAY,CAAC;AACjB;IACA;IACA,IAAI,OAAOG,cAAM,KAAK,WAAW,EAAE;IACnC;IACA,IAAI,YAAY,GAAGA,cAAM,CAAC;IAC1B,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IAC1C;IACA,IAAI,YAAY,GAAG,MAAM,CAAC;IAC1B,CAAC,MAAM;IACP;IACA,IAAI,YAAY,GAAG,IAAI,CAAC;IACxB,CAAC;AACD;IACA,YAAc,GAAG,YAAY;;ICnB7B,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AACzB;IACA,iBAAc,GAAG,SAAS,oBAAoB,CAAC,SAAS,EAAE;IAC1D;IACA,IAAI,OAAO,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,SAAS,MAAM,EAAE,IAAI,EAAE;IAC/E;IACA,QAAQ;IACR,YAAY,IAAI,KAAK,MAAM;IAC3B,YAAY,IAAI,KAAK,QAAQ;IAC7B,YAAY,IAAI,KAAK,QAAQ;IAC7B,YAAY,IAAI,KAAK,WAAW;IAChC,YAAY,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,UAAU;IACjD,UAAU;IACV,YAAY,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACtD,SAAS;AACT;IACA,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC;;IChBD,SAAc,GAAG,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC;;ICF/C,IAAI,KAAK,GAAGC,KAA6B,CAAC,KAAK,CAAC;AAChD;IACA;IACA;IACA;IACA,SAAS,YAAY,CAAC,OAAO,EAAE,GAAG,EAAE;IACpC,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,SAAS,EAAE;IACvC,QAAQ,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAC5B,KAAK;AACL;IACA,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC;IAC3C,CAAC;AACD;IACA;IACA;IACA;IACA,SAAS,kBAAkB,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE;IACxD,IAAI,IAAI,gBAAgB,GAAG,IAAI,CAAC;AAChC;IACA,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;IACpC,QAAQ,gBAAgB,GAAG,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,KAAK;AACL;IACA,IAAI,IAAI,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,gBAAgB,EAAE;IACxD,QAAQ,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7B,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,aAAa,CAAC,KAAK,EAAE;IAC9B,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC;IACrB;IACA,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC;AAC1D;IACA,IAAI,OAAO,KAAK,CAAC,MAAM,EAAE,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;IACjE,CAAC;AACD;IACA,mBAAc,GAAG,aAAa;;ICtD9B;IACA;IACA;IACA;IACA;IACA;IACA,gBAAc,GAAG,SAAS,YAAY,CAAC,IAAI,EAAE;IAC7C,IAAI,IAAI,CAAC,IAAI,EAAE;IACf,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK;AACL;IACA,IAAI,IAAI;IACR,QAAQ;IACR,YAAY,IAAI,CAAC,WAAW;IAC5B,YAAY,IAAI,CAAC,IAAI;IACrB;IACA;IACA;IACA;IACA,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAC/D,UAAU;IACV,KAAK,CAAC,OAAO,CAAC,EAAE;IAChB;IACA;IACA,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK;IACL,CAAC;;ICxBD;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,SAAS,CAAC,KAAK,EAAE;IAC1B,IAAI;IACJ,QAAQ,CAAC,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI;IACpD;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,OAAO,KAAK,CAAC,WAAW,KAAK,UAAU;IAChD;IACA,YAAY,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC5C,QAAQ,IAAI;IACZ,MAAM;IACN,CAAC;AACD;IACA,eAAc,GAAG,SAAS;;;AC1B1B,AAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;IACnC,IAAI,IAAI,OAAO,GAAG,WAAW;IAC7B,QAAQ,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAClC,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,KAAK,CAAC;IACN,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;IACxB,QAAQ,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC3C,KAAK;IACL,IAAI,OAAO,OAAO,CAAC;IACnB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,kBAAkB,GAAG,SAAS,WAAW,EAAE,QAAQ,EAAE;IACrD,IAAI;IACJ,QAAQ,WAAW;IACnB,QAAQ,GAAG;IACX,QAAQ,QAAQ;IAChB,QAAQ,gFAAgF;IACxF,QAAQ,WAAW;IACnB,QAAQ,GAAG;IACX,MAAM;IACN,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,oBAAoB,GAAG,SAAS,GAAG,EAAE;IACrC;IACA,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,WAAW,EAAE;IAC5D;IACA,QAAQ,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACjC,KAAK,MAAM,IAAI,OAAO,CAAC,IAAI,EAAE;IAC7B,QAAQ,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1B,KAAK,MAAM;IACX,QAAQ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACzB,KAAK;IACL,CAAC;;;;;;ICvDD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,WAAc,GAAG,SAAS,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE;IACzC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC;AACpB;IACA,IAAI,IAAI;IACR;IACA,QAAQ,GAAG,CAAC,OAAO,CAAC,WAAW;IAC/B,YAAY,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;IAC5C;IACA,gBAAgB,MAAM,IAAI,KAAK,EAAE,CAAC;IAClC,aAAa;IACb,SAAS,CAAC,CAAC;IACX,KAAK,CAAC,OAAO,CAAC,EAAE;IAChB,QAAQ,IAAI,GAAG,KAAK,CAAC;IACrB,KAAK;AACL;IACA,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;;ICxBD,IAAI,IAAI,GAAGA,KAA6B,CAAC,IAAI,CAAC;IAC9C,IAAI,KAAK,GAAGA,KAA6B,CAAC,KAAK,CAAC;AAChD;IACA;IACA;IACA;IACA,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;IAC1B;IACA,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;IAC5C,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;AAC5C;IACA,IAAI,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,gBAAgB,CAAC,KAAK,EAAE;IACjC,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;IAC1C,CAAC;AACD;IACA,sBAAc,GAAG,gBAAgB;;IC/BjC,aAAc,GAAG,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC;;ICAlD,OAAc,GAAG,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC;;ICA7C,UAAc,GAAG,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC;;ICAhD,OAAc,GAAG,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC;;ICA7C,UAAc,GAAG,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC;;ICFhD,cAAc,GAAG;IACjB,IAAI,KAAK,EAAEA,KAAkB;IAC7B,IAAI,QAAQ,EAAEC,SAAqB;IACnC,IAAI,GAAG,EAAEC,GAAgB;IACzB,IAAI,MAAM,EAAEC,MAAmB;IAC/B,IAAI,GAAG,EAAEC,GAAgB;IACzB,IAAI,MAAM,EAAEC,MAAmB;IAC/B,CAAC;;;ICTD,CAAC,UAAU,MAAM,EAAE,OAAO,EAAE;IAC5B,CAAC,CAA+D,cAAc,GAAG,OAAO,EAAE,CAE1D,CAAC;IACjC,CAAC,CAACC,cAAI,GAAG,YAAY,CACrB;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,aAAa,GAAG,OAAO,OAAO,KAAK,UAAU,CAAC;AAClD;IACA;IACA,IAAI,YAAY,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,GAAGP,cAAM,CAAC;AAC5D;IACA,IAAI,YAAY,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC;IACjD,IAAI,SAAS,GAAG,OAAO,GAAG,KAAK,WAAW,CAAC;IAC3C,IAAI,SAAS,GAAG,OAAO,GAAG,KAAK,WAAW,CAAC;IAC3C,IAAI,aAAa,GAAG,OAAO,OAAO,KAAK,WAAW,CAAC;IACnD,IAAI,aAAa,GAAG,OAAO,OAAO,KAAK,WAAW,CAAC;IACnD,IAAI,cAAc,GAAG,OAAO,QAAQ,KAAK,WAAW,CAAC;IACrD,IAAI,oBAAoB,GAAG,YAAY,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW,CAAC;IAClF,IAAI,uBAAuB,GAAG,YAAY,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,WAAW,CAAC;IACxF,IAAI,gBAAgB,GAAG,SAAS,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,CAAC;IAChF,IAAI,gBAAgB,GAAG,SAAS,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,CAAC;IAChF,IAAI,oBAAoB,GAAG,gBAAgB,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1F,IAAI,oBAAoB,GAAG,gBAAgB,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1F,IAAI,mBAAmB,GAAG,oBAAoB,IAAI,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU,CAAC;IACzG,IAAI,sBAAsB,GAAG,mBAAmB,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACjG,IAAI,oBAAoB,GAAG,oBAAoB,IAAI,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU,CAAC;IAC3G,IAAI,uBAAuB,GAAG,oBAAoB,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACnG,IAAI,uBAAuB,GAAG,CAAC,CAAC;IAChC,IAAI,wBAAwB,GAAG,CAAC,CAAC,CAAC;IAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,UAAU,CAAC,GAAG,EAAE;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,SAAS,GAAG,OAAO,GAAG,CAAC;IAC7B,EAAE,IAAI,SAAS,KAAK,QAAQ,EAAE;IAC9B,IAAI,OAAO,SAAS,CAAC;IACrB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,GAAG,KAAK,IAAI,EAAE;IACpB,IAAI,OAAO,MAAM,CAAC;IAClB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,GAAG,KAAK,YAAY,EAAE;IAC5B,IAAI,OAAO,QAAQ,CAAC;IACpB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE;IACF,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;IACtB,KAAK,uBAAuB,KAAK,KAAK,IAAI,EAAE,MAAM,CAAC,WAAW,IAAI,GAAG,CAAC,CAAC;IACvE,IAAI;IACJ,IAAI,OAAO,OAAO,CAAC;IACnB,GAAG;AACH;IACA;IACA;IACA,EAAE,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE;IACrD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ,IAAI,GAAG,KAAK,MAAM,CAAC,QAAQ,EAAE;IACxE,MAAM,OAAO,UAAU,CAAC;IACxB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ,IAAI,GAAG,KAAK,MAAM,CAAC,QAAQ,EAAE;IACxE,MAAM,OAAO,UAAU,CAAC;IACxB,KAAK;AACL;IACA,IAAI,IAAI,OAAO,MAAM,CAAC,SAAS,KAAK,QAAQ,EAAE;IAC9C;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,IAAI,OAAO,MAAM,CAAC,SAAS,CAAC,SAAS,KAAK,QAAQ;IACxD,UAAU,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;IAC9C,QAAQ,OAAO,eAAe,CAAC;IAC/B,OAAO;AACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,IAAI,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,KAAK,QAAQ;IACtD,UAAU,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE;IAC5C,QAAQ,OAAO,aAAa,CAAC;IAC7B,OAAO;IACP,KAAK;AACL;IACA,IAAI,IAAI,CAAC,OAAO,MAAM,CAAC,WAAW,KAAK,UAAU;IACjD,QAAQ,OAAO,MAAM,CAAC,WAAW,KAAK,QAAQ;IAC9C,QAAQ,GAAG,YAAY,MAAM,CAAC,WAAW,EAAE;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,IAAI,GAAG,CAAC,OAAO,KAAK,YAAY,EAAE;IACxC,QAAQ,OAAO,kBAAkB,CAAC;IAClC,OAAO;AACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,IAAI,GAAG,CAAC,OAAO,KAAK,IAAI,EAAE;IAChC,QAAQ,OAAO,0BAA0B,CAAC;IAC1C,OAAO;AACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,IAAI,GAAG,CAAC,OAAO,KAAK,IAAI,EAAE;IAChC,QAAQ,OAAO,4BAA4B,CAAC;IAC5C,OAAO;IACP,KAAK;IACL,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,SAAS,IAAI,uBAAuB,IAAI,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IACvE,EAAE,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;IACrC,IAAI,OAAO,SAAS,CAAC;IACrB,GAAG;AACH;IACA,EAAE,IAAI,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IAChD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,YAAY,KAAK,MAAM,CAAC,SAAS,EAAE;IACzC,IAAI,OAAO,QAAQ,CAAC;IACpB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,YAAY,KAAK,IAAI,CAAC,SAAS,EAAE;IACvC,IAAI,OAAO,MAAM,CAAC;IAClB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,aAAa,IAAI,YAAY,KAAK,OAAO,CAAC,SAAS,EAAE;IAC3D,IAAI,OAAO,SAAS,CAAC;IACrB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,SAAS,IAAI,YAAY,KAAK,GAAG,CAAC,SAAS,EAAE;IACnD,IAAI,OAAO,KAAK,CAAC;IACjB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,SAAS,IAAI,YAAY,KAAK,GAAG,CAAC,SAAS,EAAE;IACnD,IAAI,OAAO,KAAK,CAAC;IACjB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,aAAa,IAAI,YAAY,KAAK,OAAO,CAAC,SAAS,EAAE;IAC3D,IAAI,OAAO,SAAS,CAAC;IACrB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,aAAa,IAAI,YAAY,KAAK,OAAO,CAAC,SAAS,EAAE;IAC3D,IAAI,OAAO,SAAS,CAAC;IACrB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,cAAc,IAAI,YAAY,KAAK,QAAQ,CAAC,SAAS,EAAE;IAC7D,IAAI,OAAO,UAAU,CAAC;IACtB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,SAAS,IAAI,YAAY,KAAK,oBAAoB,EAAE;IAC1D,IAAI,OAAO,cAAc,CAAC;IAC1B,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,SAAS,IAAI,YAAY,KAAK,oBAAoB,EAAE;IAC1D,IAAI,OAAO,cAAc,CAAC;IAC1B,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,mBAAmB,IAAI,YAAY,KAAK,sBAAsB,EAAE;IACtE,IAAI,OAAO,gBAAgB,CAAC;IAC5B,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,oBAAoB,IAAI,YAAY,KAAK,uBAAuB,EAAE;IACxE,IAAI,OAAO,iBAAiB,CAAC;IAC7B,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,YAAY,KAAK,IAAI,EAAE;IAC7B,IAAI,OAAO,QAAQ,CAAC;IACpB,GAAG;AACH;IACA,EAAE,OAAO,MAAM;IACf,KAAK,SAAS;IACd,KAAK,QAAQ;IACb,KAAK,IAAI,CAAC,GAAG,CAAC;IACd,KAAK,KAAK,CAAC,uBAAuB,EAAE,wBAAwB,CAAC,CAAC;IAC9D,CAAC;AACD;IACA,OAAO,UAAU,CAAC;AAClB;IACA,CAAC,EAAE;;;IC/XH;IACA;IACA;IACA;IACA;IACA;IACA,UAAc,GAAG,SAAS,MAAM,CAAC,KAAK,EAAE;IACxC,IAAI,OAAOQ,UAAI,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;IACrC,CAAC;;ICVD;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,aAAa,CAAC,KAAK,EAAE;IAC9B,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE;IACjC;IACA,QAAQ,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;IAChC,KAAK;IACL,IAAI,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;AACD;IACA,mBAAc,GAAG,aAAa;;ICd9B,OAAc,GAAG;IACjB,IAAI,MAAM,EAAEP,QAAmB;IAC/B,IAAI,aAAa,EAAEC,eAA4B;IAC/C,IAAI,SAAS,EAAEC,WAAuB;IACtC,IAAI,UAAU,EAAEC,UAAuB;IACvC,IAAI,KAAK,EAAEC,OAAkB;IAC7B,IAAI,YAAY,EAAEC,YAA0B;IAC5C,IAAI,gBAAgB,EAAEG,kBAAgC;IACtD,IAAI,UAAU,EAAEC,UAAuB;IACvC,IAAI,MAAM,EAAEC,MAAoB;IAChC,IAAI,aAAa,EAAEC,eAA4B;IAC/C,CAAC;;ICXD,IAAIC,cAAY,GAAGZ,GAA2B,CAAC,MAAM,CAAC;AACtD;IACA;IACA,SAAS,UAAU,CAAC,OAAO,EAAE;IAC7B,IAAI,IAAI,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC;IACrE,IAAI,IAAI,aAAa,GAAG,SAAS,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IACzC,IAAI,IAAI,IAAI,GAAG,WAAW;IAC1B,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK,CAAC;IACN,IAAI,IAAI,UAAU,GAAG,WAAW;IAChC,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK,CAAC;IACN,IAAI,IAAI,aAAa,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACpD,IAAI,IAAI,qBAAqB,GAAG,OAAO,aAAa,KAAK,QAAQ,CAAC;IAClE,IAAI,IAAI,aAAa;IACrB,QAAQ,OAAO,CAAC,OAAO,IAAI,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,UAAU,CAAC;IACxE,IAAI,IAAI,mBAAmB;IAC3B,QAAQ,aAAa,IAAI,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,UAAU,CAAC;IAC7E,IAAI,IAAI,eAAe;IACvB,QAAQ,OAAO,CAAC,OAAO,IAAI,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,KAAK,UAAU,CAAC;IAC1E,IAAI,IAAI,kBAAkB;IAC1B,QAAQ,OAAO,CAAC,WAAW,IAAI,OAAO,OAAO,CAAC,WAAW,CAAC,GAAG,KAAK,UAAU,CAAC;IAC7E,IAAI,IAAI,uBAAuB;IAC/B,QAAQ,OAAO,CAAC,WAAW;IAC3B,QAAQ,CAAC,OAAO,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,qBAAqB,CAAC,CAAC;IAClE,IAAI,IAAI,qBAAqB,GAAG,OAAO,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;IACzE,IAAI,IAAI,4BAA4B;IACpC,QAAQ,OAAO,CAAC,qBAAqB;IACrC,QAAQ,OAAO,OAAO,CAAC,qBAAqB,KAAK,UAAU,CAAC;IAC5D,IAAI,IAAI,2BAA2B;IACnC,QAAQ,OAAO,CAAC,oBAAoB;IACpC,QAAQ,OAAO,OAAO,CAAC,oBAAoB,KAAK,UAAU,CAAC;IAC3D,IAAI,IAAI,0BAA0B;IAClC,QAAQ,OAAO,CAAC,mBAAmB;IACnC,QAAQ,OAAO,OAAO,CAAC,mBAAmB,KAAK,UAAU,CAAC;IAC1D,IAAI,IAAI,yBAAyB;IACjC,QAAQ,OAAO,CAAC,kBAAkB;IAClC,QAAQ,OAAO,OAAO,CAAC,kBAAkB,KAAK,UAAU,CAAC;IACzD,IAAI,IAAI,mBAAmB;IAC3B,QAAQ,OAAO,CAAC,YAAY,IAAI,OAAO,OAAO,CAAC,YAAY,KAAK,UAAU,CAAC;AAC3E;IACA;IACA;IACA;IACA,IAAI,IAAI,aAAa,EAAE;IACvB,QAAQ,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;IAChD,QAAQ,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;IACpD,QAAQ,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IAClD,QAAQ,OAAO,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;IACtD,QAAQ,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IACpC,KAAK;AACL;IACA;IACA;IACA,IAAI,IAAI,mBAAmB,EAAE;IAC7B,QAAQ,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;IACpD,QAAQ,OAAO,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;IACxD,KAAK;IACL;AACA;IACA,IAAI,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AACxC;IACA,IAAI,IAAI,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;IAClC,IAAI,IAAI,aAAa,GAAG,CAAC,CAAC;AAC1B;IACA,IAAI,SAAS,cAAc,CAAC,GAAG,EAAE;IACjC,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE;IAC7B,YAAY,OAAO,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACxC,SAAS;AACT;IACA,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;IACrC,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;AACT;IACA,QAAQ,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC7B,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,SAAS,CAAC,GAAG,EAAE;IAC5B,QAAQ,IAAI,CAAC,GAAG,EAAE;IAClB,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;AACT;IACA,QAAQ,IAAI,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrC,QAAQ,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;IAC/B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;IAClB,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC;IACnB,QAAQ,IAAI,MAAM,CAAC;AACnB;IACA,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IACvD,YAAY,MAAM,IAAI,KAAK;IAC3B,gBAAgB,gFAAgF;IAChG,aAAa,CAAC;IACd,SAAS;AACT;IACA,QAAQ,OAAO,CAAC,EAAE,EAAE;IACpB,YAAY,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC9C;IACA,YAAY,IAAI,MAAM,IAAI,EAAE,EAAE;IAC9B,gBAAgB,MAAM,IAAI,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;IACvD,aAAa;AACb;IACA,YAAY,EAAE,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACnD,SAAS;AACT;IACA,QAAQ,OAAO,EAAE,GAAG,IAAI,CAAC;IACzB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,aAAa,CAAC,OAAO,EAAE;IACpC,QAAQ,IAAI,MAAM,GAAG,GAAG,CAAC;IACzB,QAAQ,IAAI,SAAS,GAAG,CAAC,OAAO,GAAG,GAAG,IAAI,MAAM,CAAC;IACjD,QAAQ,IAAI,iBAAiB,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,MAAM,GAAG,SAAS,CAAC;AAC/E;IACA,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;IAC7C,KAAK;AACL;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,QAAQ,CAAC,KAAK,EAAE;IAC7B,QAAQ,IAAI,CAAC,KAAK,EAAE;IACpB,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;IACjD,YAAY,OAAO,KAAK,CAAC,OAAO,EAAE,CAAC;IACnC,SAAS;IACT,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IACvC,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,QAAQ,MAAM,IAAI,SAAS,CAAC,6CAA6C,CAAC,CAAC;IAC3E,KAAK;AACL;IACA,IAAI,SAAS,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE;IACtC,QAAQ,OAAO,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC;IACnE,KAAK;AACL;IACA,IAAI,SAAS,oBAAoB,CAAC,MAAM,EAAE,MAAM,EAAE;IAClD,QAAQ,IAAI,IAAI,CAAC;IACjB,QAAQ,KAAK,IAAI,IAAI,MAAM,EAAE;IAC7B,YAAY,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;IAC7C,gBAAgB,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5C,aAAa;IACb,SAAS;AACT;IACA;IACA,QAAQ,IAAI,MAAM,CAAC,GAAG,EAAE;IACxB,YAAY,MAAM,CAAC,GAAG,GAAG,SAAS,GAAG,GAAG;IACxC,gBAAgB,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;IACxC,aAAa,CAAC;IACd,SAAS,MAAM;IACf,YAAY,OAAO,MAAM,CAAC,GAAG,CAAC;IAC9B,SAAS;AACT;IACA;IACA,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE;IAC7B,YAAY,MAAM,CAAC,QAAQ,GAAG,SAAS,QAAQ,GAAG;IAClD,gBAAgB,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzC,aAAa,CAAC;IACd,SAAS,MAAM;IACf,YAAY,OAAO,MAAM,CAAC,QAAQ,CAAC;IACnC,SAAS;AACT;IACA;IACA,QAAQ,MAAM,CAAC,QAAQ,GAAG,SAAS,QAAQ,GAAG;IAC9C,YAAY,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;IACrC,SAAS,CAAC;AACV;IACA,QAAQ,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;IAC5C,QAAQ,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IACpC,QAAQ,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;IAChC,QAAQ,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC;AACpE;IACA,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK;AACL;IACA,IAAI,SAAS,UAAU,GAAG;IAC1B,QAAQ,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE;IACxE;IACA;IACA,YAAY,IAAI,EAAE,IAAI,YAAY,SAAS,CAAC,EAAE;IAC9C,gBAAgB,OAAO,IAAI,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtE,aAAa;AACb;IACA;IACA;IACA;IACA,YAAY,QAAQ,SAAS,CAAC,MAAM;IACpC,gBAAgB,KAAK,CAAC;IACtB,oBAAoB,OAAO,IAAI,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC/D,gBAAgB,KAAK,CAAC;IACtB,oBAAoB,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IAChD,gBAAgB,KAAK,CAAC;IACtB,oBAAoB,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACvD,gBAAgB,KAAK,CAAC;IACtB,oBAAoB,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC7D,gBAAgB,KAAK,CAAC;IACtB,oBAAoB,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACnE,gBAAgB,KAAK,CAAC;IACtB,oBAAoB,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IAC3E,gBAAgB,KAAK,CAAC;IACtB,oBAAoB,OAAO,IAAI,UAAU;IACzC,wBAAwB,IAAI;IAC5B,wBAAwB,KAAK;IAC7B,wBAAwB,IAAI;IAC5B,wBAAwB,IAAI;IAC5B,wBAAwB,MAAM;IAC9B,wBAAwB,MAAM;IAC9B,qBAAqB,CAAC;IACtB,gBAAgB;IAChB,oBAAoB,OAAO,IAAI,UAAU;IACzC,wBAAwB,IAAI;IAC5B,wBAAwB,KAAK;IAC7B,wBAAwB,IAAI;IAC5B,wBAAwB,IAAI;IAC5B,wBAAwB,MAAM;IAC9B,wBAAwB,MAAM;IAC9B,wBAAwB,EAAE;IAC1B,qBAAqB,CAAC;IACtB,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,oBAAoB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IAC3D,KAAK;AACL;IACA,IAAI,SAAS,UAAU,CAAC,KAAK,EAAE,GAAG,EAAE;IACpC;IACA,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;IACzB,YAAY,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;IAC5B,SAAS;IACT,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,KAAK;AACL;IACA,IAAI,SAAS,OAAO,CAAC,KAAK,EAAE;IAC5B;IACA,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;IACzB,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpD,YAAY,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3C,YAAY,IAAI,KAAK,CAAC,SAAS,IAAI,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE;IACxD,gBAAgB,MAAM,IAAI,KAAK;IAC/B,oBAAoB,yBAAyB;IAC7C,wBAAwB,KAAK,CAAC,SAAS;IACvC,wBAAwB,qCAAqC;IAC7D,iBAAiB,CAAC;IAClB,aAAa;IACb,SAAS;IACT,QAAQ,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;IACxB,KAAK;AACL;IACA,IAAI,SAAS,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE;IACpC,QAAQ,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;IACtC,YAAY,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;IACxE,SAAS;AACT;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,WAAW,GAAG,SAAS,CAAC;AAC/D;IACA,QAAQ,IAAI,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;IAC3C,YAAY,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;IAC9C,gBAAgB,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;IAChC,aAAa;IACb,YAAY,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,UAAU,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;IACrE,YAAY,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IACnD,SAAS;AACT;IACA,QAAQ,IAAI,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;IAC9C,YAAY,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;IACpC,YAAY,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,UAAU,GAAG,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC;IAC9E,SAAS;AACT;IACA,QAAQ,IAAI,KAAK,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;IAC/C,YAAY,KAAK,CAAC,IAAI,GAAG,gBAAgB,CAAC;IAC1C,YAAY,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;IACnC,SAAS;AACT;IACA,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;IAC3B,YAAY,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;IAC9B,SAAS;AACT;IACA,QAAQ,KAAK,CAAC,EAAE,GAAG,aAAa,EAAE,CAAC;IACnC,QAAQ,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC;IACpC,QAAQ,KAAK,CAAC,MAAM;IACpB,YAAY,KAAK,CAAC,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9E;IACA,QAAQ,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;AACvC;IACA,QAAQ,IAAI,qBAAqB,EAAE;IACnC,YAAY,IAAI,GAAG,GAAG;IACtB,gBAAgB,EAAE,EAAE,KAAK,CAAC,EAAE;IAC5B,gBAAgB,GAAG,EAAE,WAAW;IAChC,oBAAoB,OAAO,GAAG,CAAC;IAC/B,iBAAiB;IACjB,gBAAgB,KAAK,EAAE,WAAW;IAClC,oBAAoB,OAAO,GAAG,CAAC;IAC/B,iBAAiB;IACjB,gBAAgB,OAAO,EAAE,WAAW;IACpC,oBAAoB,OAAO,GAAG,CAAC;IAC/B,iBAAiB;IACjB,aAAa,CAAC;IACd,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;AACT;IACA,QAAQ,OAAO,KAAK,CAAC,EAAE,CAAC;IACxB,KAAK;AACL;IACA;IACA,IAAI,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE;IACjC;IACA,QAAQ,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE;IACjC,YAAY,OAAO,CAAC,CAAC,CAAC;IACtB,SAAS;IACT,QAAQ,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE;IACjC,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;AACT;IACA;IACA,QAAQ,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE;IACzC,YAAY,OAAO,CAAC,CAAC,CAAC;IACtB,SAAS;IACT,QAAQ,IAAI,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,SAAS,EAAE;IACzC,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;AACT;IACA;IACA,QAAQ,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE;IACvC,YAAY,OAAO,CAAC,CAAC,CAAC;IACtB,SAAS;IACT,QAAQ,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE;IACvC,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;AACT;IACA;IACA,QAAQ,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE;IACzB,YAAY,OAAO,CAAC,CAAC,CAAC;IACtB,SAAS;IACT,QAAQ,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE;IACzB,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;AACT;IACA;IACA,KAAK;AACL;IACA,IAAI,SAAS,iBAAiB,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;IAChD,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAClC,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,EAAE,EAAE,SAAS,CAAC;AAC1B;IACA,QAAQ,KAAK,EAAE,IAAI,MAAM,EAAE;IAC3B,YAAY,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;IAC3C,gBAAgB,SAAS,GAAG,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1D;IACA,gBAAgB;IAChB,oBAAoB,SAAS;IAC7B,qBAAqB,CAAC,KAAK,IAAI,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IACtE,kBAAkB;IAClB,oBAAoB,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;IACvC,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;AACL;IACA,IAAI,SAAS,UAAU,CAAC,KAAK,EAAE;IAC/B,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAClC,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,EAAE,CAAC;AACf;IACA,QAAQ,KAAK,EAAE,IAAI,MAAM,EAAE;IAC3B,YAAY,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;IAC3C,gBAAgB,IAAI,CAAC,KAAK,IAAI,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;IACtE,oBAAoB,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;IACvC,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;AACL;IACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAAE;IAC9B,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAClC,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,EAAE,CAAC;AACf;IACA,QAAQ,KAAK,EAAE,IAAI,MAAM,EAAE;IAC3B,YAAY,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;IAC3C,gBAAgB,IAAI,CAAC,KAAK,IAAI,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;IACvE,oBAAoB,KAAK,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;IACvC,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;AACL;IACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE;IACrC,QAAQ,IAAI,OAAO,KAAK,CAAC,QAAQ,KAAK,QAAQ,EAAE;IAChD,YAAY,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC;IAC5D,SAAS,MAAM;IACf,YAAY,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC1C,SAAS;AACT;IACA,QAAQ,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;IAC9C,YAAY,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/C,SAAS,MAAM;IACf;IACA,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,SAAS;IACT,KAAK;AACL;IACA,IAAI,SAAS,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;IAC/C,QAAQ,IAAI,CAAC,OAAO,EAAE;IACtB;IACA;IACA,YAAY,OAAO;IACnB,SAAS;AACT;IACA,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;IAC3B,YAAY,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;IAC9B,SAAS;AACT;IACA;IACA;IACA,QAAQ,IAAI,EAAE,GAAG,OAAO,OAAO,KAAK,QAAQ,GAAG,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC;AACpE;IACA,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;IAC7C;IACA,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACzC,YAAY,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;IACtC,gBAAgB,OAAO,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACxC,aAAa,MAAM;IACnB,gBAAgB,IAAI,KAAK;IACzB,oBAAoB,KAAK,KAAK,gBAAgB;IAC9C,0BAA0B,sBAAsB;IAChD,0BAA0B,OAAO,GAAG,KAAK,CAAC;IAC1C,gBAAgB,IAAI,QAAQ;IAC5B,oBAAoB,KAAK,CAAC,IAAI,KAAK,gBAAgB;IACnD,0BAA0B,uBAAuB;IACjD,0BAA0B,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;IAC7C,gBAAgB,MAAM,IAAI,KAAK;IAC/B,oBAAoB,yCAAyC;IAC7D,wBAAwB,QAAQ;IAChC,wBAAwB,sBAAsB;IAC9C,wBAAwB,KAAK;IAC7B,wBAAwB,IAAI;IAC5B,iBAAiB,CAAC;IAClB,aAAa;IACb,SAAS;IACT,KAAK;AACL;IACA,IAAI,SAAS,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;IAC9C,QAAQ,IAAI,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IACzB,QAAQ,IAAI,eAAe,GAAG,SAAS,CAAC;IACxC,QAAQ,IAAI,iBAAiB,GAAG,WAAW,CAAC;AAC5C;IACA,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1D,YAAY,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtC,YAAY,IAAI,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,OAAO,EAAE;IACvD,gBAAgB,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;IAC/D,aAAa,MAAM,IAAI,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,OAAO,EAAE;IAChE,gBAAgB,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACnE,aAAa,MAAM,IAAI,MAAM,KAAK,aAAa,EAAE;IACjD,gBAAgB,IAAI,sBAAsB,GAAG,MAAM,CAAC,wBAAwB;IAC5E,oBAAoB,KAAK;IACzB,oBAAoB,GAAG,GAAG,MAAM;IAChC,iBAAiB,CAAC;IAClB,gBAAgB;IAChB,oBAAoB,sBAAsB;IAC1C,oBAAoB,sBAAsB,CAAC,GAAG;IAC9C,oBAAoB,CAAC,sBAAsB,CAAC,GAAG;IAC/C,kBAAkB;IAClB,oBAAoB,MAAM,CAAC,cAAc;IACzC,wBAAwB,MAAM;IAC9B,wBAAwB,MAAM;IAC9B,wBAAwB,sBAAsB;IAC9C,qBAAqB,CAAC;IACtB,iBAAiB,MAAM,IAAI,sBAAsB,CAAC,YAAY,EAAE;IAChE,oBAAoB,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;IACzD,iBAAiB;IACjB,aAAa,MAAM;IACnB,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,cAAc,EAAE;IACrE,oBAAoB,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;IACzD,oBAAoB;IACpB,wBAAwB,MAAM,KAAK,eAAe;IAClD,wBAAwB,MAAM,CAAC,iBAAiB,KAAK,IAAI;IACzD,sBAAsB;IACtB,wBAAwB,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;IAC/D,qBAAqB;IACrB,iBAAiB,MAAM;IACvB,oBAAoB,IAAI;IACxB,wBAAwB,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9C,qBAAqB,CAAC,OAAO,MAAM,EAAE;IACrC;IACA,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA;IACA,QAAQ,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;AAC3B;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;IAC3B,YAAY,OAAO,EAAE,CAAC;IACtB,SAAS;IACT,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE;IAClE,YAAY,OAAO,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACrC,SAAS,CAAC,CAAC;IACX,KAAK;AACL;IACA,IAAI,SAAS,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;IACjD,QAAQ,IAAI,IAAI,CAAC;IACjB,QAAQ,KAAK,CAAC,MAAM,CAAC,CAAC,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI;IAC3E,YAAY,MAAM;IAClB,YAAY,MAAM;IAClB,SAAS,CAAC;IACV,QAAQ,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAC7C;IACA,QAAQ,IAAI,MAAM,KAAK,MAAM,EAAE;IAC/B,YAAY,IAAI,IAAI,GAAG,oBAAoB,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3E,YAAY,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAClC,SAAS,MAAM,IAAI,MAAM,KAAK,aAAa,EAAE;IAC7C,YAAY,IAAI,sBAAsB,GAAG,MAAM,CAAC,wBAAwB;IACxE,gBAAgB,MAAM;IACtB,gBAAgB,MAAM;IACtB,aAAa,CAAC;IACd;IACA,YAAY;IACZ,gBAAgB,sBAAsB;IACtC,gBAAgB,sBAAsB,CAAC,GAAG;IAC1C,gBAAgB,CAAC,sBAAsB,CAAC,GAAG;IAC3C,cAAc;IACd,gBAAgB,MAAM,CAAC,cAAc;IACrC,oBAAoB,KAAK;IACzB,oBAAoB,GAAG,GAAG,MAAM;IAChC,oBAAoB,sBAAsB;IAC1C,iBAAiB,CAAC;AAClB;IACA,gBAAgB,IAAI,cAAc,GAAG,MAAM,CAAC,wBAAwB;IACpE,oBAAoB,KAAK;IACzB,oBAAoB,MAAM;IAC1B,iBAAiB,CAAC;IAClB,gBAAgB,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;IACtE,aAAa,MAAM;IACnB,gBAAgB,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/C,aAAa;IACb,SAAS,MAAM;IACf,YAAY,MAAM,CAAC,MAAM,CAAC,GAAG,WAAW;IACxC,gBAAgB,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAC7D,aAAa,CAAC;AACd;IACA,YAAY,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;IACxC,gBAAgB,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;IACxD,oBAAoB,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;IAC/D,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA,QAAQ,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;IACrC,KAAK;AACL;IACA,IAAI,SAAS,cAAc,CAAC,KAAK,EAAE,gBAAgB,EAAE;IACrD,QAAQ,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACrC,KAAK;AACL;IACA,IAAI,IAAI,MAAM,GAAG;IACjB,QAAQ,UAAU,EAAE,OAAO,CAAC,UAAU;IACtC,QAAQ,YAAY,EAAE,OAAO,CAAC,YAAY;IAC1C,QAAQ,WAAW,EAAE,OAAO,CAAC,WAAW;IACxC,QAAQ,aAAa,EAAE,OAAO,CAAC,aAAa;IAC5C,QAAQ,IAAI,EAAE,OAAO,CAAC,IAAI;IAC1B,KAAK,CAAC;AACN;IACA,IAAI,IAAI,mBAAmB,EAAE;IAC7B,QAAQ,MAAM,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;IACnD,QAAQ,MAAM,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;IACvD,KAAK;AACL;IACA,IAAI,IAAI,aAAa,EAAE;IACvB,QAAQ,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;IAC/C,KAAK;AACL;IACA,IAAI,IAAI,eAAe,EAAE;IACzB,QAAQ,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;IACnD,KAAK;AACL;IACA,IAAI,IAAI,kBAAkB,EAAE;IAC5B,QAAQ,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IACjD,KAAK;AACL;IACA,IAAI,IAAI,4BAA4B,EAAE;IACtC,QAAQ,MAAM,CAAC,qBAAqB,GAAG,OAAO,CAAC,qBAAqB,CAAC;IACrE,KAAK;AACL;IACA,IAAI,IAAI,qBAAqB,EAAE;IAC/B,QAAQ,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC;IACrC,KAAK;AACL;IACA,IAAI,IAAI,2BAA2B,EAAE;IACrC,QAAQ,MAAM,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC;IACnE,KAAK;AACL;IACA,IAAI,IAAI,0BAA0B,EAAE;IACpC,QAAQ,MAAM,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,CAAC;IACjE,KAAK;AACL;IACA,IAAI,IAAI,yBAAyB,EAAE;IACnC,QAAQ,MAAM,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;IAC/D,KAAK;AACL;IACA,IAAI,IAAI,IAAI;IACZ,QAAQ,MAAM,CAAC,IAAI;IACnB,QAAQ,SAAS,GAAG,EAAE;IACtB,YAAY,IAAI,EAAE,GAAG,EAAE,CAAC;IACxB,YAAY,IAAI,GAAG,CAAC;AACpB;IACA,YAAY,KAAK,GAAG,IAAI,GAAG,EAAE;IAC7B,gBAAgB,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;IAC7C,oBAAoB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,OAAO,EAAE,CAAC;IACtB,SAAS,CAAC;AACV;IACA,IAAI,IAAI,kBAAkB,GAAG,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,UAAU,CAAC;AACxE;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE;IAC3C;IACA,QAAQ,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5C;IACA,QAAQ,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;IACtB,QAAQ,IAAI,kBAAkB,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC;IACA,QAAQ,IAAI,UAAU,KAAK,SAAS,EAAE;IACtC,YAAY,MAAM,IAAI,KAAK;IAC3B,gBAAgB,+CAA+C;IAC/D,oBAAoB,4EAA4E;IAChG,aAAa,CAAC;IACd,SAAS;AACT;IACA,QAAQ,IAAI,KAAK,GAAG;IACpB,YAAY,GAAG,EAAE,KAAK;IACtB,YAAY,QAAQ,EAAE,EAAE;IACxB,YAAY,IAAI,EAAE,UAAU,EAAE;IAC9B,YAAY,SAAS,EAAE,SAAS;IAChC,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACjC;IACA,QAAQ,SAAS,kBAAkB,GAAG;IACtC,YAAY,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,IAAI,EAAE,CAAC,CAAC;IACnD,SAAS;AACT;IACA,QAAQ,SAAS,MAAM,CAAC,IAAI,EAAE;IAC9B,YAAY,IAAI,gBAAgB,GAAG,KAAK,CAAC,GAAG,GAAG,kBAAkB,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAC7E,YAAY,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC;IACrE,YAAY,IAAI,gBAAgB;IAChC,gBAAgB,CAAC,gBAAgB,GAAG,cAAc,GAAG,GAAG,IAAI,GAAG;IAC/D,gBAAgB,KAAK;IACrB,gBAAgB,kBAAkB,CAAC,CAAC,CAAC,CAAC;AACtC;IACA,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;IACrC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE;IACnC,oBAAoB,MAAM,IAAI,SAAS;IACvC,wBAAwB,8CAA8C;IACtE,qBAAqB,CAAC;IACtB,iBAAiB;AACjB;IACA,gBAAgB,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,gBAAgB,IAAI,QAAQ,GAAG,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1D,gBAAgB,IAAI,OAAO,GAAG,cAAc,GAAG,OAAO,CAAC;AACvD;IACA,gBAAgB,IAAI,QAAQ,GAAG,CAAC,EAAE;IAClC,oBAAoB,QAAQ,IAAI,GAAG,CAAC;IACpC,oBAAoB,OAAO,IAAI,CAAC,CAAC;IACjC,iBAAiB;AACjB;IACA,gBAAgB,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC3C,aAAa;IACb,YAAY,OAAO,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC;IACtD,SAAS;AACT;IACA,QAAQ,IAAI,mBAAmB,EAAE;IACjC,YAAY,MAAM,CAAC,MAAM,GAAG,WAAW;IACvC,gBAAgB,IAAI,KAAK,GAAG,MAAM,EAAE,CAAC;IACrC,gBAAgB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,aAAa,CAAC;IACd,SAAS;AACT;IACA,QAAQ,KAAK,CAAC,mBAAmB,GAAG,SAAS,mBAAmB;IAChE,YAAY,IAAI;IAChB,YAAY,OAAO;IACnB,UAAU;IACV,YAAY,IAAI,oBAAoB,GAAG,CAAC,CAAC;AACzC;IACA,YAAY,IAAI,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE;IACzC,gBAAgB,oBAAoB,GAAG,EAAE,CAAC;IAC1C,aAAa;AACb;IACA,YAAY,IAAI,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE;IACzC,gBAAgB,IAAI,EAAE,IAAI;IAC1B,gBAAgB,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC9D,gBAAgB,KAAK;IACrB,oBAAoB,OAAO,OAAO,KAAK,WAAW;IAClD,0BAA0B,oBAAoB;IAC9C,0BAA0B,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,oBAAoB,CAAC;IACjE,aAAa,CAAC,CAAC;AACf;IACA,YAAY,OAAO,MAAM,CAAC,EAAE,IAAI,MAAM,CAAC;IACvC,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,kBAAkB,GAAG,SAAS,kBAAkB,CAAC,OAAO,EAAE;IACxE,YAAY,OAAO,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IACzD,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,UAAU,GAAG,SAAS,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE;IAC9D,YAAY,OAAO,QAAQ,CAAC,KAAK,EAAE;IACnC,gBAAgB,IAAI,EAAE,IAAI;IAC1B,gBAAgB,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC9D,gBAAgB,KAAK,EAAE,OAAO;IAC9B,aAAa,CAAC,CAAC;IACf,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,YAAY,GAAG,SAAS,YAAY,CAAC,OAAO,EAAE;IAC5D,YAAY,OAAO,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IACzD,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAC,IAAI,EAAE;IACjD,YAAY,OAAO,UAAU,CAAC,KAAK,EAAE;IACrC,gBAAgB,IAAI,EAAE,IAAI;IAC1B,gBAAgB,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC9D,aAAa,CAAC,CAAC;IACf,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,cAAc,GAAG,SAAS,cAAc,CAAC,IAAI,EAAE;IAC7D,YAAY,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxC,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,WAAW,GAAG,SAAS,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE;IAChE;IACA,YAAY,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAC5C,YAAY,OAAO,QAAQ,CAAC,KAAK,EAAE;IACnC,gBAAgB,IAAI,EAAE,IAAI;IAC1B,gBAAgB,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC9D,gBAAgB,KAAK,EAAE,OAAO;IAC9B,gBAAgB,QAAQ,EAAE,OAAO;IACjC,aAAa,CAAC,CAAC;IACf,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,aAAa,GAAG,SAAS,aAAa,CAAC,OAAO,EAAE;IAC9D,YAAY,OAAO,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IAC1D,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,mBAAmB,EAAE;IACjC,YAAY,KAAK,CAAC,YAAY,GAAG,SAAS,YAAY,CAAC,IAAI,EAAE;IAC7D,gBAAgB,OAAO,QAAQ,CAAC,KAAK,EAAE;IACvC,oBAAoB,IAAI,EAAE,IAAI;IAC9B,oBAAoB,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAClE,oBAAoB,SAAS,EAAE,IAAI;IACnC,iBAAiB,CAAC,CAAC;IACnB,aAAa,CAAC;AACd;IACA,YAAY,KAAK,CAAC,cAAc,GAAG,SAAS,cAAc,CAAC,OAAO,EAAE;IACpE,gBAAgB,OAAO,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IAC/D,aAAa,CAAC;IACd,SAAS;AACT;IACA,QAAQ,KAAK,CAAC,WAAW,GAAG,SAAS,WAAW,GAAG;IACnD,YAAY;IACZ,gBAAgB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,MAAM;IACtD,gBAAgB,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE,MAAM;IACzC,cAAc;IACd,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,qBAAqB,GAAG,SAAS,qBAAqB,CAAC,IAAI,EAAE;IAC3E,YAAY,IAAI,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE;IACzC,gBAAgB,IAAI,EAAE,IAAI;IAC1B,gBAAgB,KAAK,EAAE,kBAAkB,EAAE;IAC3C,gBAAgB,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,kBAAkB,EAAE,CAAC;IACxD,gBAAgB,SAAS,EAAE,IAAI;IAC/B,aAAa,CAAC,CAAC;AACf;IACA,YAAY,OAAO,MAAM,CAAC,EAAE,IAAI,MAAM,CAAC;IACvC,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,oBAAoB,GAAG,SAAS,oBAAoB,CAAC,OAAO,EAAE;IAC5E,YAAY,OAAO,UAAU,CAAC,KAAK,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;IAChE,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,aAAa,GAAG,SAAS,aAAa,GAAG;IACvD,YAAY,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3B,SAAS,CAAC;AACV;IACA,QAAQ,SAAS,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;IAC7D,YAAY,IAAI,OAAO;IACvB,gBAAgB,OAAO,SAAS,KAAK,QAAQ;IAC7C,sBAAsB,SAAS;IAC/B,sBAAsB,SAAS,CAAC,SAAS,CAAC,CAAC;IAC3C,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACzC,YAAY,IAAI,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;IACnD,YAAY,IAAI,UAAU,GAAG,KAAK,GAAG,SAAS,CAAC;IAC/C,YAAY,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;AACxC;IACA,YAAY,IAAI,OAAO,GAAG,CAAC,EAAE;IAC7B,gBAAgB,MAAM,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;IACxE,aAAa;AACb;IACA;IACA,YAAY,IAAI,UAAU,IAAI,GAAG,EAAE;IACnC,gBAAgB,MAAM,IAAI,CAAC,CAAC;IAC5B,gBAAgB,UAAU,IAAI,GAAG,CAAC;IAClC,aAAa;AACb;IACA,YAAY,KAAK,GAAG,UAAU,CAAC;IAC/B,YAAY,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;IACrC,YAAY,IAAI,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;IACrC,YAAY,IAAI,KAAK;IACrB,gBAAgB,cAAc;IAC9B,gBAAgB,MAAM;IACtB,gBAAgB,eAAe;IAC/B,gBAAgB,iBAAiB;IACjC,gBAAgB,aAAa,CAAC;AAC9B;IACA,YAAY,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;AACpC;IACA;IACA,YAAY,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC;IAC/B,YAAY,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3B,YAAY,IAAI,MAAM,KAAK,KAAK,CAAC,GAAG,EAAE;IACtC;IACA,gBAAgB,QAAQ,IAAI,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;IAC/C,gBAAgB,MAAM,IAAI,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;IAC7C,aAAa;AACb;IACA,YAAY,SAAS,WAAW,GAAG;IACnC;IACA,gBAAgB,KAAK,GAAG,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACnE;IACA,gBAAgB,OAAO,KAAK,IAAI,QAAQ,IAAI,MAAM,EAAE;IACpD,oBAAoB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;IAChD,wBAAwB,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;IAChD,wBAAwB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IACjD,wBAAwB,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC;IAC3C,wBAAwB,IAAI;IAC5B,4BAA4B,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3C,4BAA4B,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACpD,yBAAyB,CAAC,OAAO,CAAC,EAAE;IACpC,4BAA4B,cAAc,GAAG,cAAc,IAAI,CAAC,CAAC;IACjE,yBAAyB;AACzB;IACA,wBAAwB,IAAI,OAAO,EAAE;IACrC;IACA;IACA;IACA,4BAA4B,kBAAkB,CAAC,eAAe,CAAC,CAAC;IAChE,4BAA4B,OAAO;IACnC,yBAAyB;AACzB;IACA,wBAAwB,iBAAiB,EAAE,CAAC;IAC5C,qBAAqB;AACrB;IACA,oBAAoB,aAAa,EAAE,CAAC;IACpC,iBAAiB;AACjB;IACA;IACA,gBAAgB,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC;IACnC,gBAAgB,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,gBAAgB,IAAI,MAAM,KAAK,KAAK,CAAC,GAAG,EAAE;IAC1C;IACA,oBAAoB,QAAQ,IAAI,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;IACnD,oBAAoB,MAAM,IAAI,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;IACjD,iBAAiB;IACjB,gBAAgB,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;AACzC;IACA;IACA,gBAAgB,KAAK,GAAG,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACnE,gBAAgB,IAAI,KAAK,EAAE;IAC3B,oBAAoB,IAAI;IACxB,wBAAwB,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;IACvD,qBAAqB,CAAC,OAAO,CAAC,EAAE;IAChC,wBAAwB,cAAc,GAAG,cAAc,IAAI,CAAC,CAAC;IAC7D,qBAAqB;IACrB,iBAAiB,MAAM;IACvB;IACA,oBAAoB,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;AACvC;IACA;IACA,oBAAoB,KAAK,GAAG,UAAU,CAAC;IACvC,iBAAiB;IACjB,gBAAgB,IAAI,cAAc,EAAE;IACpC,oBAAoB,MAAM,cAAc,CAAC;IACzC,iBAAiB;AACjB;IACA,gBAAgB,IAAI,OAAO,EAAE;IAC7B,oBAAoB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvC,iBAAiB,MAAM;IACvB,oBAAoB,OAAO,KAAK,CAAC,GAAG,CAAC;IACrC,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,eAAe;IAC3B,gBAAgB,OAAO;IACvB,gBAAgB,WAAW;IAC3B,oBAAoB,IAAI;IACxB,wBAAwB,iBAAiB,EAAE,CAAC;IAC5C,wBAAwB,aAAa,EAAE,CAAC;IACxC,wBAAwB,WAAW,EAAE,CAAC;IACtC,qBAAqB,CAAC,OAAO,CAAC,EAAE;IAChC,wBAAwB,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,qBAAqB;IACrB,iBAAiB,CAAC;AAClB;IACA,YAAY,iBAAiB,GAAG,WAAW;IAC3C;IACA,gBAAgB,IAAI,MAAM,KAAK,KAAK,CAAC,GAAG,EAAE;IAC1C,oBAAoB,QAAQ,IAAI,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;IACnD,oBAAoB,MAAM,IAAI,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;IACjD,oBAAoB,QAAQ,IAAI,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;IACnD,iBAAiB;IACjB,aAAa,CAAC;AACd;IACA,YAAY,aAAa,GAAG,WAAW;IACvC,gBAAgB,KAAK,GAAG,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACnE,gBAAgB,QAAQ,GAAG,QAAQ,CAAC;IACpC,aAAa,CAAC;AACd;IACA,YAAY,OAAO,WAAW,EAAE,CAAC;IACjC,SAAS;AACT;IACA;IACA;IACA;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,SAAS,IAAI,CAAC,SAAS,EAAE;IAC9C,YAAY,OAAO,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC5C,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,WAAW,EAAE;IACpD,YAAY,KAAK,CAAC,SAAS,GAAG,SAAS,SAAS,CAAC,EAAE,EAAE;IACrD,gBAAgB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;IACrE,oBAAoB,kBAAkB,CAAC,WAAW;IAClD,wBAAwB,IAAI;IAC5B,4BAA4B,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IAC9D,yBAAyB,CAAC,OAAO,CAAC,EAAE;IACpC,4BAA4B,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC,yBAAyB;IACzB,qBAAqB,CAAC,CAAC;IACvB,iBAAiB,CAAC,CAAC;IACnB,aAAa,CAAC;IACd,SAAS;AACT;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,SAAS,IAAI,GAAG;IACrC,YAAY,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3B,YAAY,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAC1C,YAAY,IAAI,CAAC,KAAK,EAAE;IACxB,gBAAgB,OAAO,KAAK,CAAC,GAAG,CAAC;IACjC,aAAa;AACb;IACA,YAAY,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;IACpC,YAAY,IAAI;IAChB,gBAAgB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IACzC,gBAAgB,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACxC,gBAAgB,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,gBAAgB,OAAO,KAAK,CAAC,GAAG,CAAC;IACjC,aAAa,SAAS;IACtB,gBAAgB,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;IACzC,aAAa;IACb,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,WAAW,EAAE;IACpD,YAAY,KAAK,CAAC,SAAS,GAAG,SAAS,SAAS,GAAG;IACnD,gBAAgB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;IACrE,oBAAoB,kBAAkB,CAAC,WAAW;IAClD,wBAAwB,IAAI;IAC5B,4BAA4B,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAC1D,4BAA4B,IAAI,CAAC,KAAK,EAAE;IACxC,gCAAgC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnD,gCAAgC,OAAO;IACvC,6BAA6B;AAC7B;IACA,4BAA4B,IAAI,GAAG,CAAC;IACpC,4BAA4B,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;IACpD,4BAA4B,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IACrD,4BAA4B,IAAI;IAChC,gCAAgC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACxD,6BAA6B,CAAC,OAAO,CAAC,EAAE;IACxC,gCAAgC,GAAG,GAAG,CAAC,CAAC;IACxC,6BAA6B;IAC7B,4BAA4B,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;AACrD;IACA,4BAA4B,kBAAkB,CAAC,WAAW;IAC1D,gCAAgC,IAAI,GAAG,EAAE;IACzC,oCAAoC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChD,iCAAiC,MAAM;IACvC,oCAAoC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvD,iCAAiC;IACjC,6BAA6B,CAAC,CAAC;IAC/B,yBAAyB,CAAC,OAAO,CAAC,EAAE;IACpC,4BAA4B,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC,yBAAyB;IACzB,qBAAqB,CAAC,CAAC;IACvB,iBAAiB,CAAC,CAAC;IACnB,aAAa,CAAC;IACd,SAAS;AACT;IACA,QAAQ,KAAK,CAAC,MAAM,GAAG,SAAS,MAAM,GAAG;IACzC,YAAY,IAAI,SAAS,EAAE,CAAC,CAAC;IAC7B,YAAY,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3B,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE;IAClD,gBAAgB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;IACnC,oBAAoB,OAAO,KAAK,CAAC,GAAG,CAAC;IACrC,iBAAiB;AACjB;IACA,gBAAgB,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;IACtD,gBAAgB,IAAI,SAAS,KAAK,CAAC,EAAE;IACrC,oBAAoB,OAAO,KAAK,CAAC,GAAG,CAAC;IACrC,iBAAiB;AACjB;IACA,gBAAgB,KAAK,CAAC,IAAI,EAAE,CAAC;IAC7B,aAAa;AACb;IACA,YAAY,MAAM,IAAI,KAAK;IAC3B,gBAAgB,yBAAyB;IACzC,oBAAoB,KAAK,CAAC,SAAS;IACnC,oBAAoB,qCAAqC;IACzD,aAAa,CAAC;IACd,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,UAAU,GAAG,SAAS,UAAU,GAAG;IACjD,YAAY,OAAO,KAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;IACpD,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,WAAW,EAAE;IACpD,YAAY,KAAK,CAAC,WAAW,GAAG,SAAS,WAAW,GAAG;IACvD,gBAAgB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;IACrE,oBAAoB,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,oBAAoB,SAAS,KAAK,GAAG;IACrC,wBAAwB,kBAAkB,CAAC,WAAW;IACtD,4BAA4B,IAAI;IAChC,gCAAgC,IAAI,SAAS,CAAC;IAC9C,gCAAgC,IAAI,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE;IACzD,oCAAoC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;IACvD,wCAAwC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3D,wCAAwC,OAAO;IAC/C,qCAAqC;AACrC;IACA,oCAAoC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IACzE,yCAAyC,MAAM,CAAC;IAChD,oCAAoC,IAAI,SAAS,KAAK,CAAC,EAAE;IACzD,wCAAwC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3D,wCAAwC,OAAO;IAC/C,qCAAqC;AACrC;IACA,oCAAoC,KAAK,CAAC,IAAI,EAAE,CAAC;AACjD;IACA,oCAAoC,CAAC,EAAE,CAAC;AACxC;IACA,oCAAoC,KAAK,EAAE,CAAC;IAC5C,oCAAoC,OAAO;IAC3C,iCAAiC;AACjC;IACA,gCAAgC,MAAM;IACtC,oCAAoC,IAAI,KAAK;IAC7C,wCAAwC,yBAAyB;IACjE,4CAA4C,KAAK,CAAC,SAAS;IAC3D,4CAA4C,qCAAqC;IACjF,qCAAqC;IACrC,iCAAiC,CAAC;IAClC,6BAA6B,CAAC,OAAO,CAAC,EAAE;IACxC,gCAAgC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,6BAA6B;IAC7B,yBAAyB,CAAC,CAAC;IAC3B,qBAAqB;IACrB,oBAAoB,KAAK,EAAE,CAAC;IAC5B,iBAAiB,CAAC,CAAC;IACnB,aAAa,CAAC;IACd,SAAS;AACT;IACA,QAAQ,KAAK,CAAC,SAAS,GAAG,SAAS,SAAS,GAAG;IAC/C,YAAY,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IACzC,YAAY,IAAI,CAAC,KAAK,EAAE;IACxB,gBAAgB,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,gBAAgB,OAAO,KAAK,CAAC,GAAG,CAAC;IACjC,aAAa;AACb;IACA,YAAY,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;IACxD,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,WAAW,EAAE;IACpD,YAAY,KAAK,CAAC,cAAc,GAAG,SAAS,cAAc,GAAG;IAC7D,gBAAgB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;IACrE,oBAAoB,kBAAkB,CAAC,WAAW;IAClD,wBAAwB,IAAI;IAC5B,4BAA4B,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IACzD,4BAA4B,IAAI,CAAC,KAAK,EAAE;IACxC,gCAAgC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnD,6BAA6B;AAC7B;IACA,4BAA4B,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IACnE,yBAAyB,CAAC,OAAO,CAAC,EAAE;IACpC,4BAA4B,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC,yBAAyB;IACzB,qBAAqB,CAAC,CAAC;IACvB,iBAAiB,CAAC,CAAC;IACnB,aAAa,CAAC;IACd,SAAS;AACT;IACA,QAAQ,KAAK,CAAC,KAAK,GAAG,SAAS,KAAK,GAAG;IACvC,YAAY,KAAK,GAAG,CAAC,CAAC;IACtB,YAAY,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;IAC9B,YAAY,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;IAC5B,YAAY,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;IAC9B,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,aAAa,GAAG,SAAS,aAAa,CAAC,UAAU,EAAE;IACjE;IACA,YAAY,IAAI,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC9C,YAAY,IAAI,UAAU,GAAG,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC;IAChD,YAAY,IAAI,EAAE,EAAE,KAAK,CAAC;AAC1B;IACA,YAAY,kBAAkB,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;IACvE,YAAY,kBAAkB,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAClE;IACA,YAAY,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;IAC/B,YAAY,KAAK,GAAG,CAAC,CAAC;AACtB;IACA;IACA,YAAY,KAAK,EAAE,IAAI,KAAK,CAAC,MAAM,EAAE;IACrC,gBAAgB,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE;IACrD,oBAAoB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC7C,oBAAoB,KAAK,CAAC,SAAS,IAAI,UAAU,CAAC;IAClD,oBAAoB,KAAK,CAAC,MAAM,IAAI,UAAU,CAAC;IAC/C,iBAAiB;IACjB,aAAa;IACb,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,kBAAkB,EAAE;IAChC,YAAY,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACpD;IACA,YAAY,IAAI,uBAAuB,EAAE;IACzC,gBAAgB,IAAI,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC;AAC1D;IACA,gBAAgB,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,EAAE;IACzE,oBAAoB,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;IAC1D;IACA,wBAAwB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC;IAC7D,qBAAqB,MAAM;IAC3B,wBAAwB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;IACvD,qBAAqB;IACrB,iBAAiB,CAAC,CAAC;IACnB,aAAa;AACb;IACA,YAAY,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG,SAAS,QAAQ,GAAG;IACxD,gBAAgB,IAAI,GAAG,GAAG,MAAM,EAAE,CAAC;IACnC,gBAAgB,IAAI,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC1D,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa,CAAC;IACd,SAAS;AACT;IACA,QAAQ,IAAI,aAAa,EAAE;IAC3B,YAAY,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IAClC,SAAS;AACT;IACA,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE;IAC7B,QAAQ;IACR,YAAY,SAAS,CAAC,MAAM,GAAG,CAAC;IAChC,YAAY,MAAM,YAAY,IAAI;IAClC,YAAY,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;IACjC,YAAY,OAAO,MAAM,KAAK,QAAQ;IACtC,UAAU;IACV,YAAY,MAAM,IAAI,SAAS;IAC/B,gBAAgB,4BAA4B;IAC5C,oBAAoB,MAAM,CAAC,MAAM,CAAC;IAClC,oBAAoB,iFAAiF;IACrG,aAAa,CAAC;IACd,SAAS;AACT;IACA;IACA,QAAQ,MAAM,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,EAAE,CAAC;IAC7D,QAAQ,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,IAAI,KAAK,CAAC;IACrE,QAAQ,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,IAAI,EAAE,CAAC;AAChE;IACA,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;IACjB,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,OAAO,CAAC;IAC9C,QAAQ,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;AAC9D;IACA,QAAQ,KAAK,CAAC,SAAS,GAAG,WAAW;IACrC,YAAY,OAAO,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACpD,SAAS,CAAC;AACV;IACA,QAAQ,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;AAC5C;IACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;IACxC;IACA,YAAY,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,SAAS,GAAG,EAAE;IAC9D,gBAAgB,OAAO,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,gBAAgB,CAAC;IACtE,aAAa,CAAC,CAAC;IACf,SAAS;AACT;IACA,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1D,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;IAC/C,gBAAgB;IAChB,oBAAoB,MAAM,CAAC,OAAO;IAClC,oBAAoB,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,UAAU;IAC/D,kBAAkB;IAClB,oBAAoB,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAC1E,iBAAiB;IACjB,aAAa,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;IACxD,gBAAgB;IAChB,oBAAoB,MAAM,CAAC,OAAO;IAClC,oBAAoB,OAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,KAAK,UAAU;IACjE,kBAAkB;IAClB,oBAAoB,YAAY,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAC1E,iBAAiB;IACjB,aAAa,MAAM;IACnB,gBAAgB;IAChB,oBAAoB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,aAAa;IACtD,oBAAoB,MAAM,CAAC,iBAAiB,KAAK,IAAI;IACrD,kBAAkB;IAClB,oBAAoB,IAAI,YAAY,GAAG,cAAc,CAAC,IAAI;IAC1D,wBAAwB,IAAI;IAC5B,wBAAwB,KAAK;IAC7B,wBAAwB,MAAM,CAAC,gBAAgB;IAC/C,qBAAqB,CAAC;IACtB,oBAAoB,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7D,wBAAwB,YAAY;IACpC,wBAAwB,MAAM,CAAC,gBAAgB;IAC/C,qBAAqB,CAAC;IACtB,oBAAoB,KAAK,CAAC,gBAAgB,GAAG,UAAU,CAAC;IACxD,iBAAiB;IACjB,gBAAgB,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAC9D,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;AACL;IACA,IAAI,OAAO;IACX,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,WAAW,EAAE,WAAW;IAChC,QAAQ,OAAO,EAAE,OAAO;IACxB,QAAQ,UAAU,EAAE,UAAU;IAC9B,KAAK,CAAC;IACN,CAAC;AACD;IACA,IAAI,qBAAqB,GAAG,UAAU,CAACY,cAAY,CAAC,CAAC;AACrD;IACA,UAAc,GAAG,qBAAqB,CAAC,MAAM,CAAC;IAC9C,eAAmB,GAAG,qBAAqB,CAAC,WAAW,CAAC;IACxD,WAAe,GAAG,qBAAqB,CAAC,OAAO,CAAC;IAChD,gBAAkB,GAAG,UAAU;;;;;;;;;IClwC/B;IACAhB,IAAM,WAAW,GAAG,UAAU,CAAC;IAC/BC,IAAI,SAAS,CAAC;IAEd,SAAS,2BAA2B;QAClC,OAAO,IAAI,OAAO,WAAE,OAAO;;;YAGzB,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;SACxB,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE;QAC5B,6BAAS;YACP,IAAI,SAAS,EAAE;gBACb,SAAS,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;KACF,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,MAAM;QACnCA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClCD,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE,uDAAuD,CAAC,CAAC;QACxF,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAExB,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,UAAU;gBACR,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,4BAA4B,CAAC,CAAC;gBACzD,IAAI,EAAE,CAAC;aACR,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,eAAe,EAAE,wCAAwC,CAAC,CAAC;QACxE,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,6CAA6C,EAAE,UAAS,MAAM;QACvEA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClCD,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QAEfA,IAAI,KAAK,GAAG;YACV,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;YAC5B,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;SAC7B,CAAC;QAEF,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YAClB,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,KAAK,CAAC;SAC3B,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;YAC5B,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;SAC7B,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;gBACtB,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;gBAClB,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,KAAK,CAAC;aAC3B,CAAC,CAAC;YAEH,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;gBACtB,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;gBAC5B,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;aAC7B,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;YAC3B,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;SAC5B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,oEAAoE,EAAE,UAAS,MAAM;QAC9FA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC7CD,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;;;QAIxB,EAAE,CAAC,KAAK;YACN,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC9B,EAAE,CAAC,CAAC,CAAC;;;QAIN,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI;YACxB,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SACjC,CAAC,CAAC;QAEH,UAAU;YACR,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC,CAAC,CAAC;YACjE,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,+BAA+B,EAAE,UAAS,MAAM;QACzD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAElC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,kBAAkB,CAAC,CAAC;SACxC,CAAC,CAAC;QAEH,EAAE,CAAC,gBAAgB,CAAC,EAAE,CAAC;QAEvB,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iEAAiE,EAAE,UAAS,MAAM;QAC3FD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,MAAM,GAAa,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;QAE/C,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACpB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,EAAE,CAAC,QAAQ,CAAC,SAAS;gBACnB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACxB,CAAC,CAAC;YAEH,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI;gBACpB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACtB,EAAE,CAAC,QAAQ,CAAC,SAAS;oBACnB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBACxB,CAAC,CAAC;gBAEH,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI;oBAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAErB,EAAE,CAAC,QAAQ,CAAC,SAAS;wBACnB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBACxB,CAAC,CAAC;iBACJ,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,UAAU,CAAC;YACT,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;YAExF,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,+CAA+C,EAAE,UAAS,MAAM;QACzED,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClCD,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE,uDAAuD,CAAC,CAAC;QACxF,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAExB,SAAS,GAAGgB,QAAK,CAAC,OAAO,EAAE,CAAC;QAC5B,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,WAAW;gBACT,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,4BAA4B,CAAC,CAAC;gBACzD,IAAI,EAAE,CAAC;aACR,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,eAAe,EAAE,wCAAwC,CAAC,CAAC;QACxE,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0CAA0C,EAAE,UAAS,MAAM;QACpE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAErBhB,IAAI,aAAa,CAAC;QAElBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CACrB;YACE,MAAM;YACN,QAAQ;YACR,aAAa;SACd,EACD;YACE,qBAAK,CAAC,SAAS,EAAEgB,OAAK;gBACpB,IAAI,SAAS,KAAK,QAAQ,EAAE;oBAC1B,aAAa,GAAGA,OAAK,CAAC;iBACvB;qBAAM;oBACLA,OAAK,EAAE,CAAC;iBACT;aACF;SACF,CACF,CAAC;QAEF,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7B,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI;YACxB,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC/B,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI;YAC7B,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SACpC,CAAC,CAAC;QAEH,OAAO,2BAA2B,EAAE;aACjC,IAAI;YACH,aAAa,EAAE,CAAC;SACjB,CAAC;aACD,IAAI,CAAC,2BAA2B,CAAC;aACjC,IAAI;YACH,MAAM,CAAC,WAAW,CAAC;gBACjB,OAAO;gBACP,cAAc;gBACd,gBAAgB;gBAChB,qBAAqB,EACtB,CAAC,CAAC;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,+DAA+D,EAAE,UAAS,MAAM;QACzF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAErBjB,IAAI,aAAa,CAAC;QAElBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CACrB;YACE,MAAM;YACN,QAAQ;YACR,aAAa;SACd,EACD;YACE,qBAAK,CAAC,SAAS,EAAEgB,OAAK;gBACpB,IAAI,aAAa,KAAK,SAAS,IAAI,SAAS,KAAK,QAAQ,EAAE;oBACzD,aAAa,GAAGA,OAAK,CAAC;iBACvB;qBAAM;oBACLA,OAAK,EAAE,CAAC;iBACT;aACF;SACF,CACF,CAAC;QAEF,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7B,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI;YACxB,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC/B,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI;YAC7B,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SACpC,CAAC,CAAC;QAEH,OAAO,2BAA2B,EAAE;aACjC,IAAI;YACH,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;gBACtB,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aAC/B,CAAC,CAAC;YAEH,aAAa,EAAE,CAAC;SACjB,CAAC;aACD,IAAI,CAAC,2BAA2B,CAAC;aACjC,IAAI;YACH,MAAM,CAAC,WAAW,CAAC;gBACjB,OAAO;gBACP,cAAc;gBACd,gBAAgB;gBAChB,gBAAgB;gBAChB,qBAAqB,EACtB,CAAC,CAAC;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,4DAA4D,EAAE,UAAS,MAAM;QACtF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAIrBjB,IAAI,EAAE,GAAG,IAAIC,mBAAU,CACrB;YACE,MAAM;YACN,QAAQ;YACR,aAAa;SACd,EACD;YACE,qBAAK,CAAC,SAAS,EAAEgB,OAAK;gBACpB,IAAI,SAAS,KAAK,QAAQ,EAAE,CAE3B;qBAAM;oBACLA,OAAK,EAAE,CAAC;iBACT;aACF;SACF,CACF,CAAC;QAEF,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7B,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI;YACxB,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SAC/B,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI;YAC7B,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SACpC,CAAC,CAAC;QAEH,OAAO,2BAA2B,EAAE;aACjC,IAAI;YACH,EAAE,CAAC,GAAG,gBAAS,CAAC,CAAC;YAEjB,MAAM,CAAC,WAAW,CAAC;gBACjB,OAAO;gBACP,cAAc;gBACd,gBAAgB;gBAChB,qBAAqB,EACtB,CAAC,CAAC;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;;IC/TH,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;IAEpC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,UAAS,MAAM;QACrCjB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClCD,IAAI,KAAK,CAAC;QACVA,IAAI,MAAM,GAAG;YACX,eAAE,MAAM;SACT,CAAC;QAEF,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,+BAA+B,CAAC,CAAC;YAE5D,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,iBAAU,CAAC,CAAC;YACnC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,yBAAyB,CAAC,CAAC;YAErD,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEjB,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,oBAAoB,CAAC,CAAC;YAEjD,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;YACvC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,6BAA6B,CAAC,CAAC;YAEzD,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACjB,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,oBAAoB,CAAC,CAAC;YAEjD,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;YACvC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,6BAA6B,CAAC,CAAC;YAEzD,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACjB,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,oBAAoB,CAAC,CAAC;YAEjD,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;;IClCH,KAAK,CAAC,MAAM,CAAC,kBAAkB,EAAE;QAE/B,KAAK,CAAC,IAAI,CAAC,gCAAgC,EAAE,UAAS,MAAM;YAC1DA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;YAC1BA,IAAI,IAAI,GAAGC,mBAAU,CAAC,SAAS,sBAAO,MAAM,CAAC,IAAI,CAAC,aAAa,IAAC,CAAC,CAAC;YAElE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,sBAAO,MAAM,CAAC,IAAI,CAAC,wBAAwB,IAAC,CAAC,CAAC;YACpE,IAAI,EAAE,CAAC;YACP,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,sBAAO,MAAM,CAAC,IAAI,CAAC,yBAAyB,IAAC,CAAC,CAAC;YACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEnB,UAAU;gBACR,MAAM,CAAC,WAAW,CAAC;oBACjB,OAAO;oBACP,KAAK;oBACL,wBAAwB;oBACxB,aAAa;oBACb,yBAAyB,EAC1B,CAAC,CAAC;gBACH,IAAI,EAAE,CAAC;aACR,EAAE,EAAE,CAAC,CAAC;SACR,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;;ICtBH,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IAE7B,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,UAAS,MAAM;QACxC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJA,IAAI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,uBAAQ,iBAAiB,GAAG,OAAI,CAAC,CAAC;YAEnE,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,2BAA2B,CAAC,CAAC;YAC9C,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;YACpD,MAAM,CAAC,EAAE,CAAC,CAAC,iBAAiB,EAAE,yBAAyB,CAAC,CAAC;SAC1D,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sDAAsD,EAAE,UAAS,MAAM;QAChF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACvCF,IAAM,OAAO,GAAa,EAAE,CAAC;QAC7BA,IAAM,OAAO,GAAa,EAAE,CAAC;QAC7BA,IAAM,OAAO,GAAa,EAAE,CAAC;QAC7BA,IAAM,EAAE,aAAI,GAAW,WAAK,OAAO,CAAC,IAAI,CAAC,GAAG,IAAC,CAAC;QAC9CA,IAAM,EAAE,aAAI,GAAW,WAAK,OAAO,CAAC,IAAI,CAAC,GAAG,IAAC,CAAC;QAC9CA,IAAM,EAAE,aAAI,GAAW,WAAK,OAAO,CAAC,IAAI,CAAC,GAAG,IAAC,CAAC;QAE9C,EAAE,CAAC,GAAG;YACJA,IAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,EAAE,uBAAuB,CAAC,CAAC;YACjF,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,EAAE,mBAAmB,CAAC,CAAC;YAC5D,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,EAAE,mBAAmB,CAAC,CAAC;YAC5D,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACpB,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,EAAE,oBAAoB,CAAC,CAAC;SAC9D,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,mBAAmB,CAAC,CAAA;QACpD,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,oBAAoB,CAAC,CAAA;QACrD,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,oBAAoB,CAAC,CAAA;QACrD,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,oBAAoB,CAAC,EAAE,kCAAkC,CAAC,CAAA;QACrF,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,mBAAmB,CAAC,EAAE,kCAAkC,CAAC,CAAA;IACtF,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,UAAS,MAAM;QACtC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBC,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,MAAM,GAAG,KAAK,CAAC;QACnBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,yBAAO;gBACL,MAAM,GAAG,IAAI,CAAC;aACf;SACF,CAAC,CAAC;QAEHD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9BA,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,sBAAO,iBAAiB,GAAG,OAAI,CAAC,CAAC;QAErD,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,2BAA2B,CAAC,CAAC;QAC9C,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;QACpD,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAC;QAE7C,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,CAAC,iBAAiB,EAAE,yBAAyB,CAAC,CAAC;YACzD,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAC;YAC7C,IAAI,EAAE,CAAC;SACR,EAAE,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,kCAAkC,EAAE,UAAS,MAAM;QAC5D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,MAAM,GAAG,KAAK,CAAC;QACnBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,yBAAO;gBACL,MAAM,GAAG,IAAI,CAAC;aACf;SACF,CAAC,CAAC;QACHD,IAAI,kBAAkB,GAAG,KAAK,CAAC;QAC/BA,IAAI,kBAAkB,GAAG,KAAK,CAAC;QAE/BA,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,sBAAO,kBAAkB,GAAG,OAAI,CAAC,CAAC;QACvDA,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,sBAAO,kBAAkB,GAAG,OAAI,CAAC,CAAC;QAEvD,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;QACjD,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,kCAAkC,CAAC,CAAC;QACjE,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;QACjD,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAC;QAE7C,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,CAAC,kBAAkB,EAAE,2BAA2B,CAAC,CAAC;YAC5D,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,uBAAuB,CAAC,CAAC;YACvD,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;YAExC,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qCAAqC,EAAE,UAAS,MAAM;QAC/D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,MAAM,GAAG,KAAK,CAAC;QACnBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,yBAAO;gBACL,MAAM,GAAG,IAAI,CAAC;aACf;SACF,CAAC,CAAC;QACHD,IAAI,kBAAkB,GAAG,KAAK,CAAC;QAC/BA,IAAI,kBAAkB,GAAG,KAAK,CAAC;QAE/BA,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,sBAAO,kBAAkB,GAAG,OAAI,EAAE,CAAC,CAAC,CAAC;QAE1D,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;QACjD,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,kCAAkC,CAAC,CAAC;QAEjEA,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,sBAAO,kBAAkB,GAAG,OAAI,EAAE,CAAC,CAAC,CAAC;QAE1D,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;QACjD,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,wBAAwB,CAAC,CAAC;QAE7C,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,CAAC,kBAAkB,EAAE,2BAA2B,CAAC,CAAC;YAC5D,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,uBAAuB,CAAC,CAAC;YACvD,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;YACxC,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,UAAS,MAAM;QACxC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,cAAc,GAAG,KAAK,CAAC;QAC3BA,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9BA,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9BA,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,sBAAO,cAAc,GAAG,OAAI,EAAE,CAAC,CAAC,CAAC;QACtDA,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,sBAAO,iBAAiB,GAAG,OAAI,EAAE,CAAC,CAAC,CAAC;QAC5DA,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,sBAAO,iBAAiB,GAAG,OAAI,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAEnE,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;QAC/C,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;QAC/C,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;QAC/C,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,wBAAwB,CAAC,CAAC;QAEpD,EAAE,CAAC,YAAY,EAAE,CAAC;QAElB,UAAU,CAAC;YACT,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,EAAE,2BAA2B,CAAC,CAAC;YACxD,MAAM,CAAC,EAAE,CAAC,CAAC,cAAc,EAAE,+BAA+B,CAAC,CAAC;YAC5D,MAAM,CAAC,EAAE,CAAC,CAAC,iBAAiB,EAAE,kCAAkC,CAAC,CAAC;YAClE,MAAM,CAAC,EAAE,CAAC,CAAC,iBAAiB,EAAE,kCAAkC,CAAC,CAAC;YAClE,IAAI,EAAE,CAAC;SACR,EAAE,GAAG,CAAC,CAAC;IACV,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,UAAS,MAAM;QAC/C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJA,IAAI,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,uBAAQ,EAAE,CAAC,MAAM,CAAC,MAAM,IAAC,CAAC,CAAC;YAC7DA,IAAI,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,uBAAQ,iBAAiB,GAAG,OAAI,CAAC,CAAC;SACrE,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,CAAC,iBAAiB,EAAE,yBAAyB,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,UAAS,MAAM;QACvC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,GAAG,GAAG;YACR,SAAS,EAAE,CAAC;SACb,CAAC;QAEFA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpCD,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,SAAS,EAAE;YACT,SAAS,EAAE,CAAC;SACb;QAED,EAAE,CAAC,GAAG;YACJA,IAAI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAE3B,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACjB,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;YAEnC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;SAC5B,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,UAAS,MAAM;QACrC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpCD,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,SAAS,EAAE;YACT,SAAS,EAAE,CAAC;SACb;QAED,EAAE,CAAC,GAAG;YACJA,IAAI,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAE1C,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAE3B,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACjB,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAE9B,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;SAC5B,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,+BAA+B,EAAE,UAAS,MAAM;QACzDA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,GAAG,CAAC;YACLD,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,eAAa,CAAC,CAAC;YACrD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YAEvCA,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,eAAa,EAAE,EAAE,CAAC,CAAC;YACzC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YAEvCA,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,eAAa,EAAE,EAAE,CAAC,CAAC;YAC5C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YAEvC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;SACtC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;;IC5PH,KAAK,CAAC,MAAM,CAAC,4BAA4B,CAAC,CAAC;IAE3C,KAAK,CAAC,IAAI,CAAC,oCAAoC,EAAE,UAAS,MAAM;QAC9D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,uCAAc,CAAC,KAAK;gBAClBD,IAAI,QAAQ,GAAGkB,wBAAa,CAAC,KAAK,CAAC,CAAC;gBACpC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;gBAClC,OAAO,QAAQ,CAAC;aACjB;SACF,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAE,CAAC,gBAAgB,CAAC,EAAE,kCAAkC,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gCAAgC,EAAE,UAAS,MAAM;QAC1D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBlB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,uCAAc,CAAC,KAAK;gBAClB,OAAO;oBACL,mBAAI;wBACF,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAC;qBACxC;oBACD,6BAAS,MAAM;oBACf,iCAAU,CAAC,EAAE;wBACX,iBAAiB,GAAG,IAAI,CAAC;wBACzB,OAAO,UAAU,CAAC,EAAE,CAAC,CAAC;qBACvB;oBACD,qCAAY,CAAC,KAAK;wBAChB,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;qBAC5B;oBACD,iBAAG;wBACD,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;qBACnB;oBACD,cAAc,EAAE,IAAI;iBACrB,CAAC;aACH;SACF,CAAC,CAAC;QAEH,EAAE,CAAC,UAAU;YACX,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAG,uBAAuB,CAAC,CAAC;YACvD,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0BAA0B,EAAE,UAAS,MAAM;QACpD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,uCAAc,CAAC,KAAK;gBAClB,OAAO;oBACL,+BAAU;wBACR,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAC;qBACxC;oBACD,qCAAY,CAAC,KAAK;wBAChB,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;qBAC5B;oBACD,mBAAI;;wBAEF,iBAAiB,GAAG,IAAI,CAAC;wBACzB,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;qBAC1B;oBACD,6BAAS,MAAM;oBACf,iBAAG,KAAK,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE;oBAC5B,cAAc,EAAE,IAAI;iBACrB,CAAC;aACH;SACF,CAAC,CAAC;QAEH,EAAE,CAAC,YAAY,CAAC,KAAK;YACnB,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAG,uBAAuB,CAAC,CAAC;YACvD,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,kCAAkC,EAAE,UAAS,MAAM;QAC5D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9BA,IAAI,yBAAyB,GAAG,KAAK,CAAC;QACtCA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,uCAAc,CAAC,KAAK;gBAClB,OAAO;oBACL,iCAAU,CAAC,MAAM,EAAE,IAAI;wBACrB,OAAO,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;qBACjC;oBACD,qCAAY,CAAC,KAAK;wBAChB,yBAAyB,GAAG,IAAI,CAAC;wBACjC,OAAO,YAAY,CAAC,KAAK,CAAC,CAAC;qBAC5B;oBACD,mBAAI;wBACF,OAAO,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;qBAC7B;oBACD,6BAAS;wBACP,yBAAyB,GAAG,IAAI,CAAC;qBAClC;oBACD,iBAAG;wBACD,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;qBACnB;iBACF,CAAC;aACH;SACF,CAAC,CAAC;QAEH,EAAE,CAAC,YAAY,CAAC,KAAK,uBAAQ,iBAAiB,GAAG,OAAI,CAAC,CAAC;QACvD,EAAE,CAAC,YAAY,EAAE,CAAC;QAElB,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK;gBACnB,MAAM,CAAC,EAAE,CAAC,CAAC,iBAAiB,EAAE,yBAAyB,CAAC,CAAC;gBACzD,MAAM,CAAC,EAAE,CAAC,yBAAyB,EAAE,8BAA8B,CAAC,CAAC;aACtE,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yBAAyB,EAAE,UAAS,MAAM;QACnD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,WAAW,GAAG,EAAE,CAAC;QACrBA,IAAI,gBAAgB,GAAG,KAAK,CAAC;QAC7BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,uCAAc,CAAC,KAAK;gBAClB,OAAO;oBACL,iCAAU,CAAC,MAAM,EAAE,IAAI;wBACrB,OAAO,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;qBACjC;oBACD,qCAAY,CAAC,EAAE;wBACb,YAAY,CAAC,EAAE,CAAC,CAAC;qBAClB;oBACD,mBAAI;wBACF,OAAO,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;qBAC7B;oBACD,6BAAS,MAAM;oBACf,iBAAG;wBACD,gBAAgB,GAAG,IAAI,CAAC;wBACxB,OAAO,WAAW,IAAI,EAAE,CAAC;qBAC1B;iBACF,CAAC;aACH;SACF,CAAC,CAAC;QAEH,EAAE,CAAC,KAAK;YACN,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAG,qBAAqB,CAAC,CAAC;YACpD,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;;ICtJHF,IAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC;IAC1BC,IAAImB,WAAS,CAAC;IAEd,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAE;QAC7B,6BAAS;YACP,IAAIA,WAAS,EAAE;gBACbA,WAAS,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;KACF,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,UAAS,MAAM;QACpC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAElBnB,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClCD,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,SAAS,GAAG,IAAI,CAAC;SAClB;;;QAID,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;;QAGxB,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,wCAAwC,CAAC,CAAC;YAChE,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;SAClC,EAAE,EAAE,CAAC,CAAC;;QAGP,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,yCAAyC,CAAC,CAAC;YACjE,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;SAClC,EAAE,EAAE,CAAC,CAAC;;QAGP,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,yCAAyC,CAAC,CAAC;YACjE,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;SAClC,EAAE,EAAE,CAAC,CAAC;;;QAIP,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,iCAAiC,CAAC,CAAC;SACzD,EAAE,GAAG,CAAC,CAAC;;;;;QAOR,UAAU;YACR,SAAS,GAAG,KAAK,CAAC;;YAGlB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;;YAGxB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;;YAGlC,UAAU;gBACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,oEAAoE,CAAC,CAAC;gBAC3F,IAAI,EAAE,CAAC;aACR,EAAE,GAAG,CAAC,CAAC;SACT,EAAE,GAAG,CAAC,CAAC;IACV,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sBAAsB,EAAE,UAAS,MAAM;QAChD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAElBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClCD,IAAI,IAAI,GAAG,CAAC,CAAC;QAEbA,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,SAAS,GAAG,IAAI,CAAC;SAClB;;;;QAKD,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QACxB,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QACrB,SAAS,GAAG,KAAK,CAAC;;QAGlB,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;SACxC,EAAE,EAAE,CAAC,CAAC;;QAGP,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;SACxC,EAAE,EAAE,CAAC,CAAC;;QAGP,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;SACxC,EAAE,EAAE,CAAC,CAAC;;;QAIP,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;SACvB,EAAE,GAAG,CAAC,CAAC;;;;;QAOR,UAAU;YACR,SAAS,GAAG,KAAK,CAAC;;YAGlB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;;YAGxB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YACxC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,oEAAoE,CAAC,CAAC;YAC3F,SAAS,GAAG,KAAK,CAAC;;YAGlB,UAAU;gBACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;gBACtB,IAAI,EAAE,CAAC;aACR,EAAE,GAAG,CAAC,CAAC;SACT,EAAE,GAAG,CAAC,CAAC;IACV,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wDAAwD,EAAE,UAAS,MAAM;QAClF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,KAAK,CAAC;SACb;QAEDA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClC,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG;YACJD,IAAI,cAAc,GAAG,EAAE,CAAC,eAAe,CAAC;YACxC,EAAE,CAAC,QAAQ,CAAC,IAAI;gBACd,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;aAClD,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;SACd,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,mDAAmD,EAAE,UAAS,MAAM;QAC7EA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClCD,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,SAAS,GAAG,IAAI,CAAC;SAClB;QAED,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAExB,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;SACpC,EAAE,EAAE,CAAC,CAAC;QAEP,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;YACrB,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yDAAyD,EAAE,UAAS,MAAM;QACnF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,kCAAkC,CAAC,CAAC;YACrD,SAAS,GAAG,IAAI,CAAC;SAClB;QAEDA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAE5C,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,wBAAwB,CAAC,CAAC;;QAGtD,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,wCAAwC,CAAC,CAAC;QAEvE,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,wCAAwC,CAAC,CAAC;YAChE,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,uDAAuD,EAAE,UAAS,MAAM;QACjF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACxCD,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,iCAAiC,CAAC,CAAC;YACnD,SAAS,GAAG,IAAI,CAAC;SAClB;QAEDA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAE5C,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,4BAA4B,CAAC,CAAC;YAC3D,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,+BAA+B,CAAC,CAAC;YACtD,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IAET,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,kDAAkD,EAAE,UAAS,MAAM;QAC5E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAEnC,SAAS,SAAS,CAAC,GAAG;YACpB,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,6CAA6C,CAAC,CAAC;YACxE,IAAI,EAAE,CAAC;SACR;QAED,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QACxC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;QAC5C,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gDAAgD,EAAE,UAAS,MAAM;QAC1E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACnCD,IAAI,SAAS,GAAG,KAAK,CAAC;QACtBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,iCAAiC,CAAC,CAAC;YACnD,IAAI,SAAS,EAAE;gBACb,IAAI,EAAE,CAAC;aACR;YACD,SAAS,GAAG,IAAI,CAAC;SAClB;QAEDA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAE5C,UAAU;YACR,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,mEAAmE,CAAC,CAAC;YAClG,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,+BAA+B,CAAC,CAAC;SACvD,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gFAAgF,EAAE,UAAS,MAAM;QAC1G,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACnCD,IAAI,WAAW,GAAG,CAAC,CAAC;QAEpB,SAAS,SAAS;YAChB,WAAW,EAAE,CAAC;SACf;QAEDA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAErD,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,EAAE,6BAA6B,CAAC,CAAC;YAC5D,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,+BAA+B,CAAC,CAAC;YAC7D,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAEzC,UAAU;gBACR,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,EAAE,+CAA+C,CAAC,CAAC;gBAC9E,IAAI,EAAE,CAAC;aACR,EAAE,EAAE,CAAC,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IAET,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yCAAyC,EAAE,UAAS,MAAM;QACnEA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,WAAW,GAAG,CAAC,CAAC;QACpBA,IAAI,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,SAAS,SAAS;;;;YAChB,WAAW,EAAE,CAAC;YACd,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;QAED,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,6CAA6C,CAAC,CAAC;QAE5E,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,8CAA8C,CAAC,CAAC;SAC9E,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,2CAA2C,CAAC,CAAC;YAC1E,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAE,EAAE,CAAE,EAAE,wCAAwC,CAAC,CAAC;YAC/E,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,2DAA2D,EAAE,UAAS,MAAM;QACrFA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,SAAS,SAAS;YAChB,WAAW,EAAE,CAAC;SACf;QAED,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAC3BA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,6CAA6C,CAAC,CAAC;QAE5E,UAAU;YACR,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACjB,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,8CAA8C,CAAC,CAAC;SAC9E,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,wCAAwC,CAAC,CAAC;YACvE,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,oDAAoD,EAAE,UAAS,MAAM;QAC9EA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,WAAW,GAAG,CAAC,CAAC;QACpBA,IAAI,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,SAAS,SAAS;;;;YAChB,WAAW,EAAE,CAAC;YACd,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;QAED,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACjC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACjC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,yCAAyC,CAAC,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAE,EAAE,CAAE,EAAE,uDAAuD,CAAC,CAAC;QAE9F,UAAU;YACR,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,8DAA8D,CAAC,CAAC;SAC9F,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,2CAA2C,CAAC,CAAC;YAC1E,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sEAAsE,EAAE,UAAS,MAAM;QAChGA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpCD,IAAI,cAAc,GAAG,CAAC,CAAC;QACvBA,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,SAAS,GAAG;YACV,cAAc,EAAE,CAAC;SAClB;QACD,SAAS,GAAG;YACV,cAAc,EAAE,CAAC;SAClB;QAED,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,4CAA4C,CAAC,CAAC;QAE9E,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3BA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,4CAA4C,CAAC,CAAC;QAE9E,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,0DAA0D,CAAC,CAAC;IAC9F,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sCAAsC,EAAE,UAAS,MAAM;QAChEA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,WAAW,GAAG,CAAC,CAAC;QACpBA,IAAI,UAAU,GAAa,EAAE,CAAC;QAC9B,SAAS,SAAS,CAAC,KAAK;YACtB,WAAW,EAAE,CAAC;YACd,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAEDA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,6CAA6C,CAAC,CAAC;QAE5E,UAAU;YACR,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,6DAA6D,CAAC,CAAC;YAC/G,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wDAAwD,EAAE,UAAS,MAAM;QAClFA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,WAAW,GAAG,CAAC,CAAC;QACpBA,IAAI,UAAU,GAAa,EAAE,CAAC;QAC9B,SAAS,SAAS,CAAC,KAAK;YACtB,WAAW,EAAE,CAAC;YACd,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAEDA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChCA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAC5C,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,6CAA6C,CAAC,CAAC;QAE5E,UAAU;YACR,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,EAAE,kDAAkD,CAAC,CAAC;YACrF,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAClB,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,EAAE,6CAA6C,CAAC,CAAC;YAChF,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iDAAiD,EAAE,UAAS,MAAM;QAC3EA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpCD,IAAI,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,SAAS,SAAS,CAAC,KAAK;YAEtB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAEDA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACtC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACtC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAEtC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,6DAA6D,CAAC,CAAC;QAE/G,UAAU;YACR,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,6DAA6D,CAAC,CAAC;SAChH,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,6DAA6D,CAAC,CAAC;YAC/G,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,mEAAmE,EAAE,UAAS,MAAM;QAC7FA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpCD,IAAI,UAAU,GAAa,EAAE,CAAC;QAC9B,SAAS,SAAS,CAAC,KAAK;YAEtB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAEDA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACtC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACtCA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAElD,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,6DAA6D,CAAC,CAAC;QAE/G,UAAU;YACR,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACjB,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,8DAA8D,CAAC,CAAC;SAClI,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,sCAAsC,CAAC,CAAC;YACzG,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,MAAM;QACnC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YAChD,IAAI,EAAE,CAAC;SACR;QAEDA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;qBAClC,OAAO;SACR,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,IAAI,gBAAU,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,mDAAmD,EAAE,UAAS,MAAM;QAC7E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAElCD,IAAI,GAAG;YACL,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9B,OAAO,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SAC7B,CAAC;QAEFA,IAAI,GAAG;YACL,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9BA,IAAI,KAAK,GAAG,GAAG,EAAE,CAAC;YAClB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEjB,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SACtB,CAAC;QAEF,GAAG,EAAE,CAAC;IACR,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qCAAqC,EAAE,UAAS,MAAM;QAC/D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,UAAS,IAAI;gBACvB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAC7B,iBAAiB,GAAG,IAAI,CAAC;aAC1B,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;SACzB,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,4CAA4C,EAAE,UAAS,MAAM;QACtE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCkB,WAAS,GAAGH,QAAK,CAAC,OAAO,EAAE,CAAC;QAE5BhB,IAAI,SAAS,GAAG,QAAQ,EAAE,CAAC;QAC3B,EAAE,CAAC,QAAQ;YACTA,IAAI,OAAO,GAAG,QAAQ,EAAE,CAAC;YACzB,MAAM,CAAC,EAAE,CAAC,OAAO,GAAG,SAAS,GAAG,GAAG,EAAE,8BAA8B,CAAC,CAAC;YACrE,IAAI,EAAE,CAAC;SACR,EAAE,IAAI,CAAC,CAAC;QAETmB,WAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;;IC3lBHpB,IAAM,KAAK,GAAG,KAAK,CAAC;IACpB;IACA,KAAK,GAAG,KAAK,CAAC;IACdC,IAAI,MAAM,GAAa,EAAE,CAAC;AAE1B,aAAgB,cAAc,CAAC,SAAiB;QAC9C,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEvB,OAAO,SAAS,CAAC;IACnB,CAAC;AAED,aAAgB,aAAa,CAAC,MAAM;;QAElC,KAAK,GAAG,MAAM,CAAC;IACjB,CAAC;AAED,aAAgB,UAAU;;QAExB,KAAK,GAAG,KAAK,CAAC;QACd,MAAM,GAAG,EAAE,CAAC;IACd,CAAC;QAEoB,eAAe,GAClC,yBAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAAG;;+DAAC;IAEtC,mBAAI;QACF,OAAO,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;IAC5B;;;;ICrBF,KAAK,CAAC,MAAM,CAAC,kBAAkB,EAAE;QAC/B,UAAU,EAAE;;YAEV,aAAa,CAAC,eAAe,CAAC,CAAC;SAChC;QAED,SAAS,EAAE;YACT,UAAU,EAAE,CAAC;SACd;KACF,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,mDAAmD,EAAE,UAAS,MAAM;QAC7E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,SAAS,CAAC;QACdA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,GAAG,CAAC;YACL,SAAS,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;YAE9B,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,EAAE,2CAA2C,CAAC,CAAC;SACjF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,8DAA8D,EAAE,UAAS,MAAM;QACxF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,CAAC;QACdA,IAAI,OAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC5BA,IAAI,OAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC5BA,IAAI,MAAM,kBAAW,CAAC;QACtBA,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3CA,IAAI,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3CA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,GAAG,CAAC;YACL,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtC,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAE5C,SAAS,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;YAE9B,UAAU,EAAE,CAAC;YAEb,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EACjC;gBACE;oBACE,IAAI,EAAE,CAAC,IAAI,CAAC;4BACZ,MAAM;oBACN,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,OAAO;iBAChB;gBACD;oBACE,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;4BAClB,MAAM;oBACN,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,OAAO;iBAChB;aACF,EACC,qBAAqB,CAAC,CAAC;SAC1B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iEAAiE,EAAE,UAAS,MAAM;QAC3F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,CAAC;QACdA,IAAI,OAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC5BA,IAAI,OAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC5BA,IAAI,MAAM,kBAAW,CAAC;QACtBA,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3CA,IAAI,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3CA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,GAAG,CAAC;YACL,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAChD,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAEtD,SAAS,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;YAE9B,UAAU,EAAE,CAAC;YAEb,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EACjC;gBACE;oBACE,IAAI,EAAE,CAAC,IAAI,CAAC;4BACZ,MAAM;oBACN,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,OAAO;iBAChB;gBACD;oBACE,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;4BAClB,MAAM;oBACN,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,OAAO;iBAChB;aACF,EACC,qBAAqB,CAAC,CAAC;SAC1B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iEAAiE,EAAE,UAAS,MAAM;QAC3F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,CAAC;QACdA,IAAI,OAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC5BA,IAAI,OAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC5BA,IAAI,MAAM,kBAAW,CAAC;QACtBA,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3CA,IAAI,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3CA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,GAAG,CAAC;YACL,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACzC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAE/C,SAAS,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;YAE9B,UAAU,EAAE,CAAC;YAEb,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EACjC;gBACE;oBACE,IAAI,EAAE,CAAC,IAAI,CAAC;4BACZ,MAAM;oBACN,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,OAAO;iBAChB;gBACD;oBACE,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;4BAClB,MAAM;oBACN,KAAK,EAAE,QAAQ;oBACf,MAAM,EAAE,OAAO;iBAChB;aACF,EACC,qBAAqB,CAAC,CAAC;SAC1B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wDAAwD,EAAE,UAAS,MAAM;QAClF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,CAAC;QACdA,IAAI,OAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC5BA,IAAI,OAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC5BA,IAAI,MAAM,kBAAW,CAAC;QACtBA,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3CA,IAAI,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3CA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QAExC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,GAAG,CAAC;YACL,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAC1C,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAEhD,SAAS,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;YAE9B,UAAU,EAAE,CAAC;YAEb,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,EACxC;gBACE;oBACE,GAAG,EAAE;wBACH;4BACE,IAAI,EAAE,CAAC,IAAI,CAAC;oCACZ,MAAM;4BACN,KAAK,EAAE,QAAQ;4BACf,MAAM,EAAE,OAAO;yBAChB;qBACF;oBACD,GAAG,EAAE;wBACH;4BACE,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;oCAClB,MAAM;4BACN,KAAK,EAAE,QAAQ;4BACf,MAAM,EAAE,OAAO;yBAChB;qBACF;iBACF;aACF,EACC,qBAAqB,CAAC,CAAC;SAC1B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gEAAgE,EAAE,UAAS,MAAM;QAC1F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,CAAC;QACdA,IAAI,MAAM,kBAAW,CAAC;QACtBA,IAAI,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3CA,IAAI,QAAQ,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3CA,IAAI,SAAS,GAAG,cAAc,CAAC,YAAY,CAAC,CAAC;QAC7CA,IAAI,UAAU,GAAG,cAAc,CAAC,aAAa,CAAC,CAAC;QAC/CA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;QAEzD,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,GAAG,CAAC;YACL,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAE3B,EAAE,CAAC,GAAG,CAAC;gBACL,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBAC7B,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAE5B,SAAS,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;gBAE9B,UAAU,EAAE,CAAC;gBAEb,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,EACtC;oBACE;wBACE,IAAI,EAAE;4BACJ;gCACE,IAAI,EAAE,SAAS;wCACf,MAAM;gCACN,KAAK,EAAE,SAAS;gCAChB,MAAM,EAAE,IAAI;6BACb;yBACF;wBACD,GAAG,EAAE,EAAE;wBACP,KAAK,EAAE;4BACL;gCACE,IAAI,EAAE,SAAS;wCACf,MAAM;gCACN,KAAK,EAAE,UAAU;gCACjB,MAAM,EAAE,IAAI;6BACb;yBACF;wBACD,GAAG,EAAE,EAAE;qBACR;oBACD;wBACE,IAAI,EAAE,EAAE;wBACR,GAAG,EAAE;4BACH;gCACE,IAAI,EAAE,SAAS;wCACf,MAAM;gCACN,KAAK,EAAE,QAAQ;gCACf,MAAM,EAAE,IAAI;6BACb;yBACF;wBACD,KAAK,EAAE,EAAE;wBACT,GAAG,EAAE;4BACH;gCACE,IAAI,EAAE,SAAS;wCACf,MAAM;gCACN,KAAK,EAAE,QAAQ;gCACf,MAAM,EAAE,IAAI;6BACb;yBACF;qBACF;iBACF,EACD,qBAAqB,CAAC,CAAC;aACxB,CAAC,CAAC;SACJ,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,MAAM;QACnCD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,YAAY,GAAG,cAAc,CAAC,eAAe,CAAC,CAAC;QACnD,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAEjC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI;YACrB,UAAU;gBACR,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,EAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;gBAC/C,IAAI,EAAE,CAAC;aACR,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,EAAG,CAAC,OAAQ,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;;ICpSH,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAE5B,KAAK,CAAC,IAAI,CAAC,6CAA6C,EAAE,UAAS,MAAM;QACvEA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,QAAQ,CAAC,KAAK,iBAAU,CAAC,CAAC;QAC7B,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;SACvC;QAED,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,eAAe,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,sBAAsB,CAAC,CAAC;QAEpG,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,QAAQ,CAAC,KAAK,iBAAU,CAAC,CAAC;QAE7B,IAAI,IAAI,KAAK,EAAE,CAAC,KAAK,EAAE;YACrB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACjBD,IAAI,KAAK,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5E,MAAM,CAAC,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ,EAAE,qBAAqB,CAAC,CAAC;YAE5DA,IAAI,OAAO,GAAG,UAAS,KAAK,EAAE,qBAAqB;gBACjD,MAAM,CAAC,EAAE,CAAC,qBAAqB,EAAE,gDAAgD,CAAC,CAAC;gBACnF,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;aAC7D,CAAC;YAEF,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,WAAE,OAAO,EAAE,CAAC,CAAC;YAC7C,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;YAEhB,EAAE,CAAC,GAAG;gBACJ,EAAE,CAAC,QAAQ,CAAC,QAAQ;oBAClB,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;IACH,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,+CAA+C,EAAE,UAAS,MAAM;QACzED,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,OAAO,GAAG,UAAS,KAAK,EAAE,qBAAqB;YACjD,MAAM,CAAC,WAAW,CAAC,qBAAqB,EAAE,SAAS,EAAE,6EAA6E,CAAC,CAAC;YACpI,IAAI,EAAE,CAAC;SACR,CAAC;QACFA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE,WAAE,OAAO,EAAE,CAAC,CAAC;QAE9C,EAAE,CAAC,KAAK;YACN,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;SAC7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,IAAI,KAAK,EAAE,CAAC,KAAK,EAAE;QACrB,KAAK,CAAC,IAAI,CAAC,sCAAsC,EAAE,UAAS,MAAM;YAChE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAEjBD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;YAC1BA,IAAI,OAAO,GAAG,UAAS,KAAK,EAAE,qBAAqB;gBACjD,MAAM,CAAC,EAAE,CAAC,qBAAqB,EAAE,gDAAgD,CAAC,CAAC;gBACnF,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;gBAC5D,MAAM,CAAC,EAAE,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,mCAAmC,CAAC,CAAC;gBAClG,IAAI,EAAE,CAAC;aACR,CAAC;YACFA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE,WAAE,OAAO,EAAE,CAAC,CAAC;YAC9C,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;YAEhB,EAAE,CAAC,KAAK;gBACN,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;aAC7B,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;;IC/DD,KAAK,CAAC,MAAM,CAAC,wBAAwB,EAAE;QACrC,UAAU,EAAE;;YAEV,aAAa,CAAC,eAAe,CAAC,CAAC;SAChC;QAED,SAAS,EAAE;YACT,UAAU,EAAE,CAAC;SACd;KACF,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,uDAAuD,EAAE,UAAS,MAAM;QACjF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,CAAC;QACdA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC;QAEnD,EAAE,CAAC,GAAG;YACJ,SAAS,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAE7E,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SACpC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,mDAAmD,EAAE,UAAS,MAAM;QAC7E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,CAAC;QACdA,IAAI,MAAM,kBAAW,CAAC;QACtBA,IAAI,gBAAgB,GAAG,cAAc,CAAC,mBAAmB,CAAC,CAAC;QAC3DA,IAAI,WAAW,GAAG,cAAc,CAAC,cAAc,CAAC,CAAC;QACjDA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC;QAEnD,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC9B,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;YAEnC,SAAS,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAE7E,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC1B,MAAM,EAAE;oBACN;wBACE,MAAM,EAAE,IAAI;gCACZ,MAAM;wBACN,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,WAAW;qBACnB;iBACF;gBACD,WAAW,EAAE;oBACX;wBACE,MAAM,EAAE,IAAI;gCACZ,MAAM;wBACN,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,gBAAgB;qBACxB;iBACF;aACF,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;;ICjEH,KAAK,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;IAErC,IAAM,QAAQ,GAGZ,kBAAY,UAAsB;QAD1B,eAAU,GAAW,CAAC,CAAC;QAE7B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAChC,EAAC;uBAEM;QACLD,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClCA,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAClCA,IAAI,IAAI,GAAG,UAAU,CAAC,MAAM,IAAI,SAAS,CAAC;QAE1CA,IAAI,KAAK,GAAG,IAAI,GAAG,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QAErD,OAAO;kBACL,IAAI;mBACJ,KAAK;SACN,CAAC;IACJ,EACD;IAED,KAAK,CAAC,IAAI,CAAC,eAAe,EAAE,UAAS,MAAM;QACzCA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClCD,IAAI,KAAK,GAAG,CAAC,CAAC;QAEdA,IAAI,KAAK,GAAG;YACV,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;YAC9B,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;YAC9B,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;SAC/B,CAAC;QAEF,SAAS,KAAK;YACZ,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YAClB,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC;SAC3B;QAED,SAAS,KAAK;YACZ,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YAClB,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC;SAC3B;QAED,SAAS,KAAK;YACZ,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACpB,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC;SAC7B;QAEDA,IAAI,QAAQ,wBAAS,IAAI,QAAQ,CAAC;YAChC,KAAK;YACL,KAAK;YACL,KAAK;SACN,IAAC,CAAC;QAEH,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YAEtC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;gBACtB,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAG,KAAK,EAAE,CAAC,CAAC,EAAE;gBAC/B,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAG,KAAK,EAAE,CAAC,CAAC,EAAE;gBAC/B,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAG,KAAK,EAAE,CAAC,CAAC,EAAE;aAChC,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAG,KAAK,EAAE,CAAC,EAAE;YAC9B,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAG,KAAK,EAAE,CAAC,EAAE;YAC9B,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAG,KAAK,EAAE,CAAC,EAAE;SAC/B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;;ICrEH,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;IAEjC,KAAK,CAAC,IAAI,CAAC,wBAAwB,EAAE,UAAS,MAAM;QAClD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK;gBACnB,iBAAiB,GAAG,IAAI,CAAC;aAC1B,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,UAAS,MAAM;QAC3D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE;gBACnC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,6BAA6B,CAAC,CAAC;gBAC7D,iBAAiB,GAAG,IAAI,CAAC;aAC1B,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sCAAsC,EAAE,UAAS,MAAM;QAChE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9BA,IAAI,YAAY,GAAG;YACjB,IAAI,EAAE,IAAI;YACV,qCAAa;gBACX,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,6BAA6B,CAAC,CAAC;gBAC7D,iBAAiB,GAAG,IAAI,CAAC;aAC1B;SACF,CAAC;QAEF,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,EAAE,eAAe,IAAC,CAAC,CAAC;QAEpE,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,kCAAkC,EAAE,UAAS,MAAM;QAC5D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,+FAA+F,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC9H;QAEDA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,aAAa,CAAC,EAAE;qBACvC,OAAO;SACR,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,IAAI,IAAC,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wCAAwC,EAAE,UAAS,MAAM;QAClE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,+FAA+F,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC9H;QAEDD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,aAAa,CAAC,EAAE;qBACvC,OAAO;SACR,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,SAAS,IAAC,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sEAAsE,EAAE,UAAS,MAAM;QAChG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,+FAA+F,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC9H;QAEDD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,aAAa,CAAC,EAAE;qBACvC,OAAO;SACR,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,SAAS,CAAC,aAAa,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,eAAe,IAAC,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,6CAA6C,EAAE,UAAS,MAAM;QACvE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC;gBACnD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,6BAA6B,CAAC,CAAC;gBAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,mCAAmC,CAAC,CAAC;gBACxD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,oCAAoC,CAAC,CAAC;gBACzD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,mCAAmC,CAAC,CAAC;gBACxD,iBAAiB,GAAG,IAAI,CAAC;aAC1B,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACb,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,UAAS,MAAM;QAC3D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,CAAC,GAAG,CAAC,CAAC;QACVA,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,SAAS,WAAW;YAClB,CAAC,EAAE,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,qCAAqC,CAAC,CAAC;YAC1D,iBAAiB,GAAG,IAAI,CAAC;SAC1B;QAED,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;YACpC,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;SACrC,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,+BAA+B,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,kDAAkD,EAAE,UAAS,MAAM;QAC5E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,CAAC,GAAG,CAAC,CAAC;QACVA,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,SAAS,WAAW;YAClB,CAAC,EAAE,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,qCAAqC,CAAC,CAAC;YAC1D,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;YAC9D,iBAAiB,GAAG,IAAI,CAAC;SAC1B;QAEDA,IAAI,MAAM,GAAG,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC;QAExB,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;YAC5C,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;SAC7C,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,+BAA+B,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wDAAwD,EAAE,UAAS,MAAM;QAClF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,SAAS,WAAW;YAClB,CAAC,EAAE,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;SAC/D;QAED,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,EAAE,WAAW,CAAC,CAAC;YAChD,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,EAAE,WAAW,CAAC,CAAC;SACjD,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qEAAqE,EAAE,UAAS,MAAM;QAC/F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC;YACvB,CAAC,EAAE,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,qCAAqC,CAAC,CAAC;YAC1D,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,8BAA8B,CAAC,CAAC;YACnD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;SAC/D;QAEDA,IAAI,MAAM,GAAG,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC;QAExB,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACnD,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,0BAA0B,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0EAA0E,EAAE,UAAS,MAAM;QACpG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC;YACvB,CAAC,EAAE,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,2CAA2C,CAAC,CAAC;YAChE,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,8BAA8B,CAAC,CAAC;YACnD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;SAC/D;QAEDA,IAAI,MAAM,GAAG,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC;QAExB,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACnD,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,0BAA0B,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,+EAA+E,EAAE,UAAS,MAAM;QACzG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC;YACvB,CAAC,EAAE,CAAC;YACJ,IAAI,CAAC,KAAK,CAAC,EAAE;gBACX,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,sCAAsC,CAAC,CAAC;aAC5D;iBAAM;gBACL,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,uCAAuC,CAAC,CAAC;aAC7D;YACD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,8BAA8B,CAAC,CAAC;YACnD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;SAC/D;QAID,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACtD,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,EAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACvD,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qFAAqF,EAAE,UAAS,MAAM;QAC/G,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QACxCD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,SAAS,WAAW,CAAC,CAAC;YACpB,CAAC,EAAE,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,yBAAyB,CAAC,CAAC;YAC9C,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;SAC/D;QAED,SAAS,cAAc;YACrB,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;SAChD;QAEDA,IAAI,MAAM,GAAG,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC;QAExB,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;YAC/C,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;SAChD,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qFAAqF,EAAE,UAAS,MAAM;QAC/G,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,MAAM,GAAG,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC;QACxBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,EAAG,CAAC,CAAC;QAE7CD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,SAAS,WAAW,CAAC,CAAC;YACpB,CAAC,EAAE,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,yBAAyB,CAAC,CAAC;YAC9C,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;SAC/D;QAED,SAAS,cAAc;YACrB,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;SAChD;QAED,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;YAC/C,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;SAChD,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,MAAM;QACnC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SACjD;QAEDA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,WAAE,OAAO,EAAE,CAAC,CAAC;QAEjD,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,QAAQ;gBACtB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;aACrC,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gDAAgD,EAAE,UAAS,MAAM;QAC1E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,UAAS,IAAI;gBAClC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAC7B,iBAAiB,GAAG,IAAI,CAAC;aAC1B,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;SACnB,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;;IC5UHA,IAAI,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;IAEjD,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE;QAC1B,6BAAS;YACP,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,mBAAmB,CAAC;SAC9C;KACF,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wBAAwB,EAAE,UAAS,MAAM;QAClD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,uBAAQ,iBAAiB,GAAG,OAAI,CAAC,CAAC;SACpD,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,UAAS,MAAM;QAC3D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;gBACjC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,6BAA6B,CAAC,CAAC;gBAC7D,iBAAiB,GAAG,IAAI,CAAC;aAC1B,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gDAAgD,EAAE,UAAS,MAAM;QAC1E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAS,IAAI;gBAC9B,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAC7B,iBAAiB,GAAG,IAAI,CAAC;aAC1B,EAAE,QAAQ,CAAC,CAAC;SACd,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sCAAsC,EAAE,UAAS,MAAM;QAChE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9BA,IAAI,YAAY,GAAG;YACjB,IAAI,EAAE,IAAI;YACV,qCAAa;gBACX,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,6BAA6B,CAAC,CAAC;gBAC7D,iBAAiB,GAAG,IAAI,CAAC;aAC1B;SACF,CAAC;QAEF,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,YAAY,EAAE,eAAe,IAAC,CAAC,CAAC;QAEhE,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,kCAAkC,EAAE,UAAS,MAAM;QAC5D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,+FAA+F,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC9H;QAEDA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,aAAa,CAAC,EAAE;qBACvC,OAAO;SACR,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,IAAC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wCAAwC,EAAE,UAAS,MAAM;QAClE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,+FAA+F,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC9H;QAEDD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,aAAa,CAAC,EAAE;qBACvC,OAAO;SACR,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,SAAS,IAAC,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sEAAsE,EAAE,UAAS,MAAM;QAChG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,+FAA+F,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC9H;QAEDD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,aAAa,CAAC,EAAE;qBACvC,OAAO;SACR,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,eAAe,IAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,6CAA6C,EAAE,UAAS,MAAM;QACvE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC;gBACjD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,6BAA6B,CAAC,CAAC;gBAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,mCAAmC,CAAC,CAAC;gBACxD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,oCAAoC,CAAC,CAAC;gBACzD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,mCAAmC,CAAC,CAAC;gBACxD,iBAAiB,GAAG,IAAI,CAAC;aAC1B,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACb,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,UAAS,MAAM;QAC3D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,SAAS,WAAW;YAClB,CAAC,EAAE,CAAC;SACL;QAED,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;YAChC,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;SACjC,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gDAAgD,EAAE,UAAS,MAAM;QAC1E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjCD,IAAI,MAAM,GAAG,EAAC,KAAK,EAAG,CAAC,EAAC,CAAC;QAEzB,SAAS,WAAW;YAClB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;SAC/D;QAED,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;YACxC,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;SACzC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qEAAqE,EAAE,UAAS,MAAM;QAC/F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC;YACvB,CAAC,EAAE,CAAC;YACJ,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,8BAA8B,CAAC,CAAC;YACnD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;SAC/D;QAEDA,IAAI,MAAM,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QAE1B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9C,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/C,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0EAA0E,EAAE,UAAS,MAAM;QACpG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC;YACvB,CAAC,EAAE,CAAC;YACJ,IAAI,CAAC,KAAK,CAAC,EAAE;gBACX,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,sCAAsC,CAAC,CAAC;aAC5D;iBAAM;gBACL,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,uCAAuC,CAAC,CAAC;aAC7D;YACD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,8BAA8B,CAAC,CAAC;YACnD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;SAC/D;QAEDA,IAAI,MAAM,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QAE1B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9C,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/C,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,+EAA+E,EAAE,UAAS,MAAM;QACzG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,SAAS,WAAW,CAAC,CAAC,EAAE,CAAC;YACvB,CAAC,EAAE,CAAC;YACJ,IAAI,CAAC,KAAK,CAAC,EAAE;gBACX,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,sCAAsC,CAAC,CAAC;aAC5D;iBAAM;gBACL,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,uCAAuC,CAAC,CAAC;aAC7D;YACD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,8BAA8B,CAAC,CAAC;YACnD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,6BAA6B,CAAC,CAAC;SAC/D;QAID,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACrD,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,MAAM;QACnC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SACjD;QAEDA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;qBAClC,OAAO;SACR,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,QAAQ;gBAClB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;aACrC,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;;ICnQH,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IAE7B,KAAK,CAAC,IAAI,CAAC,+CAA+C,EAAE,UAAS,MAAM;QACzE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBD,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QAExC,EAAE,CAAC,EAAE,CAAC,KAAK,uBAAQ,UAAU,KAAE,CAAC,CAAC;QAEjC,SAAS,OAAO;YACd,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC7B;QAED,SAAS,OAAO;YACd,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC7B;QAED,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAClC,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SACnC,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,oCAAoC,EAAE,UAAS,MAAM;QAC9D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBD,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;YACtC,qBAAK;gBACH,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;aAC7B;SACF,CAAC,CAAC;QAEH,EAAE,CAAC,EAAE,CAAC,KAAK,uBAAQ,UAAU,KAAE,CAAC,CAAC;QAEjC,SAAS,OAAO;YACd,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC7B;QAED,SAAS,OAAO;YACd,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC7B;QAED,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAClC,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SACnC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0DAA0D,EAAE,UAAS,MAAM;QACpF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAGjBD,IAAI,aAAa,GAAG,IAAI,CAAC;QACzBA,IAAI,cAAc,GAAG,IAAI,CAAC;QAE1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,qBAAK,CAAC,KAAK,EAAE,MAAM;gBACjB,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBACnC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;aACtC;SACF,CAAC,CAAC;QAEH,EAAE,CAAC,EAAE,CAAC,KAAK,YAAG,KAAK,EAAE,MAAM;YACzB,aAAa,GAAG,KAAK,CAAC;YACtB,cAAc,GAAG,MAAM,CAAC;SACzB,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,iBAAU,IAAC,CAAC,CAAC;QACjD,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,iBAAU,IAAC,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IACH;IAEA,KAAK,CAAC,IAAI,CAAC,+CAA+C,EAAE,UAAS,MAAM;QACzE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBD,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QAExC,EAAE,CAAC,EAAE,CAAC,OAAO,uBAAQ,UAAU,KAAE,CAAC,CAAC;QAEnC,SAAS,OAAO;YACd,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC7B;QAED,SAAS,OAAO;YACd,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC7B;QAED,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC5B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAClC,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;SACnC,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wCAAwC,EAAE,UAAS,MAAM;QAClE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBD,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;YACtC,yBAAO;gBACL,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;aAC7B;SACF,CAAC,CAAC;QAEH,EAAE,CAAC,EAAE,CAAC,OAAO,uBAAQ,UAAU,KAAE,CAAC,CAAC;QAEnC,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,iBAAU,CAAC,CAAC;YACnC,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,iBAAU,CAAC,CAAC;SACpC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gEAAgE,EAAE,UAAS,MAAM;QAC1F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAGjBD,IAAI,aAAa,GAAG,IAAI,CAAC;QACzBA,IAAI,cAAc,GAAG,IAAI,CAAC;QAE1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,yBAAO,CAAC,KAAK,EAAE,MAAM;gBACnB,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBACnC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;aACtC;SACF,CAAC,CAAC;QAEH,EAAE,CAAC,EAAE,CAAC,OAAO,YAAG,KAAK,EAAE,MAAM;YAC3B,aAAa,GAAG,KAAK,CAAC;YACtB,cAAc,GAAG,MAAM,CAAC;SACzB,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,iBAAU,IAAC,CAAC,CAAC;QACjD,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,iBAAU,IAAC,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH;IACA,KAAK,CAAC,IAAI,CAAC,4CAA4C,EAAE,UAAS,MAAM;QACtE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBD,IAAI,WAAW,GAAG,KAAK,CAAC;QACxBA,IAAI,YAAY,GAAG,KAAK,CAAC;QAEzBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,SAAS,KAAK;YACZ,WAAW,GAAG,IAAI,CAAC;SACpB;QAED,SAAS,MAAM;YACb,YAAY,GAAG,IAAI,CAAC;SACrB;QAED,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACpB,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAErB,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,iBAAU,IAAC,CAAC,CAAC;QAEjD,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yCAAyC,EAAE,UAAS,MAAM;QACnE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBD,IAAI,WAAW,GAAG,KAAK,CAAC;QACxBA,IAAI,YAAY,GAAG,KAAK,CAAC;QAEzBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,SAAS,KAAK;YACZ,WAAW,GAAG,IAAI,CAAC;SACpB;QAED,SAAS,MAAM;YACb,YAAY,GAAG,IAAI,CAAC;SACrB;QAED,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACpB,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAErB,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAErB,EAAE,CAAC,GAAG,sBAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,iBAAU,IAAC,CAAC,CAAC;QAEjD,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;;IC/LH,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAE3B,SAAS,KAAK,CAAC,EAAE;QACf,OAAO,EAAE,CAAC,aAAa,CAAC,MAAM,IAAI,EAAE,CAAC,eAAe,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,uBAAuB,EAAE,UAAS,MAAM;QACjD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3BD,IAAI,MAAM,GAAG,EAAE,CAAC,IAAI;YAClB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,OAAO,QAAQ,CAAC;SACjB,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sBAAsB,EAAE,UAAS,MAAM;QAChD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,EAAE,CAAC,GAAG;YACJD,IAAI,MAAM,GAAG,EAAE,CAAC,IAAI;gBAClB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3B,OAAO,QAAQ,CAAC;aACjB,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SAChC,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAS,MAAM;QAC7C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,EAAE,CAAC,IAAI;YACL,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,IAAI;gBACL,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,IAAI;oBACL,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC5B,CAAC,CAAC;gBACH,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAS,MAAM;QAC5C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,EAAE,CAAC,IAAI;YACL,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,GAAG;gBACJ,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,IAAI;oBACL,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC5B,CAAC,CAAC;gBACH,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,uBAAuB,EAAE,UAAS,MAAM;QACjD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,KAAK,GAAa,EAAE,CAAC;QAEzB,EAAE,CAAC,GAAG;YACJ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,EAAE,CAAC,QAAQ,CAAC,KAAK,uBAAQ,KAAK,CAAC,IAAI,CAAC,CAAC,IAAC,CAAC,CAAC;YACxC,EAAE,CAAC,IAAI;gBACL,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACd,EAAE,CAAC,QAAQ,CAAC,KAAK,uBAAQ,KAAK,CAAC,IAAI,CAAC,CAAC,IAAC,CAAC,CAAC;gBACxC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACf,CAAC,CAAC;YACH,EAAE,CAAC,QAAQ,CAAC,KAAK,uBAAQ,KAAK,CAAC,IAAI,CAAC,CAAC,IAAC,CAAC,CAAC;YACxC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACf,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,6DAA6D,EAAE,UAAS,MAAM;QACvF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpC,MAAM,CAAC,MAAM;YACX,EAAE,CAAC,IAAI;gBACL,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;aAC/B,CAAC,CAAC;SACJ,EAAE,YAAY,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yGAAyG,EAAE,UAAS,MAAM;QACnI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClC,yBAAO,CAAC,KAAK;gBACX,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,kFAAkF,CAAC,CAAC;aACxG;SACF,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG;YACJ,MAAM,CAAC,MAAM;gBACX,EAAE,CAAC,IAAI;oBACL,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;iBAC/B,CAAC,CAAC;aACJ,EAAE,YAAY,EAAE,sDAAsD,CAAC,CAAC;SAC1E,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,6FAA6F,EAAE,UAAS,MAAM;QACvH,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC3C;QAEDD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClC,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,EAAE,CAAC,IAAI;YACL,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;SAC/B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yFAAyF,EAAE,UAAS,MAAM;QACnH,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC3C;QAEDD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClC,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,IAAI;gBACL,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;aAC/B,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yFAAyF,EAAE,UAAS,MAAM;QACnH,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,MAAM,KAAK,CAAC;SACb;QAEDD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClC,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM;YACX,EAAE,CAAC,IAAI;gBACL,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;aAC/B,CAAC,CAAC;SACJ,EAAE,YAAY,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qFAAqF,EAAE,UAAS,MAAM;QAC/G,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,MAAM,KAAK,CAAC;SACb;QAEDD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClC,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM;YACX,EAAE,CAAC,GAAG;gBACJ,EAAE,CAAC,IAAI;oBACL,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;iBAC/B,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ,EAAE,YAAY,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qCAAqC,EAAE,UAAS,MAAM;QAC/D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,IAAI,CAAC,UAAS,IAAI;YACnB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAC7B,iBAAiB,GAAG,IAAI,CAAC;SAC1B,EAAE,QAAQ,CAAC,CAAC;QAEb,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;;ICtNH;AACA,IAGAD,IAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC;IACjCA,IAAMqB,qBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;IAEnDpB,IAAImB,WAAS,CAAC;IACd,KAAK,CAAC,MAAM,CAAC,wBAAwB,EAAE;QACrC,6BAAS;YACP,IAAI,CAAC,GAAG,GAAG,eAAe,CAAC;YAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,GAAGC,qBAAmB,CAAC;YAC7C,IAAID,WAAS,EAAE;gBACbA,WAAS,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;KACF,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,UAAS,MAAM;QACjC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBnB,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,QAAQ,CAAC;QACbA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;;;QAI1BA,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,cAAa,OAAO,GAAG,CAAC,EAAE,CAAC;QAEpD,EAAE,CAAC,KAAK,CAAC,IAAI;YACX,QAAQ,GAAG,EAAE,CAAC,eAAe,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;SACzB,EAAE,EAAE,CAAC,CAAC;QAEP,EAAE,CAAC,KAAK,CAAC,IAAI;YACX,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;SAC7D,EAAE,EAAE,CAAC,CAAC;QAEP,IAAI,CAAC,SAAS,CAAC,OAAO,GAAGoB,qBAAmB,CAAC;QAM7C,EAAE,CAAC,KAAK,CAAC,IAAI;YACX,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YAExB,EAAE,CAAC,KAAK,CAAC,IAAI;gBACX,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,sCAAsC,CAAC,CAAC;gBACxD,IAAI,EAAE,CAAC;aACR,EAAE,CAAC,CAAC,CAAC;SACP,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yCAAyC,EAAE,UAAS,MAAM;QACnE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBpB,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,gBAAgB,GAAG,KAAK,CAAC;QAE7B,IAAI,CAAC,GAAG,GAAG;YACT,gBAAgB,GAAG,IAAI,CAAC;YACxB,OAAO,eAAe,EAAE,CAAC;SAC1B,CAAC;QAEF,EAAE,CAAC,KAAK;YACN,MAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;YAC5B,IAAI,EAAE,CAAC;SACR,EAAE,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,mDAAmD,EAAE,UAAS,MAAM;QAC7E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,KAAK,GAAG,eAAe,EAAE,CAAC;QAC9BA,IAAI,GAAG,GAAG,KAAK,CAAC;QAEhB,IAAI,CAAC,GAAG,wBAAS,MAAG,CAAC;QAErBA,IAAI,SAAS,GAAG,CAAC,CAAC;QAClBA,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,EAAE,CAAC,KAAK,sBAAO,SAAS,GAAG,eAAe,KAAE,EAAE,IAAI,CAAC,CAAC;QAEpD,GAAG,IAAI,IAAI,CAAC;QAEZ,EAAE,CAAC,KAAK,sBAAO,SAAS,GAAG,eAAe,KAAE,EAAE,EAAE,CAAC,CAAC;QAElD,GAAG,IAAI,EAAE,CAAC;QAEV,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,SAAS,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,CAAC,SAAS,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;YACnD,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEHA,IAAI,EAAE,CAAC;IACP,KAAK,CAAC,MAAM,CAAC,yBAAyB,EAAE;QACtC,+BAAU;YACR,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;SAC9B;QACD,6BAAS;YACP,EAAE,GAAG,SAAS,CAAC;YACf,IAAIkB,WAAS,EAAE;gBACbA,WAAS,CAAC,SAAS,EAAE,CAAC;aACvB;SACF;KACF,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,UAAS,MAAM;QACtC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBnB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,EAAE,CAAC,KAAK,CAAC;YACP,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,uBAAuB,EAAE,UAAS,MAAM;QACjD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,EAAE,CAAC,KAAK,CAAC;YACP,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;SACR,EAAE,SAAS,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,6BAA6B,EAAE,UAAS,MAAM;QACvD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE;YACb,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,6BAA6B,EAAE,UAAS,MAAM;QACvD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE;YACb,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;SACR,EAAE,SAAS,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wBAAwB,EAAE,UAAS,MAAM;QAClD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE;YACb,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACjC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;SACR,EAAE,IAAI,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,oCAAoC,EAAE,UAAS,MAAM;QAC9D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,EAAE,CAAC,KAAK,CAAC;YACP,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;SACR,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0CAA0C,EAAE,UAAS,MAAM;QACpE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE;YACb,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;SACR,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,kDAAkD,EAAE,UAAS,MAAM;QAC5E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1B,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE;YACb,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;SACR,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yDAAyD,EAAE,UAAS,MAAM;QACnF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1B,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE;YACb,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAChC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC9B,IAAI,EAAE,CAAC;SACR,EAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,eAAe,EAAE,UAAS,MAAM;QACzC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1B,EAAE,CAAC,KAAK,CAAC;YACP,iBAAG;gBACD,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;gBAC9B,IAAI,EAAE,CAAC;aACR;SACF,EAAE,KAAK,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sBAAsB,EAAE,UAAS,MAAM;QAChD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1B,EAAE,CAAC,KAAK,CAAC;YACP,iBAAG;gBACD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;gBACpC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;gBAC9B,IAAI,EAAE,CAAC;aACR;SACF,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,8BAA8B,EAAE,UAAS,MAAM;QACxDA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1B,EAAE,CAAC,KAAK,CAAC;YACP,iBAAG;gBACD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;gBACpC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;gBAC9B,IAAI,EAAE,CAAC;aACR;SACF,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qCAAqC,EAAE,UAAS,MAAM;QAC/DA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1B,EAAE,CAAC,KAAK,CAAC;YACP,iBAAG;gBACD,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;gBACpC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;gBAC9B,IAAI,EAAE,CAAC;aACR;SACF,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,MAAM;QACnC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,EAAE,CAAC;SACR;QAED,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,WAAE,OAAO,EAAE,CAAC,CAAC;QAE7C,EAAE,CAAC,KAAK,eAAS,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iDAAiD,EAAE,UAAS,MAAM;QAC3E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,EAAE,GAAG,IAAIA,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7BD,IAAI,OAAO,GAAG,CAAC,CAAC;QAChBA,IAAI,OAAO,GAAG,CAAC,CAAC;QAChBA,IAAI,UAAU,GAAG,CAAC,CAAC;QACnBA,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjBA,IAAI,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC;QACxBA,IAAI,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC;QACpBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,EAAE,CAAC,KAAK,GAAG;YACT,UAAU,EAAE,CAAC;YACb,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACnB,CAAC;QAEF,EAAE,CAAC,GAAG,GAAG;YACP,QAAQ,EAAE,CAAC;YACX,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACjB,CAAC;QAEF,EAAE,CAAC,KAAK,sBAAO,OAAO,KAAE,EAAE,EAAE,CAAC,CAAC;QAC9B,EAAE,CAAC,KAAK,sBAAO,OAAO,KAAE,EAAE,EAAE,CAAC,CAAC;QAE9B,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,0BAA0B,CAAC,CAAC;YACxD,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,wBAAwB,CAAC,CAAC;YACpD,IAAI,EAAE,CAAC;SACR,EAAE,GAAG,CAAC,CAAC;IACV,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qCAAqC,EAAE,UAAS,MAAM;QAC/D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,KAAK,GAAG,CAAC,CAAC;QACdA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAChC,yBAAO;gBACL,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;aAC1B;SACF,CAAC,CAAC;QACHD,IAAI,GAAG,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAChC,yBAAO;gBACL,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;aAC1B;SACF,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAEzB,GAAG,CAAC,KAAK,sBAAO,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,IAAC,EAAE,EAAE,CAAC,CAAC;QAE9C,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAEzB,GAAG,CAAC,KAAK,sBAAO,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,IAAC,EAAE,EAAE,CAAC,CAAC;QAE9C,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAEzB,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YACzB,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0DAA0D,EAAE,UAAS,MAAM;QACpF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,GAAG,CAAC,CAAC;QAClBA,IAAI,SAAS,GAAG,CAAC,CAAC;QAClBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,EAAE,CAAC,KAAK,sBAAO,SAAS,GAAG,IAAI,CAAC,GAAG,KAAE,EAAE,CAAC,CAAC,CAAC;QAM1C,EAAE,CAAC,KAAK,sBAAO,SAAS,GAAG,IAAI,CAAC,GAAG,KAAE,EAAE,EAAE,CAAC,CAAC;QAE3C,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,SAAS,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,CAAC,SAAS,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,CAAC,SAAS,GAAG,SAAS,GAAG,EAAE,EAAE,sCAAsC,CAAC,CAAC;YAC9E,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0CAA0C,EAAE,UAAS,MAAM;QACpE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,SAAS,GAAG,CAAC,CAAC;QAClBA,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,EAAE,CAAC,KAAK,sBAAO,SAAS,GAAG,IAAI,CAAC,GAAG,KAAE,EAAE,CAAC,CAAC,CAAC;QAC1C,EAAE,CAAC,KAAK,gBAAS,EAAE,GAAG,CAAC,CAAC;QACxB,EAAE,CAAC,KAAK,sBAAO,SAAS,GAAG,IAAI,CAAC,GAAG,KAAE,EAAE,EAAE,CAAC,CAAC;QAE3C,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,SAAS,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,CAAC,SAAS,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;YACnD,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qCAAqC,EAAE,UAAS,MAAM;QAC/D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,KAAK,CAAC,UAAS,IAAI;YACpB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAC7B,IAAI,EAAE,CAAC;SACR,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,4CAA4C,EAAE,UAAS,MAAM;QACtE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjCkB,WAAS,GAAGH,QAAK,CAAC,OAAO,EAAE,CAAC;QAE5BhB,IAAI,SAAS,GAAG,eAAe,EAAE,CAAC;QAClC,EAAE,CAAC,KAAK,CAAC,UAAS,IAAI;YACpBA,IAAI,OAAO,GAAG,eAAe,EAAE,CAAC;YAChC,MAAM,CAAC,EAAE,CAAC,OAAO,GAAG,SAAS,GAAG,GAAG,EAAE,kCAAkC,CAAC,CAAC;YACzE,IAAI,EAAE,CAAC;SACR,EAAE,IAAI,CAAC,CAAC;QAETmB,WAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,8BAA8B,EAAE,UAAS,MAAM;QACxD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBnB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,IAAI,GAAG,eAAa,CAAC;QAEzB,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACxB,UAAU,CAAC;gBACT,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACzB,EAAE,EAAE,CAAC,CAAC;YAEPA,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAExB,EAAE,CAAC,KAAK,CAAC;gBACPA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC;gBAC/B,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,mCAAmC,CAAC,CAAC;gBAC5D,IAAI,EAAE,CAAC;aACR,EAAE,IAAI,CAAC,CAAC;SACV,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC;IAEJ,KAAK,CAAC,IAAI,CAAC,gEAAgE,EAAE,UAAS,MAAM;QAC1FA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAE3BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjCD,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,eAAa,EAAE,GAAG,CAAC,CAAC;QACzC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEjBA,IAAI,qBAAqB,GAAG,EAAE,CAAC,wBAAwB,CAAC,CAAC;QACzD,EAAE,CAAC,wBAAwB,CAAC,GAAG;YAC7B,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC;YACP,OAAO,qBAAqB,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;SACnD,CAAC;QAEF,EAAE,CAAC,KAAK,CAAC,eAAa,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;;ICrdH,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAEjCD,IACAC,IAAI,QAAQ,CAAC;IACb,SAAS,iBAAiB,CAAC,KAAK;QAC9B,QAAQ,GAAGkB,wBAAa,CAAC,KAAK,CAAC,CAAC;QAChC,QAAQ,CAAC,SAAS,GAAG;YACnB,KAAK,EAAE,CAAC;SACT,CAAC;QACF,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,UAAS,MAAM;QACjClB,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,EAAE;;;YAGhC,6BAAS;gBACP,OAAO,IAAI,CAAC;aACb;YACD,cAAc,EAAE,iBAAiB;SAClC,CAAC,CAAC;QAEHD,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QACfA,IAAI,KAAK,GAAG;YACV,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;YAC9B,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;YAC9B,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;SAC/B,CAAC;QAEF,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YAClB,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,KAAK,CAAC;SAC3B,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YAClB,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,KAAK,CAAC;SAC3B,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI;YACtB,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACpB,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,KAAK,CAAC;SAC7B,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;YAC9B,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;YAC9B,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;SAC/B,EAAE,oDAAoD,CAAC,CAAC;QAEzD,QAAQ,CAAC,SAAS,EAAE,CAAC;QAErB,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE;YAC9B,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;YAC9B,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;SAC/B,EAAE,kDAAkD,CAAC,CAAC;QAEvD,QAAQ,CAAC,SAAS,EAAE,CAAC;QAErB,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE;YAC9B,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE;YAC9B,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE;SAC/B,EAAE,8DAA8D,CAAC,CAAC;QAEnE,QAAQ,CAAC,SAAS,EAAE,CAAC;QAErB,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE;YACtB,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE;YAC9B,GAAG,EAAI,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE;YAC9B,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAG,CAAC,EAAE;SAC/B,EAAE,yEAAyE,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,oDAAoD,EAAE,UAAS,MAAM;QAC9EA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,EAAE;;;YAGhC,6BAAS;gBACP,OAAO,IAAI,CAAC;aACb;YAED,cAAc,EAAE,iBAAiB;SAClC,CAAC,CAAC;QAEHD,IAAI,SAAS,GAAG,CAAC,CAAC;QAClBA,IAAI,SAAS,GAAG,CAAC,CAAC;QAElBA,IAAI,IAAI,GAAG;YACT,iBAAG;gBACD,SAAS,EAAE,CAAC;aACb;SACF,CAAC;QAEFA,IAAI,IAAI,GAAG;YACT,iBAAG;gBACD,SAAS,EAAE,CAAC;aACb;SACF,CAAC;QAEF,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACrC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACrC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACrC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAErC,QAAQ,CAAC,SAAS,EAAE,CAAC;QAErBA,IAAI,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAClDA,IAAI,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAClD,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAClB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAElB,QAAQ,CAAC,SAAS,EAAE,CAAC;QACrB,QAAQ,CAAC,SAAS,EAAE,CAAC;QACrB,QAAQ,CAAC,SAAS,EAAE,CAAC;QAErB,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;IAE1C,CAAC,CAAC,CAAC;;ICnHH,KAAK,CAAC,MAAM,CAAC,wBAAwB,EAAE;QACrC,UAAU,EAAE;;YAEV,aAAa,CAAC,eAAe,CAAC,CAAC;SAChC;QAED,SAAS,EAAE;YACT,UAAU,EAAE,CAAC;SACd;KACF,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iEAAiE,EAAE,UAAS,MAAM;QAC3F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,SAAS,CAAC;QACdA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,GAAG,CAAC;YACL,SAAS,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAExF,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,EAAE,2CAA2C,CAAC,CAAC;SACjF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iEAAiE,EAAE,UAAS,MAAM;QAC3F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,CAAC;QACdA,IAAI,MAAM,GAAG;YACX,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;SACjB,CAAC;QACFA,IAAI,KAAK,GAAG,cAAc,CAAC,cAAc,CAAC,CAAC;QAC3CA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,GAAG,CAAC;YACL,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAE3B,SAAS,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAExF,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;oBAC3B,MAAM,EAAE,IAAI;4BACZ,MAAM;oBACN,IAAI,EAAE,SAAS;2BACf,KAAK;iBACN,CAAC,CAAC,CAAC;SACL,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,8DAA8D,EAAE,UAAS,MAAM;QACxF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,CAAC;QACdA,IAAI,MAAM,GAAG,EAAE,CAAC;QAChBA,IAAI,MAAM,GAAG;YACX,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;SACjB,CAAC;QACFA,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,KAAK,GAAG,cAAc,CAAC,cAAc,CAAC,CAAC;QAC3CA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,GAAG,CAAC;YACL,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAE/C,SAAS,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAExF,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;4BAC3B,MAAM;4BACN,MAAM;oBACN,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;2BAClB,KAAK;iBACN,CAAC,CAAC,CAAC;SACL,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,+DAA+D,EAAE,UAAS,MAAM;QACzF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,SAAS,CAAC;QACdA,IAAI,MAAM,GAAG;YACX,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;SACjB,CAAC;QACFA,IAAI,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;QACtCA,IAAI,GAAG,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;QAChCA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjC,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;QAEhB,EAAE,CAAC,GAAG,CAAC;YACL,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAE3B,SAAS,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAExF,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;gBAC1B;oBACE,MAAM,EAAE,IAAI;4BACZ,MAAM;oBACN,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,GAAG;iBACX;gBACD;oBACE,MAAM,EAAE,IAAI;4BACZ,MAAM;oBACN,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,MAAM;iBACd;aACF,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;;ICtHHD,IAAI,KAAK,GAAIC,mBAAkB,CAAC,KAAK,CAAC;IAEtC,KAAK,CAAC,MAAM,CAAC,yBAAyB,CAAC,CAAC;IACxCD,IAAIqB,OAAK,GAAG,EAAE,CAAC,KAAK,CAAC;IAErB,KAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,UAAS,MAAM;QAC3DrB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7BA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,iBAAG;gBACD,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEFrB,IAAI,OAAO,GAAG;YACZ,iBAAG;gBACD,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,2CAA2C,EAAE,UAAS,MAAM;QACrErB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7BA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;YACD,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACA,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wDAAwD,EAAE,UAAS,MAAM;QAClFrB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7BA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,UAAS,MAAM;QAC3DrB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACjCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEFrB,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,2CAA2C,EAAE,UAAS,MAAM;QACrErB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACjCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;YACD,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACA,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yDAAyD,EAAE,UAAS,MAAM;QACnFrB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACjCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,oEAAoE,EAAE,UAAS,MAAM;QAC9FrB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACjCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;aACJ;YACD,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACvC,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;IACnG,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,UAAS,MAAM;QAC3DrB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAEjCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEFrB,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QACF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,2CAA2C,EAAE,UAAS,MAAM;QACrErB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACjCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;YACD,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACA,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wDAAwD,EAAE,UAAS,MAAM;QAClFrB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACjCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;QACjG,MAAM,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,oEAAoE,EAAE,UAAS,MAAM;QAC9FrB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAEjCA,IAAI,mBAAmB,GAAe,EAAE,CAAC;QACzCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;aACJ;YACD,GAAG,EAAE;gBACH,mBAAmB,CAAC,IAAI,CAACqB,OAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACjD;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACvC,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9C,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAE1C,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,+CAA+C,CAAC,CAAC;IAC/F,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,UAAS,MAAM;QAC/CrB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAEjCA,IAAI,mBAAmB,GAAW,CAAC,CAAC;QACpCA,IAAI,mBAAmB,GAAW,CAAC,CAAC;QACpCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,EAAE,CAAC;aACvB;SACF,CAAC;QAEFA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,mBAAmB,EAAE,CAAC;aACvB;SACF,CAAC;QAEFA,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACpDA,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QAEpD,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACrB,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAErB,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACvC,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACvC,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACvC,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QAEvC,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,8DAA8D,EAAE,UAAS,MAAM;QACxFA,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7BA,IAAI,cAAc,GAAe,EAAE,CAAC;QACpCA,IAAI,OAAO,GAAG;YACZ,GAAG,EAAE;gBACH,cAAc,CAAC,UAAI,iBAAI,SAAS,CAAC,CAAC;aACnC;SACF,CAAC;QAEF,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9CA,IAAI,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE1D,MAAM,CAAC,SAAS,CAAC,cAAc,EAAE,EAAE,EAAE,2BAA2B,CAAC,CAAC;QAElE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEpB,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,MAAM,CAAC,SAAS,CAAC,cAAc,EAAE,EAAE,EAAE,4BAA4B,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;;IC9UH,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAE5B,KAAK,CAAC,IAAI,CAAC,gEAAgE,EAAE,UAAS,MAAM;QAC1F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QACxCD,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,EAAE,CAAC,GAAG,CAAC;YACL,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YAE7B,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE;gBACvB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBAE7B,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE;oBACvB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;iBAC9B,CAAC,CAAC;aACJ,CAAC,CAAC;YAEH,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE;gBACvB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;aAC9B,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wDAAwD,EAAE,UAAS,MAAM;QAClF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,EAAE,CAAC,GAAG,CAAC;YACL,SAAS,SAAS;gBAChB,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE;oBACf,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;iBAC/B;gBAED,IAAI,KAAK,KAAK,CAAC,EAAE;oBAEf,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;iBAC/B;aACF;YAED,SAAS,EAAE,CAAC;YACZ,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,yBAAyB,CAAC,CAAC;YAElDA,IAAI,eAAe,GAAG,EAAE,CAAC,eAAe,CAAC;YACzC,IAAI,eAAe,EAAE;gBACnB,eAAe,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;aACpC;YACD,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,qEAAqE,CAAC,CAAC;SAC/F,CAAC,CAAC;IAEL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,uEAAuE,EAAE,UAAS,MAAM;QACjGA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0CAA0C,EAAE,UAAS,MAAM;QACpED,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;YACtC,YAAY,EAAE,KAAK;SACpB,CAAC,CAAC;QAEH,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gEAAgE,EAAE,UAAS,MAAM;QAC1F,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,OAAO,GAA+B,EAAE,CAAC;QAC7CA,IAAI,MAAM,GAA+B,EAAE,CAAC;QAC5CA,IAAI,eAAe,GAA+B,EAAE,CAAC;QACrDA,IAAI,cAAc,GAA+B,EAAE,CAAC;QACpDA,IAAI,KAAU,CAAC;QACfA,IAAI,KAAU,CAAC;QAEfA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,EAAE;YAC/B,OAAO,EAAE,UAAS,OAAO,EAAE,QAAQ;gBACjC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACxB;YACD,KAAK,EAAE,UAAS,OAAO,EAAE,IAAI;gBAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnB;SACF,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG,CAAC;YACL,KAAK,GAAG,EAAE,CAAC,eAAe,CAAC;YAC3B,EAAE,CAAC,GAAG,CAAC;gBACL,KAAK,GAAG,EAAE,CAAC,eAAe,CAAC;aAC5B,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,eAAe,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC9C,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAE7C,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,eAAe,EAAE,6BAA6B,CAAC,CAAC;QAC1E,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,EAAE,2BAA2B,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;;ICvGH,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAE1B,KAAK,CAAC,IAAI,CAAC,wBAAwB,EAAE,UAAS,MAAM;QAClD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG,sBAAO,iBAAiB,GAAG,OAAI,CAAC,CAAC;QAEvC,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,iCAAiC,EAAE,UAAS,MAAM;QAC3D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE;YACnB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,6BAA6B,CAAC,CAAC;YAC7D,iBAAiB,GAAG,IAAI,CAAC;SAC1B,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,6CAA6C,EAAE,UAAS,MAAM;QACvE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,6BAA6B,CAAC,CAAC;YAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,mCAAmC,CAAC,CAAC;YACxD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,oCAAoC,CAAC,CAAC;YACzD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,mCAAmC,CAAC,CAAC;YACxD,iBAAiB,GAAG,IAAI,CAAC;SAC1B,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEZ,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,uCAAuC,EAAE,UAAS,MAAM;QACjE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAElBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,4BAA4B,GAAG,KAAK,CAAC;QACzCA,IAAI,6BAA6B,GAAG,KAAK,CAAC;QAC1CA,IAAI,sBAAsB,GAAG,KAAK,CAAC;QACnCA,IAAI,4BAA4B,GAAG,KAAK,CAAC;QACzCA,IAAI,2BAA2B,GAAG,KAAK,CAAC;QAExC,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,KAAK;gBACf,4BAA4B,GAAG,IAAI,CAAC;aACrC,CAAC,CAAC;YAEH,EAAE,CAAC,GAAG;gBACJ,EAAE,CAAC,QAAQ,CAAC,KAAK;oBACf,6BAA6B,GAAG,IAAI,CAAC;iBACtC,CAAC,CAAC;gBAEH,EAAE,CAAC,GAAG;oBACJ,EAAE,CAAC,QAAQ,CAAC,KAAK;wBACf,sBAAsB,GAAG,IAAI,CAAC;qBAC/B,CAAC,CAAC;oBACH,MAAM,CAAC,EAAE,CAAC,CAAC,sBAAsB,EAAE,sBAAsB,CAAC,CAAC;iBAC5D,CAAC,CAAC;gBACH,MAAM,CAAC,EAAE,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CAAC;gBAExD,EAAE,CAAC,QAAQ,CAAC,KAAK;oBACf,4BAA4B,GAAG,IAAI,CAAC;iBACrC,CAAC,CAAC;gBAEH,MAAM,CAAC,EAAE,CAAC,CAAC,6BAA6B,EAAE,sBAAsB,CAAC,CAAC;gBAClE,MAAM,CAAC,EAAE,CAAC,CAAC,4BAA4B,EAAE,sBAAsB,CAAC,CAAC;aAClE,CAAC,CAAC;YAEH,MAAM,CAAC,EAAE,CAAC,6BAA6B,EAAE,oBAAoB,CAAC,CAAC;YAC/D,MAAM,CAAC,EAAE,CAAC,4BAA4B,EAAE,oBAAoB,CAAC,CAAC;YAE9D,EAAE,CAAC,QAAQ,CAAC,KAAK;gBACf,2BAA2B,GAAG,IAAI,CAAC;aACpC,CAAC,CAAC;YAEH,MAAM,CAAC,EAAE,CAAC,CAAC,4BAA4B,EAAE,sBAAsB,CAAC,CAAC;YACjE,MAAM,CAAC,EAAE,CAAC,CAAC,2BAA2B,EAAE,sBAAsB,CAAC,CAAC;SACjE,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,4BAA4B,EAAE,oBAAoB,CAAC,CAAC;QAC9D,MAAM,CAAC,EAAE,CAAC,2BAA2B,EAAE,oBAAoB,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,oBAAoB,EAAE,UAAS,MAAM;QAC9C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,EAAE,CAAC,GAAG;YACJ,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YAExB,EAAE,CAAC,GAAG;gBACJ,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;aACzB,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAS,MAAM;QAC7CA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,KAAK,GAAG,EAAE,CAAC,GAAG,sBAAO,OAAI,CAAC,CAAC;QAE/B,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,MAAM;QACnC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SACjD;QAEDA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClC,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG;YACJ,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;SACrC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yBAAyB,EAAE,UAAS,MAAM;QACnD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpC,EAAE,CAAC,GAAG,sBAAO,MAAM,CAAC,EAAE,CAAC,IAAI,IAAC,CAAC,CAAC;QAE9B,EAAE,CAAC,OAAO,CAAC,OAAO,GAAG,UAAS,KAAK;YACjC,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SACjD,CAAC;QAEF,EAAE,CAAC,GAAG,eAAS,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gCAAgC,EAAE,UAAS,MAAM;QAC1D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClC,aAAa,EAAE,MAAM;YACrB,aAAa,EAAE,SAAS;SACzB,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG,sBAAO,MAAM,CAAC,EAAE,CAAC,IAAI,IAAC,CAAC,CAAC;QAE9B,MAAM,CAAC,SAAS,CAAC,GAAG,UAAS,KAAK;YAChC,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SACjD,CAAC;QAEF,EAAE,CAAC,GAAG,eAAS,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,SAAS,CAAC,GAAG,eAAc,CAAC;QAEnC,EAAE,CAAC,GAAG,eAAS,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,SAAS,CAAC,GAAG,UAAS,KAAK;YAChC,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SACjD,CAAC;QAEF,EAAE,CAAC,GAAG,eAAS,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qCAAqC,EAAE,UAAS,MAAM;QAC/D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG,CAAC,UAAS,IAAI;YAClB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAC7B,iBAAiB,GAAG,IAAI,CAAC;SAC1B,EAAE,QAAQ,CAAC,CAAC;QAEb,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;;IC5LH,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;IAE/B,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,UAAS,MAAM;QACpC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAElBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClCD,IAAI,IAAI,GAAG,CAAC,CAAC;QACbA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,SAAS,GAAG,IAAI,CAAC;SAClB;;;QAID,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;;QAGxB,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;SACrC,EAAE,EAAE,CAAC,CAAC;;QAGP,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;SACrC,EAAE,EAAE,CAAC,CAAC;;QAGP,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;YACtB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;SACrC,EAAE,EAAE,CAAC,CAAC;;;;QAMP,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;SACtB,EAAE,EAAE,CAAC,CAAC;;;;;QAMP,UAAU;YACR,SAAS,GAAG,KAAK,CAAC;;YAGlB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;;YAGxB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;;YAGzC,UAAU;gBACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,oEAAoE,CAAC,CAAC;aAC5F,EAAE,GAAG,CAAC,CAAC;SACT,EAAE,EAAE,CAAC,CAAC;QAEP,UAAU;YACR,SAAS,GAAG,KAAK,CAAC;;YAGlB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;;YAGxB,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;;YAG3C,UAAU;gBACR,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,oDAAoD,CAAC,CAAC;gBAC3E,IAAI,EAAE,CAAC;aACR,EAAE,GAAG,CAAC,CAAC;SACT,EAAE,GAAG,CAAC,CAAC;IACV,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,4BAA4B,EAAE,UAAS,MAAM;QACtD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,KAAK,GAAG,CAAC,CAAC;QACdA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;;QAGlC,EAAE,CAAC,QAAQ,CAAC,IAAI,iBAAuB,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAEpD,IAAI;YACF,EAAE,CAAC,YAAY,EAAE,CAAC;SACnB;QAAC,OAAO,CAAC,EAAE;YACV,KAAK,EAAE,CAAC;SACT;QAED,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,iFAAiF,CAAC,CAAC;IAC5G,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,kDAAkD,EAAE,UAAS,MAAM;QAC5E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACjBD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAG1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAElC,SAAS,SAAS,CAAC,GAAG;YACpB,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YACzB,IAAI,EAAE,CAAC;SACR;QAED,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAG,EAAE,EAAE,KAAK,CAAC,CAAC;QAChD,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAG,EAAE,EAAE,KAAK,CAAC,CAAC;QACpD,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAG,EAAE,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,6BAA6B,EAAE,UAAS,MAAM;QACvD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAEnC,SAAS,UAAU,MAAK;QACxB,SAAS,UAAU,MAAK;QAExBD,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;QAC/CA,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;QAC/CA,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;QAC/CA,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;QAE/C,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC7B,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,uBAAuB,EAAE,UAAS,MAAM;QACjD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAElBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAClCD,IAAI,QAAQ,CAAC;QACbA,IAAI,SAAS,CAAC;QACdA,IAAI,SAAS,GAAG,KAAK,CAAC;QACtBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,mCAAmC,CAAC,CAAC;YAC3D,SAAS,GAAG,IAAI,CAAC;SAClB;;;QAID,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;QAE5C,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,mCAAmC,CAAC,CAAC;QAE1D,SAAS,GAAG,KAAK,CAAC;;QAElB,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;QAE7C,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,oDAAoD,CAAC,CAAC;QAExF,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,+CAA+C,CAAC,CAAC;YAEvE,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;YAC5C,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,kDAAkD,CAAC,CAAC;YAEzE,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,qCAAqC,CAAC,CAAC;YAEtE,SAAS,GAAG,KAAK,CAAC;YAClB,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;YAC7C,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,EAAE,2BAA2B,CAAC,CAAC;YAClE,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,wDAAwD,CAAC,CAAC;YAC/E,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0DAA0D,EAAE,UAAS,MAAM;QACpF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,kCAAkC,CAAC,CAAC;YACrD,SAAS,GAAG,IAAI,CAAC;SAClB;QAEDA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAEnD,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,wBAAwB,CAAC,CAAC;;QAGtD,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,wCAAwC,CAAC,CAAC;QAEvE,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,wCAAwC,CAAC,CAAC;YAChE,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qDAAqD,EAAE,UAAS,MAAM;QAC/E,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACxCD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1BA,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,iCAAiC,CAAC,CAAC;YACnD,SAAS,GAAG,IAAI,CAAC;SAClB;QAEDA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAE5C,UAAU;YACR,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,4BAA4B,CAAC,CAAC;YAC3D,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,+BAA+B,CAAC,CAAC;YACtD,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,gFAAgF,EAAE,UAAS,MAAM;QAC1G,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACnCD,IAAI,SAAS,GAAG,KAAK,CAAC;QACtBA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAE1B,SAAS,SAAS;YAChB,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,iCAAiC,CAAC,CAAC;YACnD,SAAS,GAAG,IAAI,CAAC;SAClB;QAEDA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAC5CA,IAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAE7C,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,6BAA6B,CAAC,CAAC;QAE/D,UAAU;YACR,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,wEAAwE,CAAC,CAAC;YACvG,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,+BAA+B,CAAC,CAAC;YACtD,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IAET,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,yCAAyC,EAAE,UAAS,MAAM;QACnEA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,WAAW,GAAG,CAAC,CAAC;QACpBA,IAAI,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,SAAS,SAAS;;;;YAChB,WAAW,EAAE,CAAC;YACd,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;QAED,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAC3B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAC3B,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,wCAAwC,CAAC,CAAC;QACvE,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAE,EAAE,CAAE,EAAE,uDAAuD,CAAC,CAAC;QAE9F,UAAU;YACR,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YAC3B,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,6DAA6D,CAAC,CAAC;SAC7F,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,0CAA0C,CAAC,CAAC;YACzE,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,2DAA2D,EAAE,UAAS,MAAM;QACrFA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpCD,IAAI,cAAc,GAAG,CAAC,CAAC;QACvBA,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,SAAS,GAAG;YACV,cAAc,EAAE,CAAC;SAClB;QACD,SAAS,GAAG;YACV,cAAc,EAAE,CAAC;SAClB;QAED,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACrB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,2CAA2C,CAAC,CAAC;QAE7E,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACrBA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,2CAA2C,CAAC,CAAC;QAE7E,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjB,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACrB,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,0DAA0D,CAAC,CAAC;IAC9F,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wDAAwD,EAAE,UAAS,MAAM;QAClFA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,WAAW,GAAG,CAAC,CAAC;QACpBA,IAAI,UAAU,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,SAAS,SAAS;;;;YAChB,WAAW,EAAE,CAAC;YACd,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvB;QAED,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAClC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAClC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,4CAA4C,CAAC,CAAC;QAE3E,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,6CAA6C,CAAC,CAAC;YAC5E,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;SACnC,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,0CAA0C,CAAC,CAAC;YACzE,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAE,EAAE,CAAE,EAAE,uDAAuD,CAAC,CAAC;YAC9F,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,0EAA0E,EAAE,UAAS,MAAM;QACpGA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpCD,IAAI,cAAc,GAAG,CAAC,CAAC;QACvBA,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,SAAS,GAAG;YACV,cAAc,EAAE,CAAC;SAClB;QACD,SAAS,GAAG;YACV,cAAc,EAAE,CAAC;SAClB;QAED,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAC5B,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,gCAAgC,CAAC,CAAC;QAElE,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QAC5BA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,gCAAgC,CAAC,CAAC;QAElE,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,2CAA2C,CAAC,CAAC;YAC7E,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,2CAA2C,CAAC,CAAC;YAE7E,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAClB,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;YAC3C,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;YAE7D,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;YAE5B,UAAU;gBACR,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,0CAA0C,CAAC,CAAC;gBAC5E,IAAI,EAAE,CAAC;aACR,EAAE,EAAE,CAAC,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,sCAAsC,EAAE,UAAS,MAAM;QAChEA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,UAAU,GAAa,EAAE,CAAC;QAC9B,SAAS,SAAS,CAAC,KAAK;YACtB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAEDA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAEhC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,6DAA6D,CAAC,CAAC;IACjH,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wDAAwD,EAAE,UAAS,MAAM;QAClFA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEpCD,IAAI,UAAU,GAAa,EAAE,CAAC;QAC9B,SAAS,SAAS,CAAC,KAAK;YAEtB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAEDA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChCA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAE5C,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,6DAA6D,CAAC,CAAC;QAE/G,UAAU;YACR,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACjB,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,8DAA8D,CAAC,CAAC;SAClI,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,sCAAsC,CAAC,CAAC;YACzG,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qDAAqD,EAAE,UAAS,MAAM;QAC/EA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,UAAU,GAAa,EAAE,CAAC;QAC9B,SAAS,SAAS,CAAC,KAAK;YACtB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAEDA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACvC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACvC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACvC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,EAAE,sCAAsC,CAAC,CAAC;QAEzE,UAAU;YACR,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,6DAA6D,CAAC,CAAC;YAC/G,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,uEAAuE,EAAE,UAAS,MAAM;QACjGA,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAC1BA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpCD,IAAI,WAAW,GAAG,CAAC,CAAC;QACpBA,IAAI,UAAU,GAAa,EAAE,CAAC;QAC9B,SAAS,SAAS,CAAC,KAAK;YACtB,WAAW,EAAE,CAAC;YACd,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;QAEDA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1BA,IAAI,GAAG,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1B,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACvC,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACvCA,IAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACnD,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,4CAA4C,CAAC,CAAC;QAE3E,UAAU;YACR,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,EAAE,kDAAkD,CAAC,CAAC;YACrF,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAClB,EAAE,CAAC,CAAC,CAAC;QAEN,UAAU;YACR,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,EAAE,6CAA6C,CAAC,CAAC;YAChF,IAAI,EAAE,CAAC;SACR,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,MAAM;QACnC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC3C;QAEDA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClC,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,EAAE,CAAC,QAAQ,CAAC,IAAI;YACd,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;SAC/B,EAAE,EAAE,CAAC,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,wDAAwD,EAAE,UAAS,MAAM;QAClF,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjB,SAAS,OAAO,CAAC,KAAK;YACpB,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC3C;QAEDD,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClC,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QAEH,EAAE,CAAC,GAAG;YACJD,IAAI,cAAc,GAAG,EAAE,CAAC,eAAe,CAAC;YACxC,EAAE,CAAC,QAAQ,CAAC,IAAI;gBACf,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC;aACjD,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;SACd,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,IAAI,CAAC,qCAAqC,EAAE,UAAS,MAAM;QAC/D,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAEjBA,IAAI,EAAE,GAAG,IAAIC,mBAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjCD,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAE9B,EAAE,CAAC,GAAG;YACJ,EAAE,CAAC,QAAQ,CAAC,UAAS,IAAI;gBACvB,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAC7B,iBAAiB,GAAG,IAAI,CAAC;aAC1B,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;SACnB,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;;;;"}