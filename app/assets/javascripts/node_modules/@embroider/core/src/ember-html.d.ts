import { JSDOM } from 'jsdom';
import type { EmberAsset } from './asset';
export interface EmberHTML {
    javascript: Node;
    styles: Node;
    implicitScripts: Node;
    implicitStyles: Node;
    testJavascript?: Node;
    implicitTestScripts?: Node;
    implicitTestStyles?: Node;
}
declare class Placeholder {
    readonly start: Node;
    readonly end: Node;
    readonly reference: Node;
    static replacing(node: Node): Placeholder;
    static immediatelyAfter(node: Node): Placeholder;
    readonly parent: HTMLElement;
    constructor(start: Node, end: Node, reference: Node);
    clear(): void;
    insert(node: Node): void;
}
export declare class PreparedEmberHTML {
    private asset;
    dom: JSDOM;
    javascript: Placeholder;
    styles: Placeholder;
    implicitScripts: Placeholder;
    implicitStyles: Placeholder;
    testJavascript: Placeholder;
    implicitTestScripts: Placeholder;
    implicitTestStyles: Placeholder;
    constructor(asset: EmberAsset);
    private placeholders;
    clear(): void;
    insertScriptTag(placeholder: Placeholder, relativeSrc: string, { type, tag }?: {
        type?: string;
        tag?: string;
    }): void;
    insertStyleLink(placeholder: Placeholder, relativeHref: string): void;
}
export declare function insertNewline(at: Node): void;
export {};
