export declare function makeTag(document: Document, options: {
    from: HTMLElement;
    tag?: string;
    attributes?: {
        [name: string]: string | null;
    };
}): HTMLElement;
export declare function makeTag(document: Document, options: {
    from?: HTMLElement;
    tag: string;
    attributes?: {
        [name: string]: string | null;
    };
}): HTMLElement;
export declare function normalizeScriptTag(tag: HTMLElement): void;
export declare function normalizeStyleLink(tag: HTMLElement): void;
export default class Placeholder {
    private target;
    end: InDOMNode;
    start: StartNode;
    constructor(target: HTMLElement);
    reset(): void;
    clear(): void;
    insert(node: Node): void;
    appendToHead(node: Node): void;
    isScript(): boolean;
    insertURL(url: string): void | HTMLElement;
    insertScriptTag(src: string): HTMLElement;
    insertStyleLink(href: string): void;
    insertNewline(node?: InDOMNode): void;
}
interface InDOMNode extends Node {
    parentElement: HTMLElement;
    ownerDocument: Document;
}
interface StartNode extends InDOMNode {
    nextSibling: InDOMNode & ChildNode;
}
export {};
