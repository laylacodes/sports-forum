{"version":3,"file":"options.js","sourceRoot":"","sources":["options.ts"],"names":[],"mappings":"","sourcesContent":["import type { Configuration } from 'webpack';\n\n// [babel-loader](https://webpack.js.org/loaders/babel-loader/#options) specific options.\n// This does not include the babel configuration, which is pulled from the app, only the\n// additional options that `babel-loader` supports.\nexport interface BabelLoaderOptions {\n  cacheDirectory?: boolean | string;\n  cacheIdentifier?: string;\n  cacheCompression?: boolean;\n  customize?: string;\n}\n\nexport interface Options {\n  // This allows you to extend the webpack config in arbitrary ways. Your\n  // changes will get applied on top of the defaults provided by\n  // @embroider/webpack.\n  webpackConfig: Configuration;\n\n  // the base public URL for your assets in production. Use this when you want\n  // to serve all your assets from a different origin (like a CDN) than your\n  // actual index.html will be served on.\n  //\n  // This should be a URL ending in \"/\".\n  //\n  // For example:\n  //\n  // 1. If your build produces the file \"./dist/assets/chunk.123.js\"\n  // 2. And you set publicAssetURL to \"https://cdn/\"\n  // 3. Browsers will try to locate the file at\n  //    \"https://cdn/assets/chunk.123.js\".\n  //\n  // Notice that `publicAssetURL` gets applied relative to your whole built\n  // application -- not a particular subdirectory like \"/assets\". If you don't\n  // want a part of the path to show up in the public URLs, you should adjust the\n  // actual locations of the output files to remove that directory. For example:\n  //\n  // webpackConfig: {\n  //   output: {\n  //     // This overrides our default of \"assets/chunk.[chunkhash].js\"\n  //     // to move the chunks to the root of the app, eliminating the assets subdirectory.\n  //     filename: `mychunk.[chunkhash].js`,\n  //     chunkFilename: `mychunk.[chunkhash].js`,\n  //   },\n  // },\n  // publicAssetURL: \"https://cdn/\",\n  //\n  // The above example will result in CDN URLs like \"https://cdn/mychunk.123.js\".\n  //\n  publicAssetURL?: string;\n\n  // [thread-loader](https://github.com/webpack-contrib/thread-loader) options.\n  // If set to false, `thread-loader` will not be used. If set to an object, it\n  // will be used to configure `thread-loader`. If not specified,\n  // `thread-loader` will be used with a default configuration.\n  //\n  // Note that setting `JOBS=0` in the environment will also disable\n  // `thread-loader`.\n  threadLoaderOptions?: object | false;\n\n  babelLoaderOptions?: BabelLoaderOptions;\n\n  /**\n   * Options for [`css-loader`](https://webpack.js.org/loaders/css-loader)\n   */\n  cssLoaderOptions?: object;\n\n  /**\n   * Options for [`style-loader`](https://webpack.js.org/loaders/style-loader/).\n   *\n   * Note that [`mini-css-extract-plugin`](https://webpack.js.org/plugins/mini-css-extract-plugin/)\n   * is used instead of `style-loader` in production builds.\n   */\n  styleLoaderOptions?: object;\n}\n"]}