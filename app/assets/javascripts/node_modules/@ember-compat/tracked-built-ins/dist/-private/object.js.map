{"version":3,"file":"object.js","sources":["../../src/-private/object.ts"],"sourcesContent":["import {\n  createStorage,\n  getValue,\n  setValue,\n  TrackedStorage,\n} from 'ember-tracked-storage-polyfill';\nimport { PropertyStorageMap } from './property-storage-map';\nimport { cloneObjectWithAccessors } from './utils';\n\nfunction TrackedObjectImpl(obj = {}) {\n  if (new.target === undefined) {\n    throw new Error('TrackedObject must be called with `new`');\n  }\n\n  const prototype = new.target.prototype as object;\n  const clone = cloneObjectWithAccessors(obj);\n  const iteration = createStorage(null, () => false);\n\n  const proxy = new Proxy(clone, {\n    get(target, prop) {\n      values.consume(prop);\n      return Reflect.get(target, prop);\n    },\n\n    getPrototypeOf() {\n      return prototype;\n    },\n\n    setPrototypeOf() {\n      throw new Error('Cannot set prototype of TrackedObject');\n    },\n\n    has(target, prop) {\n      values.consume(prop);\n      return Reflect.has(target, prop);\n    },\n\n    ownKeys(target) {\n      getValue(iteration);\n      return Reflect.ownKeys(target);\n    },\n\n    set(target, prop, value, receiver) {\n      dirtyIteration(iteration);\n      values.update(prop);\n      Reflect.set(target, prop, value, receiver);\n      return true;\n    },\n\n    deleteProperty(target, prop) {\n      const desc = Reflect.getOwnPropertyDescriptor(target, prop);\n      if (desc && desc.configurable === true) {\n        values.update(prop);\n        dirtyIteration(iteration);\n      }\n      Reflect.deleteProperty(target, prop);\n      return true;\n    },\n\n    // Not-yet-overridden methods from the ProxyHandler interface:\n    //\n    // apply?(target: T, thisArg: any, argArray: any[]): any;\n    // construct?(target: T, argArray: any[], newTarget: Function): object;\n    // defineProperty?(target: T, property: string | symbol, attributes: PropertyDescriptor): boolean;\n    // getOwnPropertyDescriptor?(target: T, p: string | symbol): PropertyDescriptor | undefined;\n    // isExtensible?(target: T): boolean;\n    // preventExtensions?(target: T): boolean;\n  });\n\n  const values = new PropertyStorageMap(proxy);\n\n  return proxy;\n}\n\nfunction dirtyIteration(iteration: TrackedStorage<null>) {\n  setValue(iteration, null);\n}\n\nTrackedObjectImpl.fromEntries = <T>(\n  entries: Iterable<readonly [PropertyKey, T]>\n): Record<PropertyKey, T> => {\n  return new TrackedObject(Object.fromEntries(entries));\n};\n\ninterface TrackedObjectClass {\n  /**\n   * Returns an object created by key-value entries for properties and methods\n   * @param entries An iterable object that contains key-value entries for properties and methods.\n   *\n   * Note: interface matches the built-in types, which use `any`, for maximum compat.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  fromEntries<T = any>(\n    entries: Iterable<readonly [PropertyKey, T]>\n  ): { [k: string]: T };\n\n  /**\n   * Returns an object created by key-value entries for properties and methods\n   * @param entries An iterable object that contains key-value entries for properties and methods.\n   *\n   * Note: interface matches the built-in types, which use `any`, for maximum compat.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  fromEntries<T>(entries: Iterable<readonly [any, T][]>): Record<string, T>;\n\n  new <T extends Record<PropertyKey, unknown> = Record<PropertyKey, unknown>>(\n    obj?: T\n  ): T;\n}\n\nconst TrackedObject = TrackedObjectImpl as unknown as TrackedObjectClass;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype TrackedObject<T = {}> = T;\n\nexport default TrackedObject;\n"],"names":["TrackedObjectImpl","obj","new","target","undefined","Error","prototype","clone","cloneObjectWithAccessors","iteration","createStorage","proxy","Proxy","get","prop","values","consume","Reflect","getPrototypeOf","setPrototypeOf","has","ownKeys","getValue","set","value","receiver","dirtyIteration","update","deleteProperty","desc","getOwnPropertyDescriptor","configurable","PropertyStorageMap","setValue","fromEntries","entries","TrackedObject","Object"],"mappings":"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"}