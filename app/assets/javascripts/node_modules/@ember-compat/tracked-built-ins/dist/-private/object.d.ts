interface TrackedObjectClass {
    /**
     * Returns an object created by key-value entries for properties and methods
     * @param entries An iterable object that contains key-value entries for properties and methods.
     *
     * Note: interface matches the built-in types, which use `any`, for maximum compat.
     */
    fromEntries<T = any>(entries: Iterable<readonly [PropertyKey, T]>): {
        [k: string]: T;
    };
    /**
     * Returns an object created by key-value entries for properties and methods
     * @param entries An iterable object that contains key-value entries for properties and methods.
     *
     * Note: interface matches the built-in types, which use `any`, for maximum compat.
     */
    fromEntries<T>(entries: Iterable<readonly [any, T][]>): Record<string, T>;
    new <T extends Record<PropertyKey, unknown> = Record<PropertyKey, unknown>>(obj?: T): T;
}
declare const TrackedObject: TrackedObjectClass;
type TrackedObject<T = {}> = T;
export { TrackedObject as default };
