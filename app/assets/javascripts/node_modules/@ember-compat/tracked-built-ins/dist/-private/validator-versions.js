import * as validator from '@glimmer/validator';

function isV84(validator) {
  return 'consumeTag' in validator && typeof validator.consumeTag === 'function' && 'tagFor' in validator && typeof validator.tagFor === 'function' && 'dirtyTagFor' in validator && typeof validator.dirtyTagFor === 'function';
}
function normalize(module) {
  if (isV84(module)) {
    return {
      dirtyProperty: (object, property) => {
        module.dirtyTagFor(object, property);
      },
      consumeProperty: (object, property) => {
        module.consumeTag(module.tagFor(object, property));
      }
    };
  } else {
    throw new Error('The version of @glimmer/validator included with this build is incompatible with @ember-compat/tracked-built-ins. ');
  }
}
const {
  dirtyProperty,
  consumeProperty
} = normalize(validator);

export { consumeProperty, dirtyProperty };
//# sourceMappingURL=validator-versions.js.map
