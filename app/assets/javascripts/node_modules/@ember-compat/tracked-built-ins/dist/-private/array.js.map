{"version":3,"file":"array.js","sources":["../../../node_modules/.pnpm/@babel+runtime@7.20.1/node_modules/@babel/runtime/helpers/esm/classApplyDescriptorGet.js","../../../node_modules/.pnpm/@babel+runtime@7.20.1/node_modules/@babel/runtime/helpers/esm/classExtractFieldDescriptor.js","../../../node_modules/.pnpm/@babel+runtime@7.20.1/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js","../../src/-private/array.ts"],"sourcesContent":["export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\n// Unfortunately, TypeScript's ability to do inference *or* type-checking in a\n// `Proxy`'s body is very limited, so we have to use a number of casts `as any`\n// to make the internal accesses work. The type safety of these is guaranteed at\n// the *call site* instead of within the body: you cannot do `Array.blah` in TS,\n// and it will blow up in JS in exactly the same way, so it is safe to assume\n// that properties within the getter have the correct type in TS.\n\nimport {\n  TrackedStorage,\n  createStorage,\n  getValue,\n  setValue,\n} from 'ember-tracked-storage-polyfill';\n\nconst ARRAY_GETTER_METHODS = new Set<string | symbol | number>([\n  Symbol.iterator,\n  'concat',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'flat',\n  'flatMap',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'reduce',\n  'reduceRight',\n  'slice',\n  'some',\n  'values',\n]);\n\nfunction convertToInt(prop: number | string | symbol): number | null {\n  if (typeof prop === 'symbol') return null;\n\n  const num = Number(prop);\n\n  if (isNaN(num)) return null;\n\n  return num % 1 === 0 ? num : null;\n}\n\nclass TrackedArray<T = unknown> {\n  /**\n   * Creates an array from an iterable object.\n   * @param iterable An iterable object to convert to an array.\n   */\n  static from<T>(iterable: Iterable<T> | ArrayLike<T>): TrackedArray<T>;\n\n  /**\n   * Creates an array from an iterable object.\n   * @param iterable An iterable object to convert to an array.\n   * @param mapfn A mapping function to call on every element of the array.\n   * @param thisArg Value of 'this' used to invoke the mapfn.\n   */\n  static from<T, U>(\n    iterable: Iterable<T> | ArrayLike<T>,\n    mapfn: (v: T, k: number) => U,\n    thisArg?: unknown\n  ): TrackedArray<U>;\n\n  static from<T, U>(\n    iterable: Iterable<T> | ArrayLike<T>,\n    mapfn?: (v: T, k: number) => U,\n    thisArg?: unknown\n  ): TrackedArray<T> | TrackedArray<U> {\n    return mapfn\n      ? new TrackedArray(Array.from(iterable, mapfn, thisArg))\n      : new TrackedArray(Array.from(iterable));\n  }\n\n  static of<T>(...arr: T[]): TrackedArray<T> {\n    return new TrackedArray(arr);\n  }\n\n  constructor(arr: T[] = []) {\n    let clone = arr.slice();\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let self = this;\n\n    let boundFns = new Map();\n\n    return new Proxy(clone, {\n      get(target, prop /*, _receiver */) {\n        let index = convertToInt(prop);\n\n        if (index !== null) {\n          self.#readStorageFor(index);\n          getValue(self.#collection);\n\n          return target[index];\n        } else if (prop === 'length') {\n          getValue(self.#collection);\n        } else if (ARRAY_GETTER_METHODS.has(prop)) {\n          let fn = boundFns.get(prop);\n\n          if (fn === undefined) {\n            fn = (...args: unknown[]) => {\n              getValue(self.#collection);\n              return (target as any)[prop](...args);\n            };\n\n            boundFns.set(prop, fn);\n          }\n\n          return fn;\n        }\n\n        return (target as any)[prop];\n      },\n\n      set(target, prop, value /*, _receiver */) {\n        (target as any)[prop] = value;\n\n        let index = convertToInt(prop);\n\n        if (index !== null) {\n          self.#dirtyStorageFor(index);\n          setValue(self.#collection, null);\n        } else if (prop === 'length') {\n          setValue(self.#collection, null);\n        }\n\n        return true;\n      },\n\n      getPrototypeOf() {\n        return TrackedArray.prototype;\n      },\n    }) as TrackedArray<T>;\n  }\n\n  #collection = createStorage(null, () => false);\n\n  #storages = new Map<number, TrackedStorage<null>>();\n\n  #readStorageFor(index: number) {\n    const storages = this.#storages;\n    let storage = storages.get(index);\n\n    if (storage === undefined) {\n      storage = createStorage(null, () => false);\n      storages.set(index, storage);\n    }\n\n    getValue(storage);\n  }\n\n  #dirtyStorageFor(index: number): void {\n    const storage = this.#storages.get(index);\n\n    if (storage) {\n      setValue(storage, null);\n    }\n  }\n}\n\n// This rule is correctly in the general case, but it doesn't understand\n// declaration merging, which is how we're using the interface here. This\n// declaration says that `TrackedArray` acts just like `Array<T>`, but also has\n// the properties declared via the `class` declaration above -- but without the\n// cost of a subclass, which is much slower that the proxied array behavior.\n// That is: a `TrackedArray` *is* an `Array`, just with a proxy in front of\n// accessors and setters, rather than a subclass of an `Array` which would be\n// de-optimized by the browsers.\n//\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface TrackedArray<T = unknown> extends Array<T> {}\n\nexport default TrackedArray;\n\n// Ensure instanceof works correctly\nObject.setPrototypeOf(TrackedArray.prototype, Array.prototype);\n"],"names":["_classApplyDescriptorGet","receiver","descriptor","get","call","value","_classExtractFieldDescriptor","privateMap","action","has","TypeError","_classPrivateFieldGet","classExtractFieldDescriptor","classApplyDescriptorGet","ARRAY_GETTER_METHODS","Set","Symbol","iterator","convertToInt","prop","num","Number","isNaN","TrackedArray","from","iterable","mapfn","thisArg","Array","of","arr","constructor","createStorage","Map","clone","slice","self","boundFns","Proxy","target","index","getValue","fn","undefined","args","set","setValue","getPrototypeOf","prototype","storages","storage","Object","setPrototypeOf"],"mappings":";;AAAe,SAASA,wBAAwB,CAACC,QAAQ,EAAEC,UAAU,EAAE;EACrE,IAAIA,UAAU,CAACC,GAAG,EAAE;AAClB,IAAA,OAAOD,UAAU,CAACC,GAAG,CAACC,IAAI,CAACH,QAAQ,CAAC,CAAA;AACtC,GAAA;EACA,OAAOC,UAAU,CAACG,KAAK,CAAA;AACzB;;ACLe,SAASC,4BAA4B,CAACL,QAAQ,EAAEM,UAAU,EAAEC,MAAM,EAAE;AACjF,EAAA,IAAI,CAACD,UAAU,CAACE,GAAG,CAACR,QAAQ,CAAC,EAAE;IAC7B,MAAM,IAAIS,SAAS,CAAC,eAAe,GAAGF,MAAM,GAAG,gCAAgC,CAAC,CAAA;AAClF,GAAA;AACA,EAAA,OAAOD,UAAU,CAACJ,GAAG,CAACF,QAAQ,CAAC,CAAA;AACjC;;ACHe,SAASU,qBAAqB,CAACV,QAAQ,EAAEM,UAAU,EAAE;EAClE,IAAIL,UAAU,GAAGU,4BAA2B,CAACX,QAAQ,EAAEM,UAAU,EAAE,KAAK,CAAC,CAAA;AACzE,EAAA,OAAOM,wBAAuB,CAACZ,QAAQ,EAAEC,UAAU,CAAC,CAAA;AACtD;;;;;;ACUA,MAAMY,oBAAoB,GAAG,IAAIC,GAAG,CAA2B,CAC7DC,MAAM,CAACC,QAAQ,EACf,QAAQ,EACR,SAAS,EACT,OAAO,EACP,MAAM,EACN,QAAQ,EACR,MAAM,EACN,WAAW,EACX,MAAM,EACN,SAAS,EACT,SAAS,EACT,UAAU,EACV,SAAS,EACT,MAAM,EACN,MAAM,EACN,aAAa,EACb,KAAK,EACL,QAAQ,EACR,aAAa,EACb,OAAO,EACP,MAAM,EACN,QAAQ,CACT,CAAC,CAAA;AAEF,SAASC,YAAY,CAACC,IAA8B,EAAiB;AACnE,EAAA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE,OAAO,IAAI,CAAA;AAEzC,EAAA,MAAMC,GAAG,GAAGC,MAAM,CAACF,IAAI,CAAC,CAAA;AAExB,EAAA,IAAIG,KAAK,CAACF,GAAG,CAAC,EAAE,OAAO,IAAI,CAAA;EAE3B,OAAOA,GAAG,GAAG,CAAC,KAAK,CAAC,GAAGA,GAAG,GAAG,IAAI,CAAA;AACnC,CAAA;AAAC,IAAA,WAAA,gBAAA,IAAA,OAAA,EAAA,CAAA;AAAA,IAAA,SAAA,gBAAA,IAAA,OAAA,EAAA,CAAA;AAAA,IAAA,eAAA,gBAAA,IAAA,OAAA,EAAA,CAAA;AAAA,IAAA,gBAAA,gBAAA,IAAA,OAAA,EAAA,CAAA;AAED,MAAMG,YAAY,CAAc;AAC9B;AACF;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;;AAOE,EAAA,OAAOC,IAAI,CACTC,QAAoC,EACpCC,KAA8B,EAC9BC,OAAiB,EACkB;IACnC,OAAOD,KAAK,GACR,IAAIH,YAAY,CAACK,KAAK,CAACJ,IAAI,CAACC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,CAAC,CAAC,GACtD,IAAIJ,YAAY,CAACK,KAAK,CAACJ,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAA;AAC5C,GAAA;AAEA,EAAA,OAAOI,EAAE,CAAI,GAAGC,GAAQ,EAAmB;AACzC,IAAA,OAAO,IAAIP,YAAY,CAACO,GAAG,CAAC,CAAA;AAC9B,GAAA;AAEAC,EAAAA,WAAW,CAACD,GAAQ,GAAG,EAAE,EAAE;AAAA,IAAA,2BAAA,CAAA,IAAA,EAAA,gBAAA,CAAA,CAAA;AAAA,IAAA,2BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAA;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,WAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAyDbE,aAAa,CAAC,IAAI,EAAE,MAAM,KAAK,CAAA;AAAC,KAAA,CAAA,CAAA;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,SAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAElC,IAAIC,GAAG,EAAA;AAAgC,KAAA,CAAA,CAAA;AA1DjD,IAAA,IAAIC,KAAK,GAAGJ,GAAG,CAACK,KAAK,EAAE,CAAA;AACvB;IACA,IAAIC,IAAI,GAAG,IAAI,CAAA;AAEf,IAAA,IAAIC,QAAQ,GAAG,IAAIJ,GAAG,EAAE,CAAA;AAExB,IAAA,OAAO,IAAIK,KAAK,CAACJ,KAAK,EAAE;AACtB/B,MAAAA,GAAG,CAACoC,MAAM,EAAEpB,IAAI,mBAAmB;AACjC,QAAA,IAAIqB,KAAK,GAAGtB,YAAY,CAACC,IAAI,CAAC,CAAA;QAE9B,IAAIqB,KAAK,KAAK,IAAI,EAAE;AAClB,UAAA,sBAAA,CAAAJ,IAAI,EAAA,eAAA,EAAA,gBAAA,CAAA,CAAA,IAAA,CAAJA,IAAI,EAAiBI,KAAK,CAAA,CAAA;UAC1BC,QAAQ,CAAA,qBAAA,CAACL,IAAI,EAAa,WAAA,CAAA,CAAA,CAAA;UAE1B,OAAOG,MAAM,CAACC,KAAK,CAAC,CAAA;AACtB,SAAC,MAAM,IAAIrB,IAAI,KAAK,QAAQ,EAAE;UAC5BsB,QAAQ,CAAA,qBAAA,CAACL,IAAI,EAAa,WAAA,CAAA,CAAA,CAAA;SAC3B,MAAM,IAAItB,oBAAoB,CAACL,GAAG,CAACU,IAAI,CAAC,EAAE;AACzC,UAAA,IAAIuB,EAAE,GAAGL,QAAQ,CAAClC,GAAG,CAACgB,IAAI,CAAC,CAAA;UAE3B,IAAIuB,EAAE,KAAKC,SAAS,EAAE;AACpBD,YAAAA,EAAE,GAAG,CAAC,GAAGE,IAAe,KAAK;cAC3BH,QAAQ,CAAA,qBAAA,CAACL,IAAI,EAAa,WAAA,CAAA,CAAA,CAAA;AAC1B,cAAA,OAAQG,MAAM,CAASpB,IAAI,CAAC,CAAC,GAAGyB,IAAI,CAAC,CAAA;aACtC,CAAA;AAEDP,YAAAA,QAAQ,CAACQ,GAAG,CAAC1B,IAAI,EAAEuB,EAAE,CAAC,CAAA;AACxB,WAAA;AAEA,UAAA,OAAOA,EAAE,CAAA;AACX,SAAA;QAEA,OAAQH,MAAM,CAASpB,IAAI,CAAC,CAAA;OAC7B;AAED0B,MAAAA,GAAG,CAACN,MAAM,EAAEpB,IAAI,EAAEd,KAAK,mBAAmB;AACvCkC,QAAAA,MAAM,CAASpB,IAAI,CAAC,GAAGd,KAAK,CAAA;AAE7B,QAAA,IAAImC,KAAK,GAAGtB,YAAY,CAACC,IAAI,CAAC,CAAA;QAE9B,IAAIqB,KAAK,KAAK,IAAI,EAAE;AAClB,UAAA,sBAAA,CAAAJ,IAAI,EAAA,gBAAA,EAAA,iBAAA,CAAA,CAAA,IAAA,CAAJA,IAAI,EAAkBI,KAAK,CAAA,CAAA;AAC3BM,UAAAA,QAAQ,CAACV,qBAAAA,CAAAA,IAAI,EAAc,WAAA,CAAA,EAAA,IAAI,CAAC,CAAA;AAClC,SAAC,MAAM,IAAIjB,IAAI,KAAK,QAAQ,EAAE;AAC5B2B,UAAAA,QAAQ,CAACV,qBAAAA,CAAAA,IAAI,EAAc,WAAA,CAAA,EAAA,IAAI,CAAC,CAAA;AAClC,SAAA;AAEA,QAAA,OAAO,IAAI,CAAA;OACZ;AAEDW,MAAAA,cAAc,GAAG;QACf,OAAOxB,YAAY,CAACyB,SAAS,CAAA;AAC/B,OAAA;AACF,KAAC,CAAC,CAAA;AACJ,GAAA;AAyBF,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAA,gBAAA,CA9BkBR,KAAa,EAAE;EAC7B,MAAMS,QAAQ,GAAG,qBAAA,CAAA,IAAI,EAAU,SAAA,CAAA,CAAA;AAC/B,EAAA,IAAIC,OAAO,GAAGD,QAAQ,CAAC9C,GAAG,CAACqC,KAAK,CAAC,CAAA;EAEjC,IAAIU,OAAO,KAAKP,SAAS,EAAE;AACzBO,IAAAA,OAAO,GAAGlB,aAAa,CAAC,IAAI,EAAE,MAAM,KAAK,CAAC,CAAA;AAC1CiB,IAAAA,QAAQ,CAACJ,GAAG,CAACL,KAAK,EAAEU,OAAO,CAAC,CAAA;AAC9B,GAAA;EAEAT,QAAQ,CAACS,OAAO,CAAC,CAAA;AACnB,CAAA;AAAC,SAAA,iBAAA,CAEgBV,KAAa,EAAQ;AACpC,EAAA,MAAMU,OAAO,GAAG,qBAAA,CAAA,IAAI,aAAW/C,GAAG,CAACqC,KAAK,CAAC,CAAA;AAEzC,EAAA,IAAIU,OAAO,EAAE;AACXJ,IAAAA,QAAQ,CAACI,OAAO,EAAE,IAAI,CAAC,CAAA;AACzB,GAAA;AACF,CAAA;;AAiBF;AACAC,MAAM,CAACC,cAAc,CAAC7B,YAAY,CAACyB,SAAS,EAAEpB,KAAK,CAACoB,SAAS,CAAC;;;;"}