{"version":3,"file":"assets/chunk.2531ce445d3a2426db0a.d41d8cd9.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAqC;AACc;AACf;AACa;AACmB;;AAEpE;AACA;AACe,SAASK,UAAUA,CAChCC,OAAO,EACPC,iBAAiB,EACjBC,eAAe,EACf;EACA,MAAMC,MAAM,GAAGC,cAAc,CAACH,iBAAiB,EAAEC,eAAe,CAAC;EAEjE,MAAMG,MAAM,GACVL,OAAO,CAACM,SAAS,CAACC,mBAAmB,CAACC,iCAAiC;EAEzE,IAAIH,MAAM,EAAE;IACVF,MAAM,CAACH,OAAO,CAACK,MAAM,GAAGA,MAAM,CAACI,KAAK,CAAC,GAAG,CAAC;EAC3C;EAEA,MAAMC,IAAI,GAAGV,OAAO,CAACM,SAAS,CAACC,mBAAmB,CAACI,mBAAmB,IAAI,EAAE;EAC5ER,MAAM,CAACS,OAAO,CAACF,IAAI,CAACA,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC,CAAC;EAEpCI,gBAAgB,CAACV,MAAM,CAAC;EACxBW,YAAY,CAACX,MAAM,CAAC;EACpBY,kCAAkC,CAACZ,MAAM,CAAC;EAC1Ca,gBAAgB,CAACb,MAAM,CAAC;EACxBc,gBAAgB,CAACd,MAAM,CAAC;EACxBe,iBAAiB,CAACf,MAAM,CAAC;EACzBgB,yBAAyB,CAAChB,MAAM,CAAC;EAEjCH,OAAO,CAACG,MAAM,GAAGA,MAAM;EAEvB,KAAK,MAAM,CAACiB,OAAO,EAAEC,QAAQ,CAAC,IAAIrB,OAAO,CAACsB,eAAe,EAAE;IACzD,IAAItB,OAAO,CAACM,SAAS,CAACiB,QAAQ,CAACH,OAAO,CAAC,EAAE;MACvC,IAAIC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKG,SAAS,EAAE;QAC/C;QACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C;QACAD,OAAO,CAACC,GAAG,CAAE,eAAcN,OAAQ,EAAC,CAAC;MACvC;MACAjB,MAAM,CAACwB,GAAG,CAACN,QAAQ,CAAC;IACtB;EACF;;EAEA;EACArB,OAAO,CAAC4B,UAAU,GAAG,IAAI;EACzB5B,OAAO,CAAC6B,KAAK,GAAG,IAAI;EAEpB,IAAI,CAAC7B,OAAO,CAACM,SAAS,CAACwB,SAAS,IAAI,CAAC9B,OAAO,CAAC8B,SAAS,EAAE;IACtD,MAAMC,WAAW,GAAG,IAAIpC,gEAAW,CAACK,OAAO,CAACM,SAAS,CAAC;IAEtDN,OAAO,CAACgC,WAAW,CAACC,OAAO,CAAC,CAAC,CAACb,OAAO,EAAEc,IAAI,CAAC,KAAK;MAC/CH,WAAW,CAACI,gBAAgB,CAACf,OAAO,EAAEc,IAAI,CAAC;IAC7C,CAAC,CAAC;IAEFlC,OAAO,CAAC8B,SAAS,GAAG9B,OAAO,CAACM,SAAS,CAACwB,SAAS,GAAG9B,OAAO,CAACM,SAAS,CAACT,QAAQ,GACvEuC,CAAC,IAAKvC,+DAAQ,CAACuC,CAAC,EAAEL,WAAW,CAAC,GAC9BK,CAAC,IAAKA,CAAC;EACd;AACF;AAEO,SAASC,IAAIA,CAACC,GAAG,EAAEtC,OAAO,EAAE;EACjC;EACA;EACA;EACAA,OAAO,CAACM,SAAS,CAACiC,OAAO,KAAK,CAAC,CAAC;EAEhC,MAAMC,QAAQ,GAAGxC,OAAO,CAACG,MAAM,CAACsC,MAAM,CAACH,GAAG,CAAC;EAC3C,IAAII,MAAM,GAAG1C,OAAO,CAACM,SAAS,CAACwB,SAAS,CAACU,QAAQ,CAAC,CAACG,IAAI,CAAC,CAAC;;EAEzD;EACA;EACAD,MAAM,GAAGE,gBAAgB,CAAC5C,OAAO,CAACM,SAAS,CAACiC,OAAO,EAAEG,MAAM,CAAC;EAE5D,OAAOA,MAAM;AACf;AAEA,SAAStC,cAAcA,CAACH,iBAAiB,EAAEC,eAAe,EAAE;EAC1D,IAAIA,eAAe,EAAE;IACnB;IACA,OAAOR,uDAAU,CAAC,MAAM,EAAEO,iBAAiB,CAAC,CAAC4C,MAAM,CAAC3C,eAAe,CAAC;EACtE,CAAC,MAAM;IACL,OAAOR,uDAAU,CAACO,iBAAiB,CAAC;EACtC;AACF;AAEA,SAASY,gBAAgBA,CAACV,MAAM,EAAE;EAChC;EACA;EACAA,MAAM,CAAC2C,KAAK,CAACC,GAAG,CAACC,KAAK,CAACC,MAAM,CAACC,YAAY,GAAG,cAAc;AAC7D;;AAEA;AACA;AACA;AACA,SAASC,aAAaA,CAACC,MAAM,EAAEC,GAAG,EAAErD,OAAO,EAAE;EAC3C,MAAMsD,OAAO,GAAGF,MAAM,CAACC,GAAG,CAAC,CAACC,OAAO;EACnC,IAAIA,OAAO,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;IACjC,IAAIC,EAAE,GAAG5D,4DAAI,CAAC,CAAC;IACfI,OAAO,CAACM,SAAS,CAACiC,OAAO,CAACiB,EAAE,CAAC,GAAGF,OAAO;IACvC,OAAOE,EAAE;EACX,CAAC,MAAM;IACL,OAAO,EAAE;EACX;AACF;AAEA,SAASZ,gBAAgBA,CAACL,OAAO,EAAEG,MAAM,EAAE;EACzC,MAAMe,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAClB,OAAO,CAAC;EACjC,IAAIkB,IAAI,CAACF,MAAM,EAAE;IACf,IAAII,KAAK,GAAG,IAAI;IAEhB,MAAMC,OAAO,GAAG,SAAAA,CAAUC,GAAG,EAAE;MAC7BnB,MAAM,GAAGA,MAAM,CAACoB,OAAO,CAAC,IAAIC,MAAM,CAACF,GAAG,EAAE,GAAG,CAAC,EAAE,YAAY;QACxDF,KAAK,GAAG,IAAI;QACZ,OAAOpB,OAAO,CAACsB,GAAG,CAAC;MACrB,CAAC,CAAC;MACF,OAAOtB,OAAO,CAACsB,GAAG,CAAC;IACrB,CAAC;IAED,OAAOF,KAAK,EAAE;MACZA,KAAK,GAAG,KAAK;MACbF,IAAI,CAACxB,OAAO,CAAC2B,OAAO,CAAC;IACvB;EACF;EAEA,OAAOlB,MAAM;AACf;;AAEA;AACA;AACA,SAAS5B,YAAYA,CAACX,MAAM,EAAE;EAC5BA,MAAM,CAAC6D,QAAQ,CAACC,KAAK,CAACC,QAAQ,GAAGf,aAAa;AAChD;;AAEA;AACO,SAASgB,oBAAoBA,CAACC,GAAG,EAAE;EACxC,IAAIC,GAAG,GAAGD,GAAG,CAACE,OAAO,CAAC,GAAG,CAAC;EAC1B,IAAID,GAAG,KAAK,CAAC,CAAC,EAAE;IACd,OAAO,IAAI;EACb;EAEA,MAAMR,GAAG,GAAI,QAAOO,GAAG,CAACG,KAAK,CAAC,CAAC,EAAEF,GAAG,CAAE,EAAC,CAACG,WAAW,CAAC,CAAC;EACrD,IAAI,CAAC,wBAAwB,CAACC,IAAI,CAACZ,GAAG,CAAC,EAAE;IACvC,OAAO,IAAI;EACb;EAEA,MAAMa,KAAK,GAAGN,GAAG,CAACG,KAAK,CAACF,GAAG,GAAG,CAAC,CAAC;EAChC,OAAO,CAACR,GAAG,EAAEa,KAAK,CAAC;AACrB;;AAEA;AACA;AACA,SAASC,SAASA,CAACC,KAAK,EAAE;EACxB,MAAMC,GAAG,GAAGD,KAAK,CAACE,OAAO,CAAC,KAAK,CAAC;EAChC,MAAMC,OAAO,GAAGH,KAAK,CAACE,OAAO,CAAC,eAAe,CAAC;EAC9C,MAAME,eAAe,GAAGD,OAAO,KAAK,IAAI,GAAI,kBAAiBA,OAAQ,GAAE,GAAG,EAAE;EAC5E,OAAQ,4DAA2DF,GAAI,KAAIG,eAAgB;AAC7F,SAAS;AACT;AAEA,SAASC,SAASA,CAACL,KAAK,EAAE;EACxB,MAAMC,GAAG,GAAGD,KAAK,CAACE,OAAO,CAAC,KAAK,CAAC;EAChC,MAAMC,OAAO,GAAGH,KAAK,CAACE,OAAO,CAAC,eAAe,CAAC;EAC9C,MAAME,eAAe,GAAGD,OAAO,KAAK,IAAI,GAAI,kBAAiBA,OAAQ,GAAE,GAAG,EAAE;EAC5E,OAAQ;AACV,mBAAmBF,GAAI,KAAIG,eAAgB;AAC3C,eAAeH,GAAI,KAAIA,GAAI;AAC3B,WAAW;AACX;AAEA,MAAMK,cAAc,GAClB,wEAAwE;AAC1E,SAASC,0BAA0BA,CAAC/B,MAAM,EAAEC,GAAG,EAAErD,OAAO,EAAEoF,GAAG,EAAEC,GAAG,EAAE;EAClE,MAAMT,KAAK,GAAGxB,MAAM,CAACC,GAAG,CAAC;EACzB,MAAMiC,GAAG,GAAGD,GAAG,CAACE,kBAAkB,CAACX,KAAK,CAACY,QAAQ,EAAExF,OAAO,EAAEoF,GAAG,CAAC;EAChE,MAAM3E,KAAK,GAAG6E,GAAG,CAAC7E,KAAK,CAAC,GAAG,CAAC;EAC5B,MAAMgF,QAAQ,GAAG,CAAChF,KAAK,CAAC,CAAC,CAAC,CAAC;;EAE3B;EACA;EACA;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;IACxB,IACET,OAAO,CAACM,SAAS,CAACoF,UAAU,IAC5B,CAAC1F,OAAO,CAACM,SAAS,CAACC,mBAAmB,CAACoF,qBAAqB,EAC5D;MACA,OAAQ;AACd;AACA,aAAa;IACT,CAAC,MAAM;MACL,OAAOhB,SAAS,CAACC,KAAK,CAAC;IACzB;EACF,CAAC,MAAM,IAAInE,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;IAC/B,OAAOwE,SAAS,CAACL,KAAK,CAAC;EACzB;;EAEA;EACA,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEC,KAAK,EAAEC,IAAI,EAAEF,CAAC,GAAGnF,KAAK,CAAC8C,MAAM,EAAE,EAAEqC,CAAC,EAAE;IAClD,IAAI,CAACC,KAAK,GAAGpF,KAAK,CAACmF,CAAC,CAAC,CAACC,KAAK,CAACX,cAAc,CAAC,KAAKW,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;MACpE,IAAIE,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC;MACpB,IAAIG,MAAM,GAAGH,KAAK,CAAC,CAAC,CAAC;;MAErB;MACA,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAC5C,IAAII,OAAO,GAAGC,UAAU,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK;QAC1CE,KAAK,GAAGI,QAAQ,CAACJ,KAAK,GAAGE,OAAO,EAAE,EAAE,CAAC;QACrCD,MAAM,GAAGG,QAAQ,CAACH,MAAM,GAAGC,OAAO,EAAE,EAAE,CAAC;MACzC;;MAEA;MACA,IAAIJ,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAC5C,IAAIO,EAAE,GAAGF,UAAU,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGE,KAAK;QACrCA,KAAK,GAAGI,QAAQ,CAACN,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QAC9BG,MAAM,GAAGG,QAAQ,CAACH,MAAM,GAAGI,EAAE,EAAE,EAAE,CAAC;MACpC;;MAEA;MACA,IAAIP,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAE;QACzD,IAAIQ,EAAE,GAAGH,UAAU,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGG,MAAM;QACtCA,MAAM,GAAGG,QAAQ,CAACN,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QAC/BE,KAAK,GAAGI,QAAQ,CAACJ,KAAK,GAAGM,EAAE,EAAE,EAAE,CAAC;MAClC;MAEA,IAAIzB,KAAK,CAAC0B,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;QACnC1B,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,OAAO,EAAET,KAAK,CAAC,CAAC;MACpC;MAEA,IAAInB,KAAK,CAAC0B,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;QACpC1B,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,QAAQ,EAAER,MAAM,CAAC,CAAC;MACtC;MAEA,IACEhG,OAAO,CAACM,SAAS,CAACoF,UAAU,IAC5BG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAChBA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAChB;QACAjB,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;MAC1C;IACF,CAAC,MAAM,IAAKV,IAAI,GAAG3B,oBAAoB,CAAC1D,KAAK,CAACmF,CAAC,CAAC,CAAC,EAAG;MAClDhB,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAACV,IAAI,CAAC;IACxB,CAAC,MAAM,IAAIrF,KAAK,CAACmF,CAAC,CAAC,KAAK,WAAW,EAAE;MACnChB,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC,MAAM;MACLf,QAAQ,CAACe,IAAI,CAAC/F,KAAK,CAACmF,CAAC,CAAC,CAAC;IACzB;EACF;EAEA,MAAMa,QAAQ,GAAGhB,QAAQ,CAACiB,IAAI,CAAC,GAAG,CAAC,CAAC/D,IAAI,CAAC,CAAC;EAC1C,IAAI8D,QAAQ,KAAK,EAAE,EAAE;IACnB7B,KAAK,CAAC+B,OAAO,CAAC,MAAM,EAAE,cAAc,CAAC;EACvC,CAAC,MAAM;IACL/B,KAAK,CAAC+B,OAAO,CAAC,KAAK,EAAEF,QAAQ,CAAC;EAChC;EAEA,OAAOpB,GAAG,CAACuB,WAAW,CAACxD,MAAM,EAAEC,GAAG,EAAErD,OAAO,CAAC;AAC9C;;AAEA;AACA;AACA;AACA,SAASe,kCAAkCA,CAACZ,MAAM,EAAE;EAClDA,MAAM,CAAC6D,QAAQ,CAACC,KAAK,CAAC4C,KAAK,GAAG1B,0BAA0B;AAC1D;;AAEA;AACO,MAAM2B,oBAAoB,GAAG,YAAY;AAEhD,SAASC,gBAAgBA,CAAC3D,MAAM,EAAEC,GAAG,EAAErD,OAAO,EAAEoF,GAAG,EAAEC,GAAG,EAAE;EACxD,MAAM2B,SAAS,GAAG5D,MAAM,CAACC,GAAG,CAAC;EAC7B,MAAM4D,SAAS,GAAG7D,MAAM,CAACC,GAAG,GAAG,CAAC,CAAC;EAEjC,MAAM5C,KAAK,GAAGwG,SAAS,CAAC3D,OAAO,CAAC7C,KAAK,CAAC,GAAG,CAAC;EAC1C,MAAMyG,YAAY,GAAG,EAAE;EAEvB,KAAK,IAAItB,CAAC,GAAG,CAAC,EAAEE,IAAI,EAAEF,CAAC,GAAGnF,KAAK,CAAC8C,MAAM,EAAE,EAAEqC,CAAC,EAAE;IAC3C,IAAInF,KAAK,CAACmF,CAAC,CAAC,KAAKkB,oBAAoB,EAAE;MACrCE,SAAS,CAACT,KAAK,CAACY,OAAO,CAAC,CAAC,OAAO,EAAE1G,KAAK,CAACmF,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,MAAM,IAAKE,IAAI,GAAG3B,oBAAoB,CAAC1D,KAAK,CAACmF,CAAC,CAAC,CAAC,EAAG;MAClDoB,SAAS,CAACT,KAAK,CAACC,IAAI,CAACV,IAAI,CAAC;IAC5B,CAAC,MAAM;MACLoB,YAAY,CAACV,IAAI,CAAC/F,KAAK,CAACmF,CAAC,CAAC,CAAC;IAC7B;EACF;EAEA,IAAIsB,YAAY,CAAC3D,MAAM,GAAG,CAAC,EAAE;IAC3B0D,SAAS,CAAC3D,OAAO,GAAG4D,YAAY,CAACR,IAAI,CAAC,GAAG,CAAC;EAC5C;EAEA,OAAOrB,GAAG,CAACuB,WAAW,CAACxD,MAAM,EAAEC,GAAG,EAAErD,OAAO,CAAC;AAC9C;AAEA,SAASgB,gBAAgBA,CAACb,MAAM,EAAE;EAChCA,MAAM,CAAC6D,QAAQ,CAACC,KAAK,CAACmD,SAAS,GAAGL,gBAAgB;AACpD;;AAEA;AACA,MAAMM,KAAK,CAAC;EACVC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACrD,KAAK,GAAG,EAAE;EACjB;EAEAsD,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACtD,KAAK;EACnB;EAEAuD,aAAaA,CAACC,GAAG,EAAE;IACjB,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB,IAAI,IAAI,CAACC,KAAK,CAACC,cAAc,CAACH,GAAG,CAAC,EAAE;MAClC,OAAO,IAAI,CAACE,KAAK,CAACF,GAAG,CAAC;IACxB;EACF;EAEAC,WAAWA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACC,KAAK,EAAE;MACd;IACF;IAEA,IAAI,CAACA,KAAK,GAAG,CAAC,CAAC;IACf,KAAK,IAAI/B,CAAC,GAAG,IAAI,CAAC3B,KAAK,CAACV,MAAM,GAAG,CAAC,EAAEqC,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC/C,IAAI1D,IAAI,GAAG,IAAI,CAAC+B,KAAK,CAAC2B,CAAC,CAAC;MACxB,IAAI,CAAC+B,KAAK,CAACzF,IAAI,CAAC2F,IAAI,CAACJ,GAAG,CAAC,GAAGvF,IAAI;IAClC;EACF;EAEAsE,IAAIA,CAACsB,IAAI,EAAED,IAAI,EAAE;IACf,IAAI,CAAC5D,KAAK,CAACuC,IAAI,CAAC;MAAEsB,IAAI;MAAED;IAAK,CAAC,CAAC;IAC/B,IAAI,CAACF,KAAK,GAAG,IAAI;EACnB;AACF;;AAEA;AACA,SAAS1G,gBAAgBA,CAACd,MAAM,EAAE;EAChCA,MAAM,CAAC4H,KAAK,CAACC,MAAM,GAAG;IAAEC,KAAK,EAAE,IAAIZ,KAAK,CAAC;EAAE,CAAC;AAC9C;;AAEA;AACA,SAASnG,iBAAiBA,CAACf,MAAM,EAAE;EACjCA,MAAM,CAAC+H,MAAM,CAACF,MAAM,GAAG;IAAEC,KAAK,EAAE,IAAIZ,KAAK,CAAC;EAAE,CAAC;AAC/C;;AAEA;AACA,SAASlG,yBAAyBA,CAAChB,MAAM,EAAE;EACzCA,MAAM,CAACgI,IAAI,CAACC,eAAe,GAAG;IAAEH,KAAK,EAAE,IAAInI,6EAAoB,CAAC;EAAE,CAAC;AACrE;;;;;;;;;;;;;;AC1VO,SAAS+B,KAAKA,CAACwG,MAAM,EAAE;EAC5B,IAAIA,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC5C,UAAU,EAAE;IAClC;EACF;EAEA2C,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACL,IAAI,CAACF,KAAK,CAACzB,IAAI,CAAC,QAAQ,EAAGiC,KAAK,IAAK;MACtC,KACE,IAAIpF,GAAG,GAAG,CAAC,EAAEqF,GAAG,GAAG,CAAC,EAAEC,SAAS,GAAG,CAAC,EACnCtF,GAAG,GAAGoF,KAAK,CAACrF,MAAM,CAACG,MAAM,EACzBF,GAAG,EAAE,EACL;QACA,IACEoF,KAAK,CAACrF,MAAM,CAACC,GAAG,CAAC,CAACuF,IAAI,KAAK,iBAAiB,IAC3CH,KAAK,CAACrF,MAAM,CAACC,GAAG,CAAC,CAACuF,IAAI,KAAK,aAAa,IACvCH,KAAK,CAACrF,MAAM,CAACC,GAAG,CAAC,CAACoE,GAAG,KAAK,OAAQ,EACpC;UACA,EAAEiB,GAAG;QACP,CAAC,MAAM,IACLD,KAAK,CAACrF,MAAM,CAACC,GAAG,CAAC,CAACuF,IAAI,KAAK,kBAAkB,IAC5CH,KAAK,CAACrF,MAAM,CAACC,GAAG,CAAC,CAACuF,IAAI,KAAK,cAAc,IACxCH,KAAK,CAACrF,MAAM,CAACC,GAAG,CAAC,CAACoE,GAAG,KAAK,OAAQ,EACpC;UACA,EAAEiB,GAAG;QACP;QAEA,IAAIA,GAAG,GAAG,CAAC,IAAID,KAAK,CAACrF,MAAM,CAACC,GAAG,CAAC,CAACuF,IAAI,KAAK,cAAc,EAAE;UACxD;QACF;QAEA,MAAMC,QAAQ,GAAG,IAAIJ,KAAK,CAACK,KAAK,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;QACrD,MAAMC,SAAS,GAAG,IAAIN,KAAK,CAACK,KAAK,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAExD,IAAIE,IAAI,GAAGP,KAAK,CAACrF,MAAM,CAACC,GAAG,GAAG,CAAC,CAAC,CAACC,OAAO,CACrCkB,WAAW,CAAC,CAAC,CACbV,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CACpBA,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CACxBA,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CACtBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QAErB,IAAIkF,IAAI,CAACnD,KAAK,CAAC,SAAS,CAAC,EAAE;UACzBmD,IAAI,GAAI,KAAIA,IAAK,EAAC;QACpB;QAEAA,IAAI,GAAI,GAAEA,IAAI,IAAI,GAAI,IAAG,EAAEL,SAAU,EAAC;QAEtCE,QAAQ,CAAClC,OAAO,CAAC,MAAM,EAAEqC,IAAI,CAAC;QAC9BH,QAAQ,CAAClC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC;QACnCkC,QAAQ,CAAClC,OAAO,CAAC,MAAM,EAAE,GAAG,GAAGqC,IAAI,CAAC;QAEpCP,KAAK,CAACrF,MAAM,CAACC,GAAG,GAAG,CAAC,CAAC,CAACmC,QAAQ,CAAC2B,OAAO,CAAC4B,SAAS,CAAC;QACjDN,KAAK,CAACrF,MAAM,CAACC,GAAG,GAAG,CAAC,CAAC,CAACmC,QAAQ,CAAC2B,OAAO,CAAC0B,QAAQ,CAAC;MAClD;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;ACxDA,IAAII,YAAY;AAEhB,SAASC,iBAAiBA,CAACrE,GAAG,EAAEsE,KAAK,EAAEC,GAAG,EAAE;EAC1C,IAAIxD,CAAC;EACL,KAAKA,CAAC,GAAGuD,KAAK,EAAEvD,CAAC,GAAGwD,GAAG,EAAExD,CAAC,EAAE,EAAE;IAC5B,IAAIyD,IAAI,GAAGxE,GAAG,CAACyE,UAAU,CAAC1D,CAAC,CAAC;IAC5B,IAAIyD,IAAI,KAAK,IAAI,EAAE;MACjB,OAAO,IAAI;IACb;IACA,IAAI,CAACJ,YAAY,CAACI,IAAI,CAAC,EAAE;MACvB,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb;AAEA,MAAME,UAAU,GACd,4EAA4E;;AAE9E;AACA;AACO,SAASC,cAAcA,CAAC3E,GAAG,EAAEsE,KAAK,EAAEC,GAAG,EAAEK,SAAS,EAAE;EACzD,IAAI7D,CAAC;EACL,IAAI6B,GAAG;EACP,IAAIlB,KAAK,GAAG,CAAC,CAAC;EACd,IAAImD,MAAM,GAAG,KAAK;EAClB,IAAInG,MAAM,GAAG,CAAC;EACd,IAAIoG,UAAU,GAAG,KAAK;;EAEtB;EACA,IAAI9E,GAAG,CAACyE,UAAU,CAACH,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;IACpCQ,UAAU,GAAG,IAAI;IACjBR,KAAK,IAAI,CAAC;EACZ;EAEA,KAAKvD,CAAC,GAAGuD,KAAK,GAAG,CAAC,EAAEvD,CAAC,GAAGwD,GAAG,EAAExD,CAAC,EAAE,EAAE;IAChC,IAAIgE,MAAM,GAAG/E,GAAG,CAACe,CAAC,CAAC;IACnB,IACE,EAAGgE,MAAM,IAAI,GAAG,IAAIA,MAAM,IAAI,GAAG,IAAMA,MAAM,IAAI,GAAG,IAAIA,MAAM,IAAI,GAAI,CAAC,EACvE;MACA;IACF;EACF;EAEAnC,GAAG,GAAG5C,GAAG,CAACN,KAAK,CAAC4E,KAAK,GAAG,CAAC,EAAEvD,CAAC,CAAC;EAE7B,IAAI,CAAC6B,GAAG,EAAE;IACR;EACF;EAEA,IAAIkC,UAAU,EAAE;IACd,IAAI9E,GAAG,CAACe,CAAC,CAAC,KAAK,GAAG,EAAE;MAClB,IAAI6D,SAAS,IAAI,CAACP,iBAAiB,CAACrE,GAAG,EAAEe,CAAC,GAAG,CAAC,EAAEwD,GAAG,CAAC,EAAE;QACpD;MACF;MAEA3B,GAAG,GAAGA,GAAG,CAACjD,WAAW,CAAC,CAAC;MAEvB,OAAO;QAAEiD,GAAG;QAAElE,MAAM,EAAEkE,GAAG,CAAClE,MAAM,GAAG,CAAC;QAAEsG,OAAO,EAAE;MAAK,CAAC;IACvD;IACA;EACF;EAEA,OAAOjE,CAAC,GAAGwD,GAAG,EAAExD,CAAC,EAAE,EAAE;IACnB,IAAIgE,MAAM,GAAG/E,GAAG,CAACe,CAAC,CAAC;IAEnB,IAAIgE,MAAM,KAAK,GAAG,EAAE;MAClBF,MAAM,GAAG,IAAI;MACb;IACF;EACF;EAEA,IAAIA,MAAM,EAAE;IACVnG,MAAM,GAAGqC,CAAC,GAAGuD,KAAK,GAAG,CAAC;IAEtB,IAAI7G,GAAG,GAAGuC,GAAG,CAACN,KAAK,CAAC4E,KAAK,GAAG1B,GAAG,CAAClE,MAAM,GAAG,CAAC,EAAEqC,CAAC,CAAC;;IAE9C;IACA,IAAItD,GAAG,EAAE;MACP,IAAIuD,KAAK,EAAEhC,GAAG,EAAEiG,GAAG;MAEnB,OAAQjE,KAAK,GAAG0D,UAAU,CAACQ,IAAI,CAACzH,GAAG,CAAC,EAAG;QACrC,IAAIuD,KAAK,CAAC,CAAC,CAAC,EAAE;UACZhC,GAAG,GAAG,UAAU;QAClB,CAAC,MAAM;UACLA,GAAG,GAAGgC,KAAK,CAAC,CAAC,CAAC;QAChB;QAEAiE,GAAG,GAAGjE,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC;QAE1B,IAAIiE,GAAG,EAAE;UACPA,GAAG,GAAGA,GAAG,CAACnH,IAAI,CAAC,CAAC;UAChBmH,GAAG,GAAGA,GAAG,CAAChG,OAAO,CAAC,oBAAoB,EAAE,IAAI,CAAC;UAC7CyC,KAAK,CAAC1C,GAAG,CAAC,GAAGiG,GAAG;QAClB;MACF;IACF;IAEA,IAAIL,SAAS,IAAI,CAACP,iBAAiB,CAACrE,GAAG,EAAEsE,KAAK,GAAG5F,MAAM,EAAE6F,GAAG,CAAC,EAAE;MAC7D;IACF;IAEA3B,GAAG,GAAGA,GAAG,CAACjD,WAAW,CAAC,CAAC;IAEvB,OAAO;MAAEiD,GAAG;MAAElB,KAAK;MAAEhD;IAAO,CAAC;EAC/B;AACF;AAEA,SAASyG,iBAAiBA,CAACvB,KAAK,EAAEwB,OAAO,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAC7D,IAAIC,OAAO,GAAG,CAAC;IACbC,IAAI,GAAGH,SAAS,GAAG,CAAC;IACpBf,KAAK;IACLmB,QAAQ;IACRlB,GAAG;EAEL,SAAS;IACPiB,IAAI,EAAE;IACN,IAAIA,IAAI,IAAIF,OAAO,EAAE;MACnB;MACA;IACF;IAEAhB,KAAK,GAAGV,KAAK,CAAC8B,MAAM,CAACF,IAAI,CAAC,GAAG5B,KAAK,CAAC+B,MAAM,CAACH,IAAI,CAAC;IAC/CjB,GAAG,GAAGX,KAAK,CAACgC,MAAM,CAACJ,IAAI,CAAC;IAExB,IAAIlB,KAAK,GAAGC,GAAG,IAAIX,KAAK,CAACiC,MAAM,CAACL,IAAI,CAAC,GAAG5B,KAAK,CAACkC,SAAS,EAAE;MACvD;MACA;MACA;MACA;IACF;;IAEA;IACA,IAAI,EAAE,KAAKlC,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAACH,KAAK,CAAC,EAAE;MACtC;IACF;IAEA,IAAIV,KAAK,CAACiC,MAAM,CAACL,IAAI,CAAC,GAAG5B,KAAK,CAACkC,SAAS,IAAI,CAAC,EAAE;MAC7C;MACA;IACF;IAEAL,QAAQ,GAAGd,cAAc,CAACf,KAAK,CAAC5D,GAAG,EAAEsE,KAAK,EAAEC,GAAG,EAAE,IAAI,CAAC;IAEtD,IAAIkB,QAAQ,IAAIA,QAAQ,CAACT,OAAO,IAAIS,QAAQ,CAAC7C,GAAG,KAAKwC,OAAO,CAACxC,GAAG,EAAE;MAChE,IAAI2C,OAAO,KAAK,CAAC,EAAE;QACjBE,QAAQ,CAACD,IAAI,GAAGA,IAAI;QACpBC,QAAQ,CAACvC,KAAK,GAAG,IAAI;QACrB;MACF;MACAqC,OAAO,EAAE;IACX;IAEA,IAAIE,QAAQ,IAAI,CAACA,QAAQ,CAACT,OAAO,IAAIS,QAAQ,CAAC7C,GAAG,KAAKwC,OAAO,CAACxC,GAAG,EAAE;MACjE2C,OAAO,EAAE;IACX;IAEAE,QAAQ,GAAG,IAAI;EACjB;EAEA,OAAOA,QAAQ;AACjB;AAEA,SAASM,kBAAkBA,CAACnC,KAAK,EAAEwB,OAAO,EAAEd,KAAK,EAAEC,GAAG,EAAE;EACtD,IAAIkB,QAAQ;EACZ,IAAIO,WAAW,GAAG,KAAK;EAEvB,KAAK,IAAIC,CAAC,GAAG1B,GAAG,GAAG,CAAC,EAAE0B,CAAC,GAAG3B,KAAK,EAAE2B,CAAC,EAAE,EAAE;IACpC,IAAI,CAACD,WAAW,EAAE;MAChB,IAAIpC,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAACwB,CAAC,CAAC,KAAK,EAAE,CAAC,SAAS;QAC1CD,WAAW,GAAG,IAAI;QAClB;MACF;MACA,IAAI,CAAC5B,YAAY,CAACR,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAACwB,CAAC,CAAC,CAAC,EAAE;QAC1C;MACF;IACF,CAAC,MAAM;MACL,IAAIrC,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAACwB,CAAC,CAAC,KAAK,EAAE,CAAC,SAAS;QAC1CR,QAAQ,GAAGd,cAAc,CAACf,KAAK,CAAC5D,GAAG,EAAEiG,CAAC,EAAE1B,GAAG,CAAC;QAC5C,IAAI,CAACkB,QAAQ,IAAIA,QAAQ,CAAC7C,GAAG,KAAKwC,OAAO,CAACxC,GAAG,IAAI,CAAC6C,QAAQ,CAACT,OAAO,EAAE;UAClES,QAAQ,GAAG,IAAI;QACjB,CAAC,MAAM;UACLA,QAAQ,CAACnB,KAAK,GAAG2B,CAAC;UAClB;QACF;MACF;IACF;EACF;EAEA,OAAOR,QAAQ;AACjB;AAEA,SAASS,WAAWA,CAACtC,KAAK,EAAEyB,SAAS,EAAEC,OAAO,EAAEa,MAAM,EAAExC,EAAE,EAAE;EAC1D,IAAIyC,QAAQ;IACVC,SAAS;IACTC,UAAU;IACVtD,IAAI;IACJsB,KAAK,GAAGV,KAAK,CAAC8B,MAAM,CAACL,SAAS,CAAC,GAAGzB,KAAK,CAAC+B,MAAM,CAACN,SAAS,CAAC;IACzDkB,OAAO,GAAGjC,KAAK;IACfC,GAAG,GAAGX,KAAK,CAACgC,MAAM,CAACP,SAAS,CAAC;;EAE/B;EACA,IAAI,EAAE,KAAKzB,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAACH,KAAK,CAAC,EAAE;IACtC,OAAO,KAAK;EACd;EAEA,IAAIjH,IAAI,GAAGsH,cAAc,CAACf,KAAK,CAAC5D,GAAG,EAAEsE,KAAK,EAAEC,GAAG,CAAC;EAEhD,IAAI,CAAClH,IAAI,IAAIA,IAAI,CAAC2H,OAAO,EAAE;IACzB,OAAO,KAAK;EACd;EAEA,IAAIwB,QAAQ,GAAG7C,EAAE,CAACT,KAAK,CAACC,MAAM,CAACC,KAAK,CAACT,aAAa,CAACtF,IAAI,CAACuF,GAAG,CAAC;EAC5D,IAAI,CAAC4D,QAAQ,EAAE;IACb,OAAO,KAAK;EACd;EAEAxD,IAAI,GAAGwD,QAAQ,CAACxD,IAAI;;EAEpB;EACA,IAAImD,MAAM,EAAE;IACV,OAAO,IAAI;EACb;;EAEA;EACAC,QAAQ,GAAGf,SAAS;;EAEpB;;EAEA,IAAII,QAAQ,GAAGM,kBAAkB,CAACnC,KAAK,EAAEvG,IAAI,EAAEiH,KAAK,GAAGjH,IAAI,CAACqB,MAAM,EAAE6F,GAAG,CAAC;EAExE,IAAI,CAACkB,QAAQ,EAAE;IACb,IAAI,CAACpB,iBAAiB,CAACT,KAAK,CAAC5D,GAAG,EAAEsE,KAAK,GAAGjH,IAAI,CAACqB,MAAM,EAAE6F,GAAG,CAAC,EAAE;MAC3D,OAAO,KAAK;IACd;IACAkB,QAAQ,GAAGN,iBAAiB,CAACvB,KAAK,EAAEvG,IAAI,EAAE+I,QAAQ,GAAG,CAAC,EAAEd,OAAO,CAAC;EAClE;EAEA,IAAI,CAACG,QAAQ,EAAE;IACb,OAAO,KAAK;EACd;EAEAW,QAAQ,GAAGX,QAAQ,CAACD,IAAI,IAAIH,SAAS;EAErCgB,SAAS,GAAGzC,KAAK,CAAC6C,UAAU;EAC5BH,UAAU,GAAG1C,KAAK,CAAC8C,OAAO;;EAE1B;EACA;EACA9C,KAAK,CAAC8C,OAAO,GAAGN,QAAQ;EAExB,IAAIpD,IAAI,CAAC/D,OAAO,EAAE;IAChB,IAAIR,OAAO;IAEX,IAAI4G,SAAS,KAAKe,QAAQ,EAAE;MAC1B3H,OAAO,GAAGmF,KAAK,CAAC5D,GAAG,CAACN,KAAK,CAAC4E,KAAK,GAAGjH,IAAI,CAACqB,MAAM,EAAE+G,QAAQ,CAACnB,KAAK,CAAC;IAChE,CAAC,MAAM;MACL7F,OAAO,GAAGmF,KAAK,CAAC5D,GAAG,CAACN,KAAK,CACvBkE,KAAK,CAAC8B,MAAM,CAACL,SAAS,GAAG,CAAC,CAAC,EAC3BzB,KAAK,CAACgC,MAAM,CAACQ,QAAQ,GAAG,CAAC,CAC3B,CAAC;IACH;IAEA,IAAI,CAACpD,IAAI,CAAC/D,OAAO,CAAC0H,IAAI,CAAC,IAAI,EAAE/C,KAAK,EAAEvG,IAAI,EAAEoB,OAAO,CAAC,EAAE;MAClD,OAAO,KAAK;IACd;EACF,CAAC,MAAM;IACL,IAAIuE,IAAI,CAAC4D,MAAM,EAAE;MACf5D,IAAI,CAAC4D,MAAM,CAACD,IAAI,CACd,IAAI,EACJ/C,KAAK,EACLvG,IAAI,EACJuG,KAAK,CAAC5D,GAAG,CAACN,KAAK,CAAC6G,OAAO,EAAEA,OAAO,GAAGlJ,IAAI,CAACqB,MAAM,GAAG,CAAC,CACpD,CAAC;IACH;IAEA,IAAImI,OAAO;IACX,IAAI7D,IAAI,CAAC8D,IAAI,EAAE;MACb,IAAI/G,KAAK;MAET,IAAI,OAAOiD,IAAI,CAAC8D,IAAI,KAAK,UAAU,EAAE;QACnC/G,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,aAAa,EAAE,KAAK,EAAE,CAAC,CAAC;QAChDlE,KAAK,CAACgH,KAAK,GAAGnD,KAAK,CAACmD,KAAK,GAAG,CAAC;QAE7B,IAAI,CAAC/D,IAAI,CAAC8D,IAAI,CAAC/G,KAAK,EAAE1C,IAAI,CAAC,EAAE;UAC3B,OAAO,KAAK;QACd;QAEAuG,KAAK,CAACrF,MAAM,CAACoD,IAAI,CAAC5B,KAAK,CAAC;QACxB6D,KAAK,CAACmD,KAAK,GAAGhH,KAAK,CAACgH,KAAK;QACzBF,OAAO,GAAG9G,KAAK,CAAC6C,GAAG;MACrB,CAAC,MAAM;QACL,IAAIhH,KAAK,GAAGoH,IAAI,CAAC8D,IAAI,CAAClL,KAAK,CAAC,GAAG,CAAC;QAChCiL,OAAO,GAAGjL,KAAK,CAAC,CAAC,CAAC;QAClB,IAAIoL,SAAS,GAAGpL,KAAK,CAAC8D,KAAK,CAAC,CAAC,CAAC,CAACmC,IAAI,CAAC,GAAG,CAAC;QAExC9B,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,aAAa,EAAEkF,OAAO,EAAE,CAAC,CAAC;QAE7C,IAAIG,SAAS,EAAE;UACbjH,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,OAAO,EAAEsF,SAAS,CAAC,CAAC;QACtC;MACF;IACF;IAEA,IAAIC,SAAS,GAAGrD,KAAK,CAACrF,MAAM,CAACqF,KAAK,CAACrF,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC;IACrDuI,SAAS,CAACC,GAAG,GAAG,CAAC7B,SAAS,EAAEe,QAAQ,CAAC;IAErC,IAAIX,QAAQ,CAACvC,KAAK,EAAE;MAClBU,KAAK,CAACD,EAAE,CAACT,KAAK,CAACiE,QAAQ,CAACvD,KAAK,EAAEyB,SAAS,GAAG,CAAC,EAAEe,QAAQ,CAAC;IACzD,CAAC,MAAM;MACL,IAAIrG,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC;MAChD5B,KAAK,CAACmH,GAAG,GAAG,CAAC7B,SAAS,EAAEA,SAAS,CAAC;MAElCtF,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;MACnC5B,KAAK,CAACY,QAAQ,GAAG,EAAE;MACnBZ,KAAK,CAACmH,GAAG,GAAG,CAAC7B,SAAS,EAAEA,SAAS,CAAC;MAClCtF,KAAK,CAACtB,OAAO,GAAGmF,KAAK,CAAC5D,GAAG,CAACN,KAAK,CAAC4E,KAAK,GAAGjH,IAAI,CAACqB,MAAM,EAAE+G,QAAQ,CAACnB,KAAK,CAAC;MAEpEV,KAAK,CAACjC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACxC;IAEA,IAAIqB,IAAI,CAAC8D,IAAI,EAAE;MACblD,KAAK,CAACjC,IAAI,CAAC,aAAa,EAAEkF,OAAO,EAAE,CAAC,CAAC,CAAC;IACxC;IAEA,IAAI7D,IAAI,CAACoE,KAAK,EAAE;MACdpE,IAAI,CAACoE,KAAK,CAACT,IAAI,CACb,IAAI,EACJ/C,KAAK,EACLqD,SAAS,EACTrD,KAAK,CAAC5D,GAAG,CAACN,KAAK,CAAC4E,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGmB,QAAQ,CAAC/G,MAAM,GAAG,CAAC,CACxD,CAAC;IACH;EACF;EAEAkF,KAAK,CAAC6C,UAAU,GAAGJ,SAAS;EAC5BzC,KAAK,CAAC8C,OAAO,GAAGJ,UAAU;EAC1B1C,KAAK,CAAC4B,IAAI,GAAGY,QAAQ,GAAG,CAAC;EAEzB,OAAO,IAAI;AACb;AAEO,SAASpJ,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5B,MAAMP,KAAK,GAAGO,EAAE,CAACT,KAAK,CAACC,MAAM,CAACC,KAAK;IAEnCA,KAAK,CAACzB,IAAI,CAAC,SAAS,EAAE;MACpBiB,GAAG,EAAE,SAAS;MACdkE,IAAI,EAAE;IACR,CAAC,CAAC;IAEF1D,KAAK,CAACzB,IAAI,CAAC,MAAM,EAAE;MACjBiB,GAAG,EAAE,MAAM;MACX3D,OAAOA,CAAC2E,KAAK,EAAEyD,OAAO,EAAE5I,OAAO,EAAE;QAC/B,IAAIsB,KAAK;QACTA,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;QACtC5B,KAAK,CAACtB,OAAO,GAAGA,OAAO;QACvB,OAAO,IAAI;MACb;IACF,CAAC,CAAC;IAEF2F,YAAY,GAAGT,EAAE,CAAC1F,KAAK,CAACmG,YAAY;IACpCT,EAAE,CAACT,KAAK,CAACE,KAAK,CAACgE,KAAK,CAClB,OAAO,EACP,QAAQ,EACR,CAACxD,KAAK,EAAEyB,SAAS,EAAEC,OAAO,EAAEa,MAAM,KAAK;MACrC,OAAOD,WAAW,CAACtC,KAAK,EAAEyB,SAAS,EAAEC,OAAO,EAAEa,MAAM,EAAExC,EAAE,CAAC;IAC3D,CAAC,EACD;MAAElD,GAAG,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM;IAAE,CAC1D,CAAC;EACH,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;ACpXgD;AAEhD,SAAS6G,cAAcA,CAAC1D,KAAK,EAAEuC,MAAM,EAAE/C,KAAK,EAAE;EAC5C,IAAImE,GAAG,GAAG3D,KAAK,CAAC2D,GAAG;;EAEnB;EACA,IAAIpB,MAAM,IAAIvC,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAAC8C,GAAG,CAAC,KAAK,EAAE,EAAE;IAC9C,OAAO,KAAK;EACd;EAEA,MAAMF,OAAO,GAAG1C,6DAAc,CAACf,KAAK,CAAC5D,GAAG,EAAEuH,GAAG,EAAE3D,KAAK,CAAC4D,MAAM,CAAC;EAE5D,IAAI,CAACH,OAAO,EAAE;IACZ,OAAO,KAAK;EACd;EAEA,IAAIrE,IAAI,EAAEjC,CAAC;EAEX,IAAIyF,QAAQ,GAAGpD,KAAK,CAACT,aAAa,CAAC0E,OAAO,CAACzE,GAAG,CAAC;EAC/C,IAAI,CAAC4D,QAAQ,EAAE;IACb,OAAO,KAAK;EACd;EACAxD,IAAI,GAAGwD,QAAQ,CAACxD,IAAI;EAEpB,IAAIA,IAAI,CAAC/D,OAAO,EAAE;IAChB;IACA;IACA,IAAIoI,OAAO,CAACrC,OAAO,EAAE;MACnB,OAAO,KAAK;IACd;IAEA,IAAIS,QAAQ,GAAG,IAAI,GAAG4B,OAAO,CAACzE,GAAG,GAAG,GAAG;IACvC,IAAI9D,KAAK,GAAG,KAAK;IAEjB,KACEiC,CAAC,GAAG6C,KAAK,CAAC2D,GAAG,GAAGF,OAAO,CAAC3I,MAAM,EAC9BqC,CAAC,IAAI6C,KAAK,CAAC4D,MAAM,GAAG/B,QAAQ,CAAC/G,MAAM,EACnCqC,CAAC,EAAE,EACH;MACA,IACE6C,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAAC8C,GAAG,CAAC,KAAK,EAAE,IAChC3D,KAAK,CAAC5D,GAAG,CAACN,KAAK,CAACqB,CAAC,EAAEA,CAAC,GAAG0E,QAAQ,CAAC/G,MAAM,CAAC,CAACiB,WAAW,CAAC,CAAC,KAAK8F,QAAQ,EAClE;QACA3G,KAAK,GAAG,IAAI;QACZ;MACF;IACF;IAEA,IAAI,CAACA,KAAK,EAAE;MACV,OAAO,KAAK;IACd;IAEA,IAAIL,OAAO,GAAGmF,KAAK,CAAC5D,GAAG,CAACN,KAAK,CAACkE,KAAK,CAAC2D,GAAG,GAAGF,OAAO,CAAC3I,MAAM,EAAEqC,CAAC,CAAC;IAE5D,IAAIiC,IAAI,CAAC/D,OAAO,CAAC2E,KAAK,EAAEyD,OAAO,EAAE5I,OAAO,CAAC,EAAE;MACzCmF,KAAK,CAAC2D,GAAG,GAAGxG,CAAC,GAAG0E,QAAQ,CAAC/G,MAAM;MAC/B,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF,CAAC,MAAM;IACL2I,OAAO,CAACrE,IAAI,GAAGA,IAAI;IAEnB,IAAIqE,OAAO,CAACrC,OAAO,IAAIpB,KAAK,CAACrF,MAAM,CAACkJ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEC,IAAI,KAAK,QAAQ,EAAE;MAC7D9D,KAAK,CAACjC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IAC3B;IAEA,IAAI5B,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IACrC5B,KAAK,CAACtB,OAAO,GAAGmF,KAAK,CAAC5D,GAAG,CAACN,KAAK,CAAC6H,GAAG,EAAEA,GAAG,GAAGF,OAAO,CAAC3I,MAAM,CAAC;IAC1DqB,KAAK,CAAC2H,IAAI,GAAG,QAAQ;IAErB9D,KAAK,CAAC+D,UAAU,CAAChG,IAAI,CAAC;MACpBiG,MAAM,EAAEP,OAAO;MACfQ,MAAM,EAAE,IAAI,GAAGR,OAAO,CAACzE,GAAG;MAC1BkF,IAAI,EAAE,CAACT,OAAO,CAACrC,OAAO;MACtB+C,KAAK,EAAE,CAAC,CAACV,OAAO,CAACrC,OAAO;MACxBjF,KAAK,EAAE6D,KAAK,CAACrF,MAAM,CAACG,MAAM,GAAG,CAAC;MAC9BqI,KAAK,EAAEnD,KAAK,CAACmD,KAAK;MAClBiB,GAAG,EAAE,CAAC;IACR,CAAC,CAAC;IAEFpE,KAAK,CAAC2D,GAAG,GAAGA,GAAG,GAAGF,OAAO,CAAC3I,MAAM;IAChC,OAAO,IAAI;EACb;AACF;AAEA,SAASuJ,aAAaA,CAACrE,KAAK,EAAEuC,MAAM,EAAE;EACpC,IAAIpF,CAAC;IACHmH,UAAU;IACVC,QAAQ;IACRd,OAAO;IACPM,UAAU,GAAG/D,KAAK,CAAC+D,UAAU;IAC7BpD,GAAG,GAAGoD,UAAU,CAACjJ,MAAM;EAEzB,IAAIyH,MAAM,EAAE;IACV;EACF;EAEA,KAAKpF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwD,GAAG,GAAG,CAAC,EAAExD,CAAC,EAAE,EAAE;IAC5BmH,UAAU,GAAGP,UAAU,CAAC5G,CAAC,CAAC;IAC1BsG,OAAO,GAAGa,UAAU,CAACN,MAAM;IAE3B,IAAI,CAACP,OAAO,EAAE;MACZ;IACF;IAEA,IAAIa,UAAU,CAACF,GAAG,KAAK,CAAC,CAAC,EAAE;MACzB;IACF;IAEAG,QAAQ,GAAGR,UAAU,CAACO,UAAU,CAACF,GAAG,CAAC;IAErC,IAAIpF,GAAG,EAAEoE,SAAS;IAElB,MAAMoB,UAAU,GAAGxE,KAAK,CAACrF,MAAM,CAAC2J,UAAU,CAACnI,KAAK,CAAC;IACjD,MAAMsI,QAAQ,GAAGzE,KAAK,CAACrF,MAAM,CAAC4J,QAAQ,CAACpI,KAAK,CAAC;IAE7C,IAAI,OAAOsH,OAAO,CAACrE,IAAI,CAAC8D,IAAI,KAAK,UAAU,EAAE;MAC3C,IAAIrI,OAAO,GAAG,EAAE;MAChB,KAAK,IAAIwH,CAAC,GAAGiC,UAAU,CAACnI,KAAK,GAAG,CAAC,EAAEkG,CAAC,GAAGkC,QAAQ,CAACpI,KAAK,EAAEkG,CAAC,EAAE,EAAE;QAC1D,IAAIqC,KAAK,GAAG1E,KAAK,CAACrF,MAAM,CAAC0H,CAAC,CAAC;QAC3B,IAAIqC,KAAK,CAACvE,IAAI,KAAK,MAAM,IAAIuE,KAAK,CAACZ,IAAI,KAAK,QAAQ,EAAE;UACpDjJ,OAAO,IAAI6J,KAAK,CAAC7J,OAAO;QAC1B;MACF;MACA4I,OAAO,CAACrE,IAAI,CAAC8D,IAAI,CAACsB,UAAU,EAAEC,QAAQ,EAAEhB,OAAO,EAAE5I,OAAO,EAAEmF,KAAK,CAAC;MAChE;IACF,CAAC,MAAM;MACL,IAAIhI,KAAK,GAAGyL,OAAO,CAACrE,IAAI,CAAC8D,IAAI,CAAClL,KAAK,CAAC,GAAG,CAAC;MACxCgH,GAAG,GAAGhH,KAAK,CAAC,CAAC,CAAC;MACdoL,SAAS,GAAGpL,KAAK,CAAC8D,KAAK,CAAC,CAAC,CAAC,CAACmC,IAAI,CAAC,GAAG,CAAC;IACtC;IAEAuG,UAAU,CAACrE,IAAI,GAAG,SAAS,GAAGsD,OAAO,CAACzE,GAAG,GAAG,OAAO;IACnDwF,UAAU,CAACxF,GAAG,GAAGA,GAAG;IACpB,IAAIoE,SAAS,EAAE;MACboB,UAAU,CAAC1G,KAAK,GAAG,CAAC,CAAC,OAAO,EAAEsF,SAAS,CAAC,CAAC;IAC3C;IACAoB,UAAU,CAAC7C,OAAO,GAAG,CAAC;IACtB6C,UAAU,CAACG,MAAM,GAAGH,UAAU,CAAC3J,OAAO;IACtC2J,UAAU,CAAC3J,OAAO,GAAG,EAAE;IAEvB4J,QAAQ,CAACtE,IAAI,GAAG,SAAS,GAAGsD,OAAO,CAACzE,GAAG,GAAG,QAAQ;IAClDyF,QAAQ,CAACzF,GAAG,GAAGA,GAAG;IAClByF,QAAQ,CAAC9C,OAAO,GAAG,CAAC,CAAC;IACrB8C,QAAQ,CAACE,MAAM,GAAGH,UAAU,CAAC3J,OAAO;IACpC4J,QAAQ,CAAC5J,OAAO,GAAG,EAAE;EACvB;EACA,OAAO,KAAK;AACd;AAEO,SAASzB,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACgF,SAAS,CAAC,CACf,eAAe,EACf,eAAe,EACf,eAAe,EACf,eAAe,CAChB,CAAC;EAEFhF,MAAM,CAACiF,eAAe,CAAEC,IAAI,IAAK;IAC/BA,IAAI,CAAChM,QAAQ,CAAC,eAAe,CAAC,GAAG,IAAI;EACvC,CAAC,CAAC;EAEF8G,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5B,MAAMP,KAAK,GAAGO,EAAE,CAACN,MAAM,CAACF,MAAM,CAACC,KAAK;IAEpCO,EAAE,CAACN,MAAM,CAACD,KAAK,CAACzB,IAAI,CAAC,eAAe,EAAE,CAACiC,KAAK,EAAEuC,MAAM,KAClDmB,cAAc,CAAC1D,KAAK,EAAEuC,MAAM,EAAE/C,KAAK,CACrC,CAAC;IACDO,EAAE,CAACN,MAAM,CAACsF,MAAM,CAAC/B,MAAM,CAAC,gBAAgB,EAAE,eAAe,EAAEqB,aAAa,CAAC;IAEzE7E,KAAK,CAACzB,IAAI,CAAC,MAAM,EAAE;MACjBiB,GAAG,EAAE,MAAM;MACX3D,OAAOA,CAAC2E,KAAK,EAAEyD,OAAO,EAAE5I,OAAO,EAAE;QAC/B,IAAIsB,KAAK;QACTA,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,CAAC,CAAC;QAC5C5B,KAAK,CAACtB,OAAO,GAAGA,OAAO;QACvB,OAAO,IAAI;MACb;IACF,CAAC,CAAC;IAEF,MAAMmK,cAAc,GAAG,cAAc;IACrCxF,KAAK,CAACzB,IAAI,CAAC,KAAK,EAAE;MAChBiB,GAAG,EAAE,KAAK;MAEV3D,OAAOA,CAAC2E,KAAK,EAAEyD,OAAO,EAAE5I,OAAO,EAAE;QAC/B,IAAIsB,KAAK;;QAET;QACA;QACA,IAAIxB,MAAM,GAAG,EAAE;QACfoF,EAAE,CAACN,MAAM,CAACwF,KAAK,CAACpK,OAAO,EAAEmF,KAAK,CAACD,EAAE,EAAEC,KAAK,CAACrD,GAAG,EAAEhC,MAAM,CAAC;QAErD,IAAIuK,GAAG,GAAGzB,OAAO,CAAC3F,KAAK,CAAC,UAAU,CAAC;QAEnC,IAAI,CAACoH,GAAG,EAAE;UACR;UACA,KAAK,IAAI/H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxC,MAAM,CAACG,MAAM,EAAEqC,CAAC,EAAE,EAAE;YACtChB,KAAK,GAAGxB,MAAM,CAACwC,CAAC,CAAC;YACjB;YACA,IAAIhB,KAAK,CAACgE,IAAI,KAAK,WAAW,EAAE;cAC9B,KAAK,IAAIkC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlG,KAAK,CAAC2B,KAAK,CAAChD,MAAM,EAAEuH,CAAC,EAAE,EAAE;gBAC3C,IAAIlG,KAAK,CAAC2B,KAAK,CAACuE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;kBAChC6C,GAAG,GAAG/I,KAAK,CAAC2B,KAAK,CAACuE,CAAC,CAAC,CAAC,CAAC,CAAC;kBACvB;gBACF;cACF;cACA,IAAI6C,GAAG,EAAE;gBACP;cACF;YACF;YACA,IAAI/I,KAAK,CAACgE,IAAI,KAAK,MAAM,EAAE;cACzB+E,GAAG,GAAG/I,KAAK,CAACtB,OAAO;cACnB;YACF;UACF;QACF;QAEA,IAAIkF,EAAE,CAAC5H,OAAO,EAAE;UACd,IAAIiF,KAAK,GAAG,IAAI;;UAEhB;UACA;UACA,IAAI8H,GAAG,IAAI,CAACA,GAAG,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC7B/H,KAAK,GAAG2C,EAAE,CAAC5H,OAAO,CAACiN,YAAY,CAACF,GAAG,CAAC;YACpC,IAAI,CAAC9H,KAAK,EAAE;cACVA,KAAK,GAAG2C,EAAE,CAAC5H,OAAO,CAACiN,YAAY,CAAC,UAAU,GAAGF,GAAG,CAAC;YACnD;UACF;UAEA,IAAI9H,KAAK,EAAE;YACT8H,GAAG,GAAG9H,KAAK,CAAC8H,GAAG;UACjB,CAAC,MAAM;YACLA,GAAG,GAAG,IAAI;UACZ;QACF,CAAC,MAAM,IAAI,CAACA,GAAG,CAAC9H,KAAK,CAAC4H,cAAc,CAAC,EAAE;UACrCE,GAAG,GAAG,UAAU,GAAGA,GAAG;QACxB;QAEA,IAAIA,GAAG,EAAE;UACP/I,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;UACvC5B,KAAK,CAAC2B,KAAK,GAAG,CAAC,MAAM,EAAEoH,GAAG,CAAC;UAC3B/I,KAAK,CAAC2B,KAAK,GAAG,CACZ,CAAC,MAAM,EAAEoH,GAAG,CAAC,EACb,CAAC,aAAa,EAAE,MAAM,CAAC,CACxB;UACD/I,KAAK,CAACtB,OAAO,GAAG,EAAE;UAClBsB,KAAK,CAACwF,OAAO,GAAG,CAAC;QACnB;QAEA,KAAK,IAAIxE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxC,MAAM,CAACG,MAAM,EAAEqC,CAAC,EAAE,EAAE;UACtChB,KAAK,GAAGxB,MAAM,CAACwC,CAAC,CAAC;UACjB,IAAIhB,KAAK,CAACgE,IAAI,KAAK,WAAW,IAAIhE,KAAK,CAACgE,IAAI,KAAK,YAAY,EAAE;YAC7D;UAAA,CACD,MAAM;YACLH,KAAK,CAACrF,MAAM,CAACoD,IAAI,CAAC5B,KAAK,CAAC;UAC1B;QACF;QAEA,IAAI+I,GAAG,EAAE;UACP/I,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC;UACxC5B,KAAK,CAACwF,OAAO,GAAG,CAAC,CAAC;UAClBxF,KAAK,CAACtB,OAAO,GAAG,EAAE;QACpB;QAEA,OAAO,IAAI;MACb;IACF,CAAC,CAAC;IAEF2E,KAAK,CAACzB,IAAI,CAAC,OAAO,EAAE;MAClBiB,GAAG,EAAE,OAAO;MACZ3D,OAAOA,CAAC2E,KAAK,EAAEyD,OAAO,EAAE5I,OAAO,EAAE;QAC/B,IAAIsB,KAAK;QACT,MAAMkJ,KAAK,GAAG5B,OAAO,CAAC3F,KAAK,CAAC,UAAU,CAAC,IAAIjD,OAAO;QAElDsB,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;QACvC5B,KAAK,CAAC2B,KAAK,GAAG,CACZ,CAAC,MAAM,EAAE,SAAS,GAAGuH,KAAK,CAAC,EAC3B,CAAC,aAAa,EAAE,MAAM,CAAC,CACxB;QAEDlJ,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;QACjC5B,KAAK,CAACtB,OAAO,GAAGA,OAAO;QAEvBmF,KAAK,CAACjC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACjC,OAAO,IAAI;MACb;IACF,CAAC,CAAC;IAEFyB,KAAK,CAACzB,IAAI,CAAC,OAAO,EAAE;MAClBiB,GAAG,EAAE,KAAK;MACV3D,OAAOA,CAAC2E,KAAK,EAAEyD,OAAO,EAAE5I,OAAO,EAAE;QAC/B,IAAIsB,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACzC5B,KAAK,CAAC2B,KAAK,GAAG,CACZ,CAAC,KAAK,EAAEjD,OAAO,CAAC,EAChB,CAAC,KAAK,EAAE,EAAE,CAAC,CACZ;QACDsB,KAAK,CAACY,QAAQ,GAAG,EAAE;QACnB,OAAO,IAAI;MACb;IACF,CAAC,CAAC;IAEFyC,KAAK,CAACzB,IAAI,CAAC,MAAM,EAAE;MACjBiB,GAAG,EAAE,GAAG;MACRkE,IAAI,EAAE;IACR,CAAC,CAAC;IAEF1D,KAAK,CAACzB,IAAI,CAAC,QAAQ,EAAE;MACnBiB,GAAG,EAAE,GAAG;MACRkE,IAAI,EAAE;IACR,CAAC,CAAC;IAEF1D,KAAK,CAACzB,IAAI,CAAC,WAAW,EAAE;MACtBiB,GAAG,EAAE,GAAG;MACRkE,IAAI,EAAE;IACR,CAAC,CAAC;IAEF1D,KAAK,CAACzB,IAAI,CAAC,QAAQ,EAAE;MACnBiB,GAAG,EAAE,GAAG;MACRkE,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;AClUsD;AAEtD,SAASqC,OAAOA,CAAC5K,MAAM,EAAE6K,KAAK,EAAE;EAC9B,IAAIrI,CAAC;EACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxC,MAAM,CAACG,MAAM,EAAEqC,CAAC,EAAE,EAAE;IAClC,IAAIxC,MAAM,CAACwC,CAAC,CAAC,CAACgD,IAAI,KAAK,UAAU,IAAIxF,MAAM,CAACwC,CAAC,CAAC,CAACsI,MAAM,EAAE;MACrD;IACF;IAEAD,KAAK,CAAC7K,MAAM,CAACwC,CAAC,CAAC,CAAC;IAChB,IAAIxC,MAAM,CAACwC,CAAC,CAAC,CAACJ,QAAQ,EAAE;MACtBwI,OAAO,CAAC5K,MAAM,CAACwC,CAAC,CAAC,CAACJ,QAAQ,EAAEyI,KAAK,CAAC;IACpC;EACF;AACF;AAEA,SAASE,UAAUA,CAAC1F,KAAK,EAAE2F,MAAM,EAAE;EACjC,IAAI,CAAC3F,KAAK,CAACrF,MAAM,EAAE;IACjB;EACF;EAEA4K,OAAO,CAACvF,KAAK,CAACrF,MAAM,EAAGwB,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACtB,OAAO,EAAE;MACjBsB,KAAK,CAACtB,OAAO,GAAG8K,MAAM,CAACxJ,KAAK,CAACtB,OAAO,CAAC;IACvC;EACF,CAAC,CAAC;AACJ;AAEO,SAASzB,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5B,MAAM6F,eAAe,GAAG7F,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACgO,cAAc;IAE3D,IAAIC,KAAK,CAACC,OAAO,CAACH,eAAe,CAAC,IAAIA,eAAe,CAAC9K,MAAM,GAAG,CAAC,EAAE;MAChE,MAAMkL,WAAW,GAAGC,MAAM,CAACC,YAAY,CAAC,IAAI,CAAC;MAC7C,MAAMP,MAAM,GAAGL,oEAAQ,CAACM,eAAe,EAAEI,WAAW,CAAC;MACrDjG,EAAE,CAACL,IAAI,CAACF,KAAK,CAACzB,IAAI,CAAC,UAAU,EAAGiC,KAAK,IAAK0F,UAAU,CAAC1F,KAAK,EAAE2F,MAAM,CAAC,CAAC;IACtE;EACF,CAAC,CAAC;AACJ;;;;;;;;;;;;;;ACtCA;AACA;AACA,MAAMQ,iBAAiB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC;AAElD,SAASC,gBAAgBA,CAAC3M,IAAI,EAAEsG,EAAE,EAAE;EAClC,IAAI,CAACtG,IAAI,EAAE;IACT;EACF;EAEAA,IAAI,GAAGA,IAAI,CAACS,IAAI,CAAC,CAAC;EAElB,MAAMmM,OAAO,GAAG5M,IAAI,CAAC2D,KAAK,CAAC,mBAAmB,CAAC;EAC/C,IAAI,CAACiJ,OAAO,EAAE;IACZ;EACF;;EAEA;EACA;EACA,IAAI,CAAC,YAAY,CAACrK,IAAI,CAACqK,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;IAClC;EACF;EAEA,MAAMC,WAAW,GAAG,cAAc;EAClC,MAAMtH,GAAG,GAAGe,EAAE,CAAC1F,KAAK,CAACkM,WAAW,CAACF,OAAO,CAAC,CAAC,CAAC,CAAChL,OAAO,CAACiL,WAAW,EAAE,EAAE,CAAC,CAAC;EACrE,MAAME,aAAa,GAAG;IAAExH,GAAG;IAAEyH,UAAU,EAAE,CAAC;EAAE,CAAC;EAE7C,IAAIJ,OAAO,CAAC,CAAC,CAAC,EAAEvL,MAAM,EAAE;IACtBiF,EAAE,CAAC1F,KAAK,CACLkM,WAAW,CAACF,OAAO,CAAC,CAAC,CAAC,CAAChL,OAAO,CAACiL,WAAW,EAAE,EAAE,CAAC,CAAC,CAChDtO,KAAK,CAAC,GAAG,CAAC,CACVwB,OAAO,CAAEkN,aAAa,IAAK;MAC1B,MAAM,CAACtL,GAAG,EAAEa,KAAK,CAAC,GAAGyK,aAAa,CAACxM,IAAI,CAAC,CAAC,CAAClC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC;;MAErE;MACA,IAAIoD,GAAG,IAAIa,KAAK,EAAE;QAChBuK,aAAa,CAACC,UAAU,CAACrL,GAAG,CAAC,GAAGa,KAAK;MACvC;IACF,CAAC,CAAC;EACN;EAEA,OAAOuK,aAAa;AACtB;AAEA,SAASxM,MAAMA,CAACW,MAAM,EAAEC,GAAG,EAAErD,OAAO,EAAEoF,GAAG,EAAEC,GAAG,EAAEmD,EAAE,EAAE;EAClD,MAAM5D,KAAK,GAAGxB,MAAM,CAACC,GAAG,CAAC;EACzB,MAAM+L,cAAc,GAAG5G,EAAE,CAAC1F,KAAK,CAACuM,UAAU,CAACzK,KAAK,CAACtB,OAAO,CAAC;EACzD,MAAMgM,SAAS,GAAGT,gBAAgB,CAACjK,KAAK,CAAC1C,IAAI,EAAEsG,EAAE,CAAC;EAClD,MAAMf,GAAG,GAAG6H,SAAS,EAAE7H,GAAG,IAAIe,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACiP,eAAe;EAClE,MAAML,UAAU,GAAGI,SAAS,EAAEJ,UAAU,IAAI,CAAC,CAAC;EAE9C,IAAIrD,SAAS;EAEb,IAAI+C,iBAAiB,CAAChB,QAAQ,CAACnG,GAAG,CAAC,EAAE;IACnCoE,SAAS,GAAG,gBAAgB;EAC9B,CAAC,MAAM,IAAIpE,GAAG,KAAK,MAAM,EAAE;IACzBoE,SAAS,GAAG,WAAW;EACzB,CAAC,MAAM;IACLA,SAAS,GAAI,QAAOrD,EAAE,CAAC1F,KAAK,CAACuM,UAAU,CAAC5H,GAAG,CAAE,EAAC;IAC9CyH,UAAU,CAAC,MAAM,CAAC,GAAGzH,GAAG;EAC1B;EAEA,MAAM+H,cAAc,GAAG9L,MAAM,CAACD,IAAI,CAACyL,UAAU,CAAC,CAC3CnD,GAAG,CAAElI,GAAG,IAAK;IACZ,MAAMa,KAAK,GAAG8D,EAAE,CAAC1F,KAAK,CAACuM,UAAU,CAACH,UAAU,CAACrL,GAAG,CAAC,CAAC;IAClDA,GAAG,GAAG2E,EAAE,CAAC1F,KAAK,CAACuM,UAAU,CAACxL,GAAG,CAAC;IAC9B,OAAQ,aAAYA,GAAI,KAAIa,KAAM,GAAE;EACtC,CAAC,CAAC,CACDgC,IAAI,CAAC,GAAG,CAAC;EAEZ,OAAQ,OAAM8I,cAAc,GAAI,IAAGA,cAAe,EAAC,GAAG,EAAG,SACvD3D,SAAS,GAAI,WAAUA,SAAU,GAAE,GAAG,EACvC,IAAGuD,cAAe,iBAAgB;AACrC;AAEO,SAASvN,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACiF,eAAe,CAAC,CAACC,IAAI,EAAEkC,YAAY,KAAK;IAC7ClC,IAAI,CAACgC,eAAe,GAAGE,YAAY,CAACC,iBAAiB;EACvD,CAAC,CAAC;EAEFrH,MAAM,CAACgF,SAAS,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAEtChF,MAAM,CAACgF,SAAS,CAAC;IACfsC,MAAMA,CAAClI,GAAG,EAAEK,IAAI,EAAEpD,KAAK,EAAE;MACvB,IAAI+C,GAAG,KAAK,MAAM,IAAIK,IAAI,KAAK,OAAO,EAAE;QACtC,OAAO,YAAY,CAACrD,IAAI,CAACC,KAAK,CAAC;MACjC;IACF;EACF,CAAC,CAAC;EAEF2D,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACxE,QAAQ,CAACC,KAAK,CAAC2L,KAAK,GAAG,CAACxM,MAAM,EAAEC,GAAG,EAAErD,OAAO,EAAEoF,GAAG,EAAEC,GAAG,KACvD5C,MAAM,CAACW,MAAM,EAAEC,GAAG,EAAErD,OAAO,EAAEoF,GAAG,EAAEC,GAAG,EAAEmD,EAAE,CAAC;EAC9C,CAAC,CAAC;AACJ;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIqH,OAAO,GAAG,qDAAqD;AAEnE,IAAIC,cAAc,GAAG,eAAe;AACpC,IAAIC,WAAW,GAAG;EAChBC,EAAE,EAAE,GAAG;EACPC,EAAE,EAAE;AACN,CAAC;AAED,SAASC,SAASA,CAACrK,KAAK,EAAEiC,IAAI,EAAE;EAC9B,OAAOiI,WAAW,CAACjI,IAAI,CAACtD,WAAW,CAAC,CAAC,CAAC;AACxC;AAEA,SAAS2L,aAAaA,CAACC,YAAY,EAAE;EACnC,IAAIxK,CAAC,EAAEhB,KAAK;EAEZ,KAAKgB,CAAC,GAAGwK,YAAY,CAAC7M,MAAM,GAAG,CAAC,EAAEqC,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC7ChB,KAAK,GAAGwL,YAAY,CAACxK,CAAC,CAAC;IACvB,IAAIhB,KAAK,CAACgE,IAAI,KAAK,MAAM,EAAE;MACzBhE,KAAK,CAACtB,OAAO,GAAGsB,KAAK,CAACtB,OAAO,CAACQ,OAAO,CAACgM,cAAc,EAAEI,SAAS,CAAC;IAClE;EACF;AACF;AAEA,SAASG,WAAWA,CAACD,YAAY,EAAE;EACjC,IAAIxK,CAAC;IACHhB,KAAK;IACL0L,eAAe,GAAG,CAAC;EAErB,KAAK1K,CAAC,GAAGwK,YAAY,CAAC7M,MAAM,GAAG,CAAC,EAAEqC,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC7ChB,KAAK,GAAGwL,YAAY,CAACxK,CAAC,CAAC;IAEvB,IAAIhB,KAAK,CAACgE,IAAI,KAAK,MAAM,IAAI,CAAC0H,eAAe,EAAE;MAC7C,IAAIT,OAAO,CAACpL,IAAI,CAACG,KAAK,CAACtB,OAAO,CAAC,EAAE;QAC/BsB,KAAK,CAACtB,OAAO,GAAGsB,KAAK,CAACtB,OAAO,CAC1BQ,OAAO,CAAC,MAAM,EAAE,GAAG;QACpB;QAAA,CACCA,OAAO,CAAC,uBAAuB,EAAE,oBAAoB,CAAC,CACtDA,OAAO,CAAC,uBAAuB,EAAE,oBAAoB,CAAC,CACtDA,OAAO,CAAC,wBAAwB,EAAE,oBAAoB;QACvD;QACA;QAAA,CACCA,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CACvBA,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAC3BA,OAAO,CAAC,aAAa,EAAE,QAAQ,CAAC,CAChCA,OAAO,CAAC,QAAQ,EAAE,GAAG;QACtB;QAAA,CACCA,OAAO,CAAC,yBAAyB,EAAE,UAAU;QAC9C;QAAA,CACCA,OAAO,CAAC,oBAAoB,EAAE,UAAU,CAAC,CACzCA,OAAO,CAAC,4BAA4B,EAAE,UAAU,CAAC;MACtD;IACF;IAEA,IAAIc,KAAK,CAACgE,IAAI,KAAK,WAAW,IAAIhE,KAAK,CAAC1C,IAAI,KAAK,MAAM,EAAE;MACvDoO,eAAe,EAAE;IACnB;IAEA,IAAI1L,KAAK,CAACgE,IAAI,KAAK,YAAY,IAAIhE,KAAK,CAAC1C,IAAI,KAAK,MAAM,EAAE;MACxDoO,eAAe,EAAE;IACnB;EACF;AACF;AAEA,SAASxM,OAAOA,CAAC2E,KAAK,EAAE;EACtB,IAAI8H,MAAM;EAEV,KAAKA,MAAM,GAAG9H,KAAK,CAACrF,MAAM,CAACG,MAAM,GAAG,CAAC,EAAEgN,MAAM,IAAI,CAAC,EAAEA,MAAM,EAAE,EAAE;IAC5D,IAAI9H,KAAK,CAACrF,MAAM,CAACmN,MAAM,CAAC,CAAC3H,IAAI,KAAK,QAAQ,EAAE;MAC1C;IACF;IAEA,IAAIkH,cAAc,CAACrL,IAAI,CAACgE,KAAK,CAACrF,MAAM,CAACmN,MAAM,CAAC,CAACjN,OAAO,CAAC,EAAE;MACrD6M,aAAa,CAAC1H,KAAK,CAACrF,MAAM,CAACmN,MAAM,CAAC,CAAC/K,QAAQ,CAAC;IAC9C;IAEA,IAAIqK,OAAO,CAACpL,IAAI,CAACgE,KAAK,CAACrF,MAAM,CAACmN,MAAM,CAAC,CAACjN,OAAO,CAAC,EAAE;MAC9C+M,WAAW,CAAC5H,KAAK,CAACrF,MAAM,CAACmN,MAAM,CAAC,CAAC/K,QAAQ,CAAC;IAC5C;EACF;AACF;AAEO,SAAS3D,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5B,IAAIA,EAAE,CAACxI,OAAO,CAACwQ,WAAW,EAAE;MAC1BhI,EAAE,CAACL,IAAI,CAACF,KAAK,CAACqE,EAAE,CAAC,cAAc,EAAExI,OAAO,CAAC;IAC3C;EACF,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;ACvGgD;AAEhD,MAAM2M,UAAU,GAAG,QAAQ;AAE3B,SAASC,eAAeA,CAACxE,OAAO,EAAE;EAChC,MAAMgD,UAAU,GAAGhD,OAAO,CAAC3F,KAAK,CAACoK,QAAQ,IAAI,EAAE;EAE/C,OACEnH,6DAAc,CAAE,cAAa0F,UAAW,GAAE,EAAE,CAAC,EAAEA,UAAU,CAAC3L,MAAM,GAAG,EAAE,CAAC,CACnEgD,KAAK,IAAI,CAAC,CAAC;AAElB;AAEA,SAASqK,eAAeA,CAACxM,GAAG,EAAE;EAC5B,OAAOA,GAAG,CAACN,OAAO,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAACU,WAAW,CAAC,CAAC;AACjE;AAEA,SAASqM,mBAAmBA,CAACjM,KAAK,EAAE6D,KAAK,EAAEyG,UAAU,EAAE;EACrDxL,MAAM,CAACD,IAAI,CAACyL,UAAU,CAAC,CAACjN,OAAO,CAAEwF,GAAG,IAAK;IACvC,MAAM/C,KAAK,GAAG+D,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAACuM,UAAU,CAACH,UAAU,CAACzH,GAAG,CAAC,CAAC;IACxDA,GAAG,GAAGmJ,eAAe,CACnBnI,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAACuM,UAAU,CAAC5H,GAAG,CAAC3D,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAC9D,CAAC;IAED,IAAIY,KAAK,IAAI+C,GAAG,IAAIA,GAAG,CAAClE,MAAM,GAAG,CAAC,EAAE;MAClCqB,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAE,QAAOiB,GAAI,EAAC,EAAE/C,KAAK,CAAC,CAAC;IAC1C;EACF,CAAC,CAAC;AACJ;AAEA,MAAMoM,SAAS,GAAG;EAChBrJ,GAAG,EAAE,MAAM;EAEXgE,MAAMA,CAAChD,KAAK,EAAEyD,OAAO,EAAE;IACrB,IAAItH,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;IAC7C5B,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,OAAO,EAAEkK,UAAU,CAAC,CAAC;IAErCI,mBAAmB,CAACjM,KAAK,EAAE6D,KAAK,EAAEiI,eAAe,CAACxE,OAAO,CAAC,CAAC;EAC7D,CAAC;EAEDD,KAAKA,CAACxD,KAAK,EAAE;IACXA,KAAK,CAACjC,IAAI,CAAC,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;EACrC;AACF,CAAC;AAED,MAAMuK,UAAU,GAAG;EACjBtJ,GAAG,EAAE,MAAM;EAEX3D,OAAOA,CAAC2E,KAAK,EAAEyD,OAAO,EAAE5I,OAAO,EAAE;IAC/B,IAAIsB,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9C5B,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,OAAO,EAAEkK,UAAU,CAAC,CAAC;IAErCI,mBAAmB,CAACjM,KAAK,EAAE6D,KAAK,EAAEiI,eAAe,CAACxE,OAAO,CAAC,CAAC;IAE3D,IAAI5I,OAAO,EAAE;MACXsB,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;MACjC5B,KAAK,CAACtB,OAAO,GAAGA,OAAO;IACzB;IAEAmF,KAAK,CAACjC,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IACpC,OAAO,IAAI;EACb;AACF,CAAC;AAEM,SAAS3E,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACN,MAAM,CAACF,MAAM,CAACC,KAAK,CAACzB,IAAI,CAAC,aAAa,EAAEuK,UAAU,CAAC;IACtDvI,EAAE,CAACT,KAAK,CAACC,MAAM,CAACC,KAAK,CAACzB,IAAI,CAAC,YAAY,EAAEsK,SAAS,CAAC;EACrD,CAAC,CAAC;EAEFzI,MAAM,CAACgF,SAAS,CAAC,CAAE,OAAMoD,UAAW,EAAC,EAAG,QAAOA,UAAW,EAAC,EAAE,cAAc,CAAC,CAAC;AAC/E;;;;;;;;;;;;;;;;;ACvEiE;AACX;AAEtD,MAAMU,eAAe,GAAG,EAAE;AAE1B,IAAIC,eAAe,GAAG,IAAI;AAEnB,SAASC,oBAAoBA,CAAA,EAAG;EACrCD,eAAe,GAAG,IAAI;AACxB;;AAEA;AACA;AACA;AACA;AACA,SAASE,oBAAoBA,CAACC,sBAAsB,EAAE;EACpD,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,QAAQ;EAEZ,MAAMC,eAAe,GAAGhO,MAAM,CAACiO,MAAM,CACnC,CAAC,CAAC,EACFT,gEAAY,EACZK,sBAAsB,IAAI,CAAC,CAC7B,CAAC;EAED7N,MAAM,CAACD,IAAI,CAACiO,eAAe,CAAC,CAACzP,OAAO,CAAE4B,GAAG,IAAK;IAC5C,IAAI+N,IAAI,GAAGJ,IAAI;IAEf,KAAK,IAAI5L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG/B,GAAG,CAACN,MAAM,EAAEqC,CAAC,EAAE,EAAE;MACnC,IAAIyD,IAAI,GAAGxF,GAAG,CAACyF,UAAU,CAAC1D,CAAC,CAAC;MAC5B,IAAIjC,KAAK,GAAG,KAAK;MAEjB,KAAK,IAAImH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8G,IAAI,CAACrO,MAAM,EAAEuH,CAAC,EAAE,EAAE;QACpC,IAAI8G,IAAI,CAAC9G,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKzB,IAAI,EAAE;UACvBuI,IAAI,GAAGA,IAAI,CAAC9G,CAAC,CAAC,CAAC,CAAC,CAAC;UACjBnH,KAAK,GAAG,IAAI;UACZ;QACF;MACF;MAEA,IAAI,CAACA,KAAK,EAAE;QACV;QACA,IAAIkO,GAAG,GAAG,CAACxI,IAAI,EAAE,EAAE,CAAC;QACpBuI,IAAI,CAACpL,IAAI,CAACqL,GAAG,CAAC;QACdJ,QAAQ,GAAGI,GAAG;QACdD,IAAI,GAAGC,GAAG,CAAC,CAAC,CAAC;MACf;IACF;IAEAJ,QAAQ,CAAC,CAAC,CAAC,GAAGC,eAAe,CAAC7N,GAAG,CAAC;EACpC,CAAC,CAAC;EAEF,OAAO2N,IAAI;AACb;AAEA,SAASM,QAAQA,CAACzI,IAAI,EAAEkE,IAAI,EAAE;EAC5BlE,IAAI,GAAGA,IAAI,CAAC7E,WAAW,CAAC,CAAC;EACzB,MAAMmJ,GAAG,GAAGqD,gEAAa,CAAC3H,IAAI,EAAEkE,IAAI,CAAC;EACrC,IAAII,GAAG,EAAE;IACP,MAAMoE,KAAK,GAAI,IAAG1I,IAAK,GAAE;IACzB,MAAM2I,OAAO,GAAGf,gEAAa,CAAC5H,IAAI,EAAEkE,IAAI,CAAC,GAAG,oBAAoB,GAAG,OAAO;IAC1E,OAAO;MAAEI,GAAG;MAAEoE,KAAK;MAAEC;IAAQ,CAAC;EAChC;AACF;AAEA,SAASC,YAAYA,CAAC3O,OAAO,EAAE8I,GAAG,EAAE3D,KAAK,EAAEyJ,WAAW,EAAE;EACtD,IAAI5O,OAAO,CAACgG,UAAU,CAAC8C,GAAG,CAAC,KAAK,EAAE,EAAE;IAClC;EACF;EAEA,IAAIA,GAAG,GAAG,CAAC,EAAE;IACX,IAAI+F,IAAI,GAAG7O,OAAO,CAACgG,UAAU,CAAC8C,GAAG,GAAG,CAAC,CAAC;IACtC,IACE,CAAC8F,WAAW,IACZ,CAACzJ,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAACsP,OAAO,CAACD,IAAI,CAAC,IAC7B,CAAC1J,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAACuP,WAAW,CAAC3D,MAAM,CAACC,YAAY,CAACwD,IAAI,CAAC,CAAC,EACtD;MACA;IACF;EACF;EAEA/F,GAAG,EAAE;EACL,IAAI9I,OAAO,CAACgG,UAAU,CAAC8C,GAAG,CAAC,KAAK,EAAE,EAAE;IAClC;EACF;EAEA,IAAI7I,MAAM,GAAG,CAAC;EACd,OAAOA,MAAM,GAAG4N,eAAe,EAAE;IAC/B5N,MAAM,EAAE;IAER,IAAID,OAAO,CAACgG,UAAU,CAAC8C,GAAG,GAAG7I,MAAM,CAAC,KAAK,EAAE,EAAE;MAC3C;MACA,IAAID,OAAO,CAACiB,KAAK,CAAC6H,GAAG,GAAG7I,MAAM,GAAG,CAAC,EAAE6I,GAAG,GAAG7I,MAAM,GAAG,CAAC,CAAC,CAACsC,KAAK,CAAC,SAAS,CAAC,EAAE;QACtEtC,MAAM,IAAI,CAAC;MACb;MACA;IACF;IAEA,IAAI6I,GAAG,GAAG7I,MAAM,GAAGD,OAAO,CAACC,MAAM,EAAE;MACjC;IACF;EACF;EAEA,IAAIA,MAAM,KAAK4N,eAAe,EAAE;IAC9B;EACF;EAEA,OAAO7N,OAAO,CAACiB,KAAK,CAAC6H,GAAG,EAAEA,GAAG,GAAG7I,MAAM,CAAC;AACzC;;AAEA;AACA,SAAS+O,mBAAmBA,CAACxK,IAAI,EAAEW,KAAK,EAAE;EACxC,IAAIvG,IAAI;EACR,IAAKA,IAAI,GAAG4P,QAAQ,CAAChK,IAAI,EAAEW,KAAK,CAACD,EAAE,CAACxI,OAAO,CAACM,SAAS,CAAC,EAAG;IACvD,IAAIsE,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;IAC9ClE,KAAK,CAAC2B,KAAK,GAAG,CACZ,CAAC,KAAK,EAAErE,IAAI,CAACyL,GAAG,CAAC,EACjB,CAAC,OAAO,EAAEzL,IAAI,CAAC6P,KAAK,CAAC,EACrB,CAAC,OAAO,EAAE7P,IAAI,CAAC8P,OAAO,CAAC,EACvB,CAAC,KAAK,EAAE9P,IAAI,CAAC6P,KAAK,CAAC,EACnB,CAAC,SAAS,EAAE,MAAM,CAAC,EACnB,CAAC,OAAO,EAAE,IAAI,CAAC,EACf,CAAC,QAAQ,EAAE,IAAI,CAAC,CACjB;IAED,OAAOnN,KAAK;EACd;AACF;AAEA,SAAS2N,0BAA0BA,CACjCjP,OAAO,EACP8I,GAAG,EACH3D,KAAK,EACL8I,sBAAsB,EACtB;EACAH,eAAe,GACbA,eAAe,IAAIE,oBAAoB,CAACC,sBAAsB,CAAC;EAEjE,IAAIiB,CAAC,GAAGpB,eAAe;EACvB,IAAIjI,KAAK,GAAGiD,GAAG;EACf,IAAIzI,KAAK,GAAG,IAAI;EAEhB,OAAO6O,CAAC,CAACjP,MAAM,GAAG,CAAC,IAAI6I,GAAG,GAAG9I,OAAO,CAACC,MAAM,EAAE;IAC3C,IAAIkP,OAAO,GAAG,KAAK;IACnB,IAAIpJ,IAAI,GAAG/F,OAAO,CAACgG,UAAU,CAAC8C,GAAG,CAAC;IAElC,KAAK,IAAIxG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4M,CAAC,CAACjP,MAAM,EAAEqC,CAAC,EAAE,EAAE;MACjC,IAAI4M,CAAC,CAAC5M,CAAC,CAAC,CAAC,CAAC,CAAC,KAAKyD,IAAI,EAAE;QACpBoJ,OAAO,GAAG,IAAI;QACd9O,KAAK,GAAG6O,CAAC,CAAC5M,CAAC,CAAC,CAAC,CAAC,CAAC;QACf4M,CAAC,GAAGA,CAAC,CAAC5M,CAAC,CAAC,CAAC,CAAC,CAAC;QACX;MACF;IACF;IAEA,IAAI,CAAC6M,OAAO,EAAE;MACZ;IACF;IAEArG,GAAG,EAAE;EACP;EAEA,IAAI,CAACzI,KAAK,EAAE;IACV;EACF;;EAEA;EACA,IAAIwF,KAAK,GAAG,CAAC,EAAE;IACb,IAAIuJ,OAAO,GAAGpP,OAAO,CAACqP,MAAM,CAACxJ,KAAK,GAAG,CAAC,CAAC;IACvC,IACE,CAACV,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAACsP,OAAO,CAACM,OAAO,CAACpJ,UAAU,CAAC,CAAC,CAAC,CAAC,IAC9C,CAACb,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAACuP,WAAW,CAACK,OAAO,CAAC,EACpC;MACA;IACF;EACF;;EAEA;EACA,IAAItG,GAAG,GAAG9I,OAAO,CAACC,MAAM,EAAE;IACxB,IAAIqP,QAAQ,GAAGtP,OAAO,CAACgG,UAAU,CAAC8C,GAAG,CAAC;IACtC,IAAI,CAAC3D,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAACsP,OAAO,CAACQ,QAAQ,CAAC,EAAE;MACrC;IACF;EACF;EAEA,IAAIhO,KAAK,GAAG0N,mBAAmB,CAAC3O,KAAK,EAAE8E,KAAK,CAAC;EAC7C,IAAI7D,KAAK,EAAE;IACT,OAAO;MAAEwH,GAAG;MAAExH;IAAM,CAAC;EACvB;AACF;AAEA,SAASiO,UAAUA,CACjBvP,OAAO,EACPmF,KAAK,EACLqK,oBAAoB,EACpBC,eAAe,EACfb,WAAW,EACXX,sBAAsB,EACtByB,oBAAoB,EACpBC,aAAa,EACb;EACA,IAAIC,MAAM,GAAG,IAAI;EACjB,IAAI/J,KAAK,GAAG,CAAC;EAEb,IAAI2J,oBAAoB,EAAE;IACxBxP,OAAO,GAAGwP,oBAAoB,CAACxP,OAAO,CAAC;EACzC;EAEA,IAAI0P,oBAAoB,EAAE;IACxB,MAAMG,gBAAgB,GAAGzP,MAAM,CAACD,IAAI,CAACuP,oBAAoB,CAAC;IAE1DG,gBAAgB,CAAClR,OAAO,CAAEmR,WAAW,IAAK;MACxC,IAAI9P,OAAO,EAAEuC,KAAK,CAACuN,WAAW,CAAC,EAAE;QAC/B,MAAMC,KAAK,GAAG,IAAItP,MAAM,CAACqP,WAAW,EAAE,GAAG,CAAC;QAC1C,MAAMtE,OAAO,GAAGxL,OAAO,CAACuC,KAAK,CAACwN,KAAK,CAAC;QACpC,MAAM5E,WAAW,GAAGuE,oBAAoB,CAACI,WAAW,CAAC,CAAC3E,WAAW;QAEjEK,OAAO,CAAC7M,OAAO,CAAC,MAAM;UACpB,MAAMqR,aAAa,GAAGD,KAAK,CAACtJ,IAAI,CAACzG,OAAO,CAAC;UACzC,IAAIgQ,aAAa,EAAE;YACjBhQ,OAAO,GAAGA,OAAO,CAACQ,OAAO,CAACwP,aAAa,CAAC,CAAC,CAAC,EAAE7E,WAAW,CAAC;UAC1D;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,IAAIwE,aAAa,EAAE1P,MAAM,GAAG,CAAC,EAAE;IAC7B0P,aAAa,CAAChR,OAAO,CAAEsR,KAAK,IAAK;MAC/B,IAAIjQ,OAAO,EAAEuC,KAAK,CAAC0N,KAAK,CAAC,EAAE;QACzB,MAAMF,KAAK,GAAG,IAAItP,MAAM,CAAE,IAAGwP,KAAM,GAAE,EAAE,GAAG,CAAC;QAC3CjQ,OAAO,GAAGA,OAAO,CAACQ,OAAO,CAACuP,KAAK,EAAE,EAAE,CAAC;MACtC;IACF,CAAC,CAAC;EACJ;EAEA,IAAIxG,GAAG,GAAGvJ,OAAO,CAACC,MAAM;EAExB,KAAK,IAAIqC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAEqC,CAAC,EAAE,EAAE;IAC3C,IAAI4N,MAAM,GAAG,CAAC;IACd,IAAI5O,KAAK,GAAG,IAAI;IAEhB,MAAMkD,IAAI,GAAGmK,YAAY,CAAC3O,OAAO,EAAEsC,CAAC,EAAE6C,KAAK,EAAEyJ,WAAW,CAAC;IAEzD,IAAIpK,IAAI,EAAE;MACRlD,KAAK,GAAG0N,mBAAmB,CAACxK,IAAI,EAAEW,KAAK,CAAC;MACxC,IAAI7D,KAAK,EAAE;QACT4O,MAAM,GAAG1L,IAAI,CAACvE,MAAM,GAAG,CAAC;MAC1B;IACF;IAEA,IAAIwP,eAAe,IAAI,CAACnO,KAAK,EAAE;MAC7B;MACA,MAAM1C,IAAI,GAAGqQ,0BAA0B,CACrCjP,OAAO,EACPsC,CAAC,EACD6C,KAAK,EACL8I,sBACF,CAAC;MAED,IAAIrP,IAAI,EAAE;QACRsR,MAAM,GAAGtR,IAAI,CAACkK,GAAG,GAAGxG,CAAC;QACrBhB,KAAK,GAAG1C,IAAI,CAAC0C,KAAK;MACpB;IACF;IAEA,IAAIA,KAAK,EAAE;MACTsO,MAAM,GAAGA,MAAM,IAAI,EAAE;MAErB,IAAItN,CAAC,GAAGuD,KAAK,GAAG,CAAC,EAAE;QACjB,IAAIsK,IAAI,GAAG,IAAIhL,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;QACzC2K,IAAI,CAACnQ,OAAO,GAAGA,OAAO,CAACiB,KAAK,CAAC4E,KAAK,EAAEvD,CAAC,CAAC;QACtCsN,MAAM,CAAC1M,IAAI,CAACiN,IAAI,CAAC;MACnB;MAEAP,MAAM,CAAC1M,IAAI,CAAC5B,KAAK,CAAC;MAElBiI,GAAG,GAAG1D,KAAK,GAAGvD,CAAC,GAAG4N,MAAM;MACxB5N,CAAC,IAAI4N,MAAM,GAAG,CAAC;IACjB;EACF;EAEA,IAAI3G,GAAG,GAAGvJ,OAAO,CAACC,MAAM,EAAE;IACxB,IAAIkQ,IAAI,GAAG,IAAIhL,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IACzC2K,IAAI,CAACnQ,OAAO,GAAGA,OAAO,CAACiB,KAAK,CAACsI,GAAG,CAAC;IACjCqG,MAAM,CAAC1M,IAAI,CAACiN,IAAI,CAAC;EACnB;;EAEA;EACA;EACA,IAAIP,MAAM,IAAIA,MAAM,CAAC3P,MAAM,GAAG,CAAC,IAAI2P,MAAM,CAAC3P,MAAM,IAAI,CAAC,EAAE;IACrD;IACA;IACA,IACE2P,MAAM,CAAC,CAAC,CAAC,CAACtK,IAAI,KAAK,OAAO,IAC1BsK,MAAM,CAACA,MAAM,CAAC3P,MAAM,GAAG,CAAC,CAAC,CAACqF,IAAI,KAAK,OAAO,IAC1CsK,MAAM,CAACQ,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC/K,IAAI,KAAK,OAAO,CAAC,CAACrF,MAAM,IAAI,CAAC,EACpD;MACA,IAAIqQ,aAAa,GAAG,IAAI;MACxB,IAAIC,KAAK,GAAG,CAAC;MAEb,MAAMC,cAAc,GAAItB,CAAC,IAAK;QAC5B,IAAI,CAACA,CAAC,EAAE;UACN;QACF;QAEA,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC5E,QAAQ,CAAC4E,CAAC,CAAC5J,IAAI,CAAC,EAAE;UACvCgL,aAAa,GAAG,KAAK;QACvB;;QAEA;QACA;QACA,IACEpB,CAAC,CAAC5J,IAAI,KAAK,MAAM,KACfsK,MAAM,CAACW,KAAK,GAAG,CAAC,CAAC,IAAIX,MAAM,CAACW,KAAK,GAAG,CAAC,CAAC,CAACjL,IAAI,KAAK,OAAO,IACvD4J,CAAC,CAAClP,OAAO,KAAK,GAAG,CAAC,EACpB;UACAsQ,aAAa,GAAG,KAAK;QACvB;;QAEA;QACA,IAAIA,aAAa,EAAE;UACjBC,KAAK,IAAI,CAAC;UACVC,cAAc,CAACZ,MAAM,CAACW,KAAK,CAAC,CAAC;QAC/B;MACF,CAAC;MAEDC,cAAc,CAACZ,MAAM,CAACW,KAAK,CAAC,CAAC;MAE7B,IAAID,aAAa,EAAE;QACjBV,MAAM,CAACjR,OAAO,CAAE0R,CAAC,IAAK;UACpB,IAAIA,CAAC,CAAC/K,IAAI,KAAK,OAAO,EAAE;YACtBmL,mBAAmB,CAACJ,CAAC,CAAC;UACxB;QACF,CAAC,CAAC;MACJ;IACF;EACF;EAEA,OAAOT,MAAM;AACf;AAEA,SAASa,mBAAmBA,CAACnP,KAAK,EAAE;EAClCA,KAAK,CAAC2B,KAAK,CAACtE,OAAO,CAAE+R,IAAI,IAAK;IAC5B,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;MACvBA,IAAI,CAAC,CAAC,CAAC,GAAI,GAAEA,IAAI,CAAC,CAAC,CAAE,aAAY;IACnC;EACF,CAAC,CAAC;AACJ;AAEO,SAASnS,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACiF,eAAe,CAAC,CAACC,IAAI,EAAEkC,YAAY,EAAEhH,KAAK,KAAK;IACpD8E,IAAI,CAAChM,QAAQ,CAACgS,KAAK,GAAG,CAAC9K,KAAK,CAACwL,aAAa,IAAI,CAAC,CAACxE,YAAY,CAACyE,YAAY;IACzE3G,IAAI,CAAChM,QAAQ,CAAC4S,cAAc,GAAG,CAAC,CAAC1E,YAAY,CAAC2E,sBAAsB;IACpE7G,IAAI,CAAChM,QAAQ,CAAC2Q,WAAW,GAAG,CAAC,CAACzC,YAAY,CAAC4E,+BAA+B;IAC1E9G,IAAI,CAAC+G,QAAQ,GAAG7E,YAAY,CAAC8E,SAAS,IAAI,EAAE;IAC5ChH,IAAI,CAACiH,WAAW,GAAG/L,KAAK,CAAC+L,WAAW;IACpCjH,IAAI,CAACkH,WAAW,GAAGhF,YAAY,CAACiF,kBAAkB;IAClDnH,IAAI,CAAC0F,aAAa,GAAGxK,KAAK,CAACwK,aAAa;EAC1C,CAAC,CAAC;EAEF5K,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACL,IAAI,CAACF,KAAK,CAACzB,IAAI,CAAC,OAAO,EAAGiC,KAAK,IAChCD,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACqU,OAAO,CAACC,WAAW,CAACnM,KAAK,EAAE,CAACoM,CAAC,EAAEC,CAAC,KACnDjC,UAAU,CACRgC,CAAC,EACDC,CAAC,EACDtM,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACwS,oBAAoB,EACzCtK,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACiB,QAAQ,CAAC4S,cAAc,EAC5C3L,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACiB,QAAQ,CAAC2Q,WAAW,EACzC1J,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACiR,sBAAsB,EAC3C/I,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACyU,mBAAmB,EACxCvM,EAAE,CAACxI,OAAO,CAACM,SAAS,CAAC2S,aACvB,CACF,CACF,CAAC;EACH,CAAC,CAAC;EAEF5K,MAAM,CAACgF,SAAS,CAAC,CACf,kBAAkB,EAClB,+BAA+B,EAC/B,0CAA0C,EAC1C,6BAA6B,EAC7B,mBAAmB,EACnB,eAAe,EACf,gBAAgB,CACjB,CAAC;AACJ;;;;;;;;;;;;;;ACpYA;AACA;AACA;AACA;AACA;;AAEA,SAAS2H,UAAUA,CAACC,MAAM,EAAEnG,OAAO,EAAErG,KAAK,EAAE;EAC1C,MAAMzI,OAAO,GAAGyI,KAAK,CAACD,EAAE,CAACxI,OAAO,CAACM,SAAS;EAC1C,MAAM0I,IAAI,GAAG8F,OAAO,CAAC,CAAC,CAAC;EACvB,MAAMoG,aAAa,GAAGlV,OAAO,CAACkV,aAAa;;EAE3C;EACA;EACA;EACA,MAAMhC,MAAM,GACVgC,aAAa,IACbA,aAAa,CAAClM,IAAI,EAAEhJ,OAAO,CAACmV,MAAM,EAAEnV,OAAO,CAACoV,2BAA2B,CAAC;;EAE1E;EACA;EACA,IAAIxQ,KAAK;EACT,IAAIsO,MAAM,EAAE;IACVtO,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;;IAE5C;IACA;IACAlE,KAAK,CAAC2B,KAAK,GAAG,CACZ,CAAC,OAAO,EAAE,gBAAgB,CAAC,EAC3B,CAAC,MAAM,EAAE2M,MAAM,CAACmC,YAAY,CAAC,EAC7B,CAAC,WAAW,EAAEnC,MAAM,CAACtK,IAAI,CAAC,EAC1B,CAAC,WAAW,EAAEsK,MAAM,CAAClK,IAAI,CAAC,EAC1B,CAAC,SAAS,EAAEkK,MAAM,CAAC1P,EAAE,CAAC,CACvB;;IAED;IACA;IACA,IAAI0P,MAAM,CAAClK,IAAI,KAAKkK,MAAM,CAACoC,GAAG,EAAE;MAC9B1Q,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,UAAU,EAAE0M,MAAM,CAACoC,GAAG,CAAC,CAAC;IAC5C;IAEA1Q,KAAK,CAACmD,KAAK,GAAG,KAAK;IACnBkN,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;IAElB2Q,kBAAkB,CAACN,MAAM,EAAExM,KAAK,CAAC;IAEjC7D,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC;IAC/ClE,KAAK,CAACmD,KAAK,GAAG,KAAK;IACnBkN,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;IAElBA,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IACtClE,KAAK,CAACtB,OAAO,GAAG4P,MAAM,CAACO,IAAI;IAC3BwB,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;IAElBqQ,MAAM,CAACzO,IAAI,CAAC,IAAIiC,KAAK,CAACK,KAAK,CAAC,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;IAEtDmM,MAAM,CAACzO,IAAI,CAAC,IAAIiC,KAAK,CAACK,KAAK,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC,MAAM;IACLlE,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC;IAC/ClE,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;IACxC0O,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;IAElBA,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC;IAC/ClE,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IACtClE,KAAK,CAACtB,OAAO,GAAGwL,OAAO,CAAC,CAAC,CAAC;IAC1BmG,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;IAClBA,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IAEjDlE,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IACjDmM,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;EACpB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2Q,kBAAkBA,CAACN,MAAM,EAAExM,KAAK,EAAE;EACzC,IAAI7D,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC;EACnDlE,KAAK,CAACmD,KAAK,GAAG,KAAK;EACnBnD,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;EACrD0O,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;EAElBA,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;EAC7ClE,KAAK,CAACmD,KAAK,GAAG,KAAK;EACnBnD,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,OAAO,EAAG,gDAA+C,CAAC,CAAC;EAC3E0O,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;EAElBA,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;EAC7ClE,KAAK,CAACmD,KAAK,GAAG,KAAK;EACnBnD,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;EACxC0O,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;EAElBqQ,MAAM,CAACzO,IAAI,CAAC,IAAIiC,KAAK,CAACK,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;EACpDmM,MAAM,CAACzO,IAAI,CAAC,IAAIiC,KAAK,CAACK,KAAK,CAAC,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;EAEpDmM,MAAM,CAACzO,IAAI,CAAC,IAAIiC,KAAK,CAACK,KAAK,CAAC,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;AACxD;AAEO,SAASjH,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5B,MAAMX,IAAI,GAAG;MACX2N,OAAO,EAAE,4CAA4C;MACrDC,OAAO,EAAET;IACX,CAAC;IAEDxM,EAAE,CAACL,IAAI,CAACC,eAAe,CAACH,KAAK,CAACzB,IAAI,CAAC,sBAAsB,EAAEqB,IAAI,CAAC;EAClE,CAAC,CAAC;EAEFQ,MAAM,CAACgF,SAAS,CAAC,CACf,kBAAkB,EAClB,kBAAkB,EAClB,+BAA+B,EAC/B,2DAA2D,EAC3D,wBAAwB,EACxB,cAAc,EACd,cAAc,EACd,aAAa,EACb,YAAY,CACb,CAAC;AACJ;;;;;;;;;;;;;;AC1HA;AACA;AACA;;AAEA,MAAMqI,KAAK,GAAG,kBAAkB;AAEhC,SAAS7N,IAAIA,CAACY,KAAK,EAAEyB,SAAS,EAAEC,OAAO,EAAE;EACvC,IAAIc,QAAQ;IACVrG,KAAK;IACL+Q,QAAQ;IACRvJ,GAAG,GAAG3D,KAAK,CAAC8B,MAAM,CAACL,SAAS,CAAC,GAAGzB,KAAK,CAAC+B,MAAM,CAACN,SAAS,CAAC;IACvDd,GAAG,GAAGX,KAAK,CAACgC,MAAM,CAACP,SAAS,CAAC;;EAE/B;EACA,IAAIzB,KAAK,CAACiC,MAAM,CAACR,SAAS,CAAC,GAAGzB,KAAK,CAACkC,SAAS,IAAI,CAAC,EAAE;IAClD,OAAO,KAAK;EACd;EAEA,IAAI,CAAClC,KAAK,CAACD,EAAE,CAACxI,OAAO,CAAC4V,IAAI,EAAE;IAC1B,OAAO,KAAK;EACd;EAEA,IAAInN,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAAC8C,GAAG,CAAC,KAAK,IAAI,CAAC,SAAS;IAC9C,OAAO,KAAK;EACd;EACA,IAAIyJ,IAAI,GAAGpN,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAAC8C,GAAG,GAAG,CAAC,CAAC;EACxC,IAAIyJ,IAAI,KAAK,EAAE,CAAC,WAAWA,IAAI,KAAK,GAAG,CAAC,SAAS;IAC/C,OAAO,KAAK;EACd;EAEAF,QAAQ,GAAGlN,KAAK,CAAC5D,GAAG,CAACN,KAAK,CAAC6H,GAAG,EAAEhD,GAAG,CAAC;EAEpC,IAAI,CAACsM,KAAK,CAACjR,IAAI,CAACkR,QAAQ,CAAC,EAAE;IACzB,OAAO,KAAK;EACd;EAEA,IAAIG,KAAK,GAAG,EAAE;EACdA,KAAK,CAACtP,IAAI,CAACmP,QAAQ,CAAC;EAEpB1K,QAAQ,GAAGf,SAAS,GAAG,CAAC;EACxB,OAAOe,QAAQ,GAAGd,OAAO,EAAEc,QAAQ,EAAE,EAAE;IACrCmB,GAAG,GAAG3D,KAAK,CAAC8B,MAAM,CAACU,QAAQ,CAAC,GAAGxC,KAAK,CAAC+B,MAAM,CAACS,QAAQ,CAAC;IACrD7B,GAAG,GAAGX,KAAK,CAACgC,MAAM,CAACQ,QAAQ,CAAC;IAC5B0K,QAAQ,GAAGlN,KAAK,CAAC5D,GAAG,CAACN,KAAK,CAAC6H,GAAG,EAAEhD,GAAG,CAAC;IAEpC,IAAIuM,QAAQ,CAAChT,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1B;IACF;IAEA,IAAI,CAAC+S,KAAK,CAACjR,IAAI,CAACkR,QAAQ,CAAC,EAAE;MACzB;IACF;IAEAG,KAAK,CAACtP,IAAI,CAACmP,QAAQ,CAAC;EACtB;EAEAlN,KAAK,CAAC4B,IAAI,GAAGY,QAAQ;EACrB,IAAI8K,aAAa,GAAGtN,KAAK,CAAC6C,UAAU;EACpC7C,KAAK,CAAC6C,UAAU,GAAG,WAAW;EAE9B1G,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC;EAC5C5B,KAAK,CAACmH,GAAG,GAAG,CAAC7B,SAAS,EAAEzB,KAAK,CAAC4B,IAAI,CAAC;EAEnCzF,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;EACnC5B,KAAK,CAACtB,OAAO,GAAGwS,KAAK,CAACpP,IAAI,CAAC,IAAI,CAAC;EAChC9B,KAAK,CAACmH,GAAG,GAAG,CAAC7B,SAAS,EAAEzB,KAAK,CAAC4B,IAAI,CAAC;EACnCzF,KAAK,CAACY,QAAQ,GAAG,EAAE;EAEnBiD,KAAK,CAACjC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;EACtCiC,KAAK,CAAC6C,UAAU,GAAGyK,aAAa;EAEhC,OAAO,IAAI;AACb;AAEO,SAASlU,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACT,KAAK,CAACE,KAAK,CAACwD,MAAM,CAAC,YAAY,EAAE,UAAU,EAAE5D,IAAI,EAAE;MAAEvC,GAAG,EAAE,CAAC,OAAO;IAAE,CAAC,CAAC;EAC3E,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;AC9EkC;AAElC,MAAM2Q,MAAM,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;AAElC,SAASC,QAAQA,CAACtR,KAAK,EAAE;EACvB,OAAOA,KAAK,CAACtB,OAAO,CAACsK,QAAQ,CAAC,WAAW,CAAC;AAC5C;AAEA,SAASuI,WAAWA,CAACvR,KAAK,EAAE;EAC1B,OAAOA,KAAK,CAACtB,OAAO,CAACuC,KAAK,CAAC,mBAAmB,CAAC;AACjD;AAEA,SAASuQ,cAAcA,CAACvC,KAAK,EAAEjP,KAAK,EAAE;EACpC,MAAMyR,QAAQ,GAAGzR,KAAK,CAACtB,OAAO,CAC3B7C,KAAK,CAAC,GAAG,CAAC,CACV6V,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAAC1Q,KAAK,CAAC,gCAAgC,CAAC,CAAC;EACzD,IAAI2Q,aAAa,GACfH,QAAQ,IAAIA,QAAQ,CAAC5V,KAAK,CAAC,GAAG,CAAC,CAACgW,GAAG,CAAC,CAAC,CAAC9T,IAAI,CAAC,CAAC,CAACmB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;EAE/D,MAAM4S,cAAc,GAAG,CAACT,MAAM,CAACK,IAAI,CAAEK,KAAK,IAAKA,KAAK,KAAKH,aAAa,CAAC;EACvE,IAAIE,cAAc,EAAE;IAClBF,aAAa,GAAG,KAAK;EACvB;EAEA5R,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,aAAa,EAAEqN,KAAK,CAAC,CAAC;EACxCjP,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,OAAO,EAAEgQ,aAAa,CAAC,CAAC;AAC5C;AAEA,SAAS3O,IAAIA,CAACY,KAAK,EAAE;EACnB,IAAImO,YAAY,GAAG,CAAC;EAEpB,KAAK,IAAIhR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6C,KAAK,CAACrF,MAAM,CAACG,MAAM,EAAEqC,CAAC,EAAE,EAAE;IAC5C,IAAIiR,UAAU,GAAGpO,KAAK,CAACrF,MAAM,CAACwC,CAAC,CAAC;IAChC,MAAMkR,eAAe,GAAGD,UAAU,CAACpP,GAAG,KAAK,KAAK;IAEhD,IAAIqP,eAAe,IAAIZ,QAAQ,CAACW,UAAU,CAAC,IAAIV,WAAW,CAACU,UAAU,CAAC,EAAE;MACtET,cAAc,CAACQ,YAAY,EAAEC,UAAU,CAAC;MACxCD,YAAY,EAAE;IAChB;IAEA,IAAI,CAACC,UAAU,CAACrR,QAAQ,EAAE;MACxB;IACF;IAEA,KAAK,IAAIsF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+L,UAAU,CAACrR,QAAQ,CAACjC,MAAM,EAAEuH,CAAC,EAAE,EAAE;MACnD,IAAIlG,KAAK,GAAGiS,UAAU,CAACrR,QAAQ,CAACsF,CAAC,CAAC;MAClC,MAAMiM,aAAa,GAAGnS,KAAK,CAAC6C,GAAG,KAAK,KAAK;MAEzC,IAAIsP,aAAa,IAAIb,QAAQ,CAACW,UAAU,CAAC,IAAIV,WAAW,CAACvR,KAAK,CAAC,EAAE;QAC/DwR,cAAc,CAACQ,YAAY,EAAEhS,KAAK,CAAC;QACnCgS,YAAY,EAAE;MAChB;IACF;EACF;AACF;AAEA,SAASI,gBAAgBA,CAACR,aAAa,EAAEG,KAAK,EAAE;EAC9C,MAAMM,gBAAgB,GAAGT,aAAa,KAAKG,KAAK,GAAG,SAAS,GAAG,EAAE;EACjE,OACE,wBAAwB,GACxBM,gBAAgB,GAChB,gBAAgB,GAChBN,KAAK,GACL,IAAI,GACJA,KAAK,GACL,UAAU;AAEd;AAEA,SAASO,6BAA6BA,CAACC,OAAO,EAAE;EAC9C,OAAQ;AACV;AACA;AACA;AACA;AACA;AACA,uCAAuCnB,sDAAI,CAACxD,CAAC,CACzC,oCACF,CAAE,KAAI2E,OAAQ;AAChB;AACA,GAAG;AACH;AAEA,SAASC,6BAA6BA,CAACD,OAAO,EAAE;EAC9C,OAAQ;AACV;AACA,uDAAuDA,OAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AAEA,SAASE,sBAAsBA,CAAA,EAAG;EAChC,OAAQ;AACV,kDAAkDrB,sDAAI,CAACxD,CAAC,CACpD,8BACF,CAAE;AACJ;AACA;AACA;AACA;AACA,GAAG;AACH;AAEA,SAAS8E,wBAAwBA,CAACC,UAAU,EAAE;EAC5C,OAAQ;AACV,gDAAgDvB,sDAAI,CAACxD,CAAC,CAClD,4BACF,CAAE,uBAAsB+E,UAAW;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACO,MAAMC,QAAQ,GAAG,CAAC;AAEzB,SAASC,qBAAqBA,CAACC,OAAO,EAAE;EACtC,OAAO,UAAUtU,MAAM,EAAEC,GAAG,EAAErD,OAAO,EAAEoF,GAAG,EAAEC,GAAG,EAAE;IAC/C,MAAMT,KAAK,GAAGxB,MAAM,CAACC,GAAG,CAAC;IACzB,MAAMsU,UAAU,GAAG/S,KAAK,CAAC0B,SAAS,CAAC,OAAO,CAAC;IAC3C,MAAMsR,UAAU,GAAGhT,KAAK,CAAC0B,SAAS,CAAC,aAAa,CAAC;IAEjD,IAAIqR,UAAU,KAAK,CAAC,CAAC,EAAE;MACrB,IAAInB,aAAa,GAAG5R,KAAK,CAAC2B,KAAK,CAACoR,UAAU,CAAC,CAAC,CAAC,CAAC;MAC9C,IAAI9D,KAAK,GAAGjP,KAAK,CAAC2B,KAAK,CAACqR,UAAU,CAAC,CAAC,CAAC,CAAC;MAEtC,IAAI1E,MAAM,GAAI,8BAA6B;MAE3CA,MAAM,IAAIwE,OAAO,CAACtU,MAAM,EAAEC,GAAG,EAAErD,OAAO,EAAEoF,GAAG,EAAEC,GAAG,CAAC;MAEjD6N,MAAM,IAAK,kDAAiDW,KAAM,IAAG;MACrE,IAAIxQ,GAAG,KAAK,CAAC,EAAE;QACb,MAAMkU,UAAU,GAAGnU,MAAM,CAACsQ,MAAM,CAAE6C,CAAC,IAAKA,CAAC,CAAC3N,IAAI,KAAK,OAAO,CAAC,CAACrF,MAAM;QAClE,IAAIgU,UAAU,GAAG,CAAC,EAAE;UAClBrE,MAAM,IAAIoE,wBAAwB,CAACC,UAAU,CAAC;QAChD;MACF;MACArE,MAAM,IAAIgE,6BAA6B,CACrCtS,KAAK,CAAC2B,KAAK,CAAC3B,KAAK,CAAC0B,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACvC,CAAC;MACD4M,MAAM,IAAIkE,6BAA6B,CACrCxS,KAAK,CAAC2B,KAAK,CAAC3B,KAAK,CAAC0B,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACvC,CAAC;MAED4M,MAAM,IAAK,oCAAmC;MAC9CA,MAAM,IAAI+C,MAAM,CAAClK,GAAG,CAAE4K,KAAK,IACzBK,gBAAgB,CAACR,aAAa,EAAEG,KAAK,CACvC,CAAC,CAACjQ,IAAI,CAAC,EAAE,CAAC;MACVwM,MAAM,IAAK,SAAQ;MACnBA,MAAM,IAAImE,sBAAsB,CAAC,CAAC;MAElCnE,MAAM,IAAI,gBAAgB;MAE1B,OAAOA,MAAM;IACf,CAAC,MAAM;MACL,OAAOwE,OAAO,CAACtU,MAAM,EAAEC,GAAG,EAAErD,OAAO,EAAEoF,GAAG,EAAEC,GAAG,CAAC;IAChD;EACF,CAAC;AACH;AAEO,SAASxD,KAAKA,CAACwG,MAAM,EAAE;EAC5B,MAAMkF,IAAI,GAAGlF,MAAM,CAACC,UAAU,CAAC,CAAC;EAChC,IAAIiF,IAAI,CAAC7H,UAAU,EAAE;IACnB2C,MAAM,CAACgF,SAAS,CAAC,CACf,oBAAoB,EACpB,qBAAqB,EACrB,iCAAiC,EACjC,uBAAuB,EACvB,8BAA8B,EAC9B,gBAAgB,EAChB,4BAA4B,EAC5B,uCAAuC,EACvC,kBAAkB,EAClB,iCAAiC,EACjC,yBAAyB,EACzB,kCAAkC,EAClC,2CAA2C,EAC3C,oDAAoD,EACpD,wDAAwD,EACxD,uBAAuB,EACvB,0BAA0B,EAE1B,8BAA8B,EAC9B,0BAA0B,EAC1B,mBAAmB,EACnB,kBAAkB,EAClB,6BAA6B,EAC7B,gDAAgD,EAChD,uDAAuD,EACvD,kBAAkB,EAClB,oDAAoD,EACpD,uDAAuD,EACvD,2DAA2D,EAC3D,kBAAkB,EAElB,6BAA6B,EAC7B,+CAA+C,EAC/C,oDAAoD,EACpD,eAAe,CAChB,CAAC;IAEFhF,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;MAC5B,MAAMkP,OAAO,GAAGlP,EAAE,CAACxE,QAAQ,CAACC,KAAK,CAAC4C,KAAK;MAEvC2B,EAAE,CAACxE,QAAQ,CAACC,KAAK,CAAC4C,KAAK,GAAG4Q,qBAAqB,CAACC,OAAO,CAAC;MAExDlP,EAAE,CAACL,IAAI,CAACF,KAAK,CAACgE,KAAK,CAAC,iBAAiB,EAAE,iBAAiB,EAAEpE,IAAI,CAAC;IACjE,CAAC,CAAC;EACJ;AACF;;;;;;;;;;;;;;ACzNA,MAAMgQ,QAAQ,GAAG;EACfpQ,GAAG,EAAE,MAAM;EACXgE,MAAMA,CAAChD,KAAK,EAAE;IACZ,IAAI7D,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,CAAC,CAAC;IAC/C5B,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;EAC3C,CAAC;EAED0F,KAAKA,CAACxD,KAAK,EAAE;IACXA,KAAK,CAACjC,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;EACvC;AACF,CAAC;AAEM,SAAS3E,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACgF,SAAS,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAEtChF,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACT,KAAK,CAACC,MAAM,CAACC,KAAK,CAACzB,IAAI,CAAC,MAAM,EAAEqR,QAAQ,CAAC;EAC9C,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBmC;AACW;AACE;AACT;AACR;AACoD;AACjD;AACD;AAC6B;AACxB;AACY;AACR;AACH;AACF;AACF;AACM;AACN;AACF;AACsB;AACH;AACJ;AAEhD,iEAAe,CACbzW,OAAO,CAAC,eAAe,EAAEyX,4CAAY,CAAC,EACtCzX,OAAO,CAAC,iBAAiB,EAAEwX,8CAAc,CAAC,EAC1CxX,OAAO,CAAC,mBAAmB,EAAEgH,gDAAe,CAAC,EAC7ChH,OAAO,CAAC,OAAO,EAAEuX,oCAAK,CAAC,EACvBvX,OAAO,CAAC,QAAQ,EAAEf,qCAAM,CAAC,EACzBe,OAAO,CAAC,WAAW,EAAEsX,wCAAS,CAAC,EAC/BtX,OAAO,CAAC,QAAQ,EAAE8M,qCAAM,CAAC,EACzB9M,OAAO,CAAC,SAAS,EAAEqX,sCAAO,CAAC,EAC3BrX,OAAO,CAAC,UAAU,EAAEoX,uCAAQ,CAAC,EAC7BpX,OAAO,CAAC,YAAY,EAAEmX,yCAAS,CAAC,EAChCnX,OAAO,CAAC,gBAAgB,EAAEkX,6CAAa,CAAC,EACxClX,OAAO,CAAC,UAAU,EAAEiX,sCAAO,CAAC,EAC5BjX,OAAO,CAAC,sBAAsB,EAAEgX,kDAAmB,CAAC,EACpDhX,OAAO,CAAC,OAAO,EAAEmS,mCAAK,CAAC,EACvBnS,OAAO,CAAC,QAAQ,EAAE+W,oCAAK,CAAC,EACxB/W,OAAO,CAAC,iCAAiC,EAAE8W,6DAA6B,CAAC,EACzE9W,OAAO,CAAC,MAAM,EAAEiI,kCAAI,CAAC,EACrBjI,OAAO,CAAC,UAAU,EAAE6W,sCAAQ,CAAC,EAC7B7W,OAAO,CAAC,eAAe,EAAE4W,2CAAY,CAAC,EACtC5W,OAAO,CAAC,cAAc,EAAE2W,0CAAW,CAAC,EACpC3W,OAAO,CAAC,QAAQ,EAAE0W,oCAAM,CAAC,CAC1B,EAAC;AAEF,SAAS1W,OAAOA,CAACoC,EAAE,EAAE;EAAE3B,KAAK;EAAE2V,QAAQ,GAAG;AAAE,CAAC,EAAE;EAC5C,OAAO;IAAEhU,EAAE;IAAE3B,KAAK;IAAE2V;EAAS,CAAC;AAChC;;;;;;;;;;;;;;;AChDoD;AAEpD,SAASuB,UAAUA,CAAC9D,MAAM,EAAEnG,OAAO,EAAErG,KAAK,EAAE;EAC1C,IAAIuQ,QAAQ,GAAGlK,OAAO,CAAC,CAAC,CAAC,IAAIA,OAAO,CAAC,CAAC,CAAC;EACvC,IAAIrH,GAAG,GAAG,MAAM;EAChB,IAAIoE,SAAS,GAAG,SAAS;EAEzB,IAAIjH,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,cAAc,EAAErB,GAAG,EAAE,CAAC,CAAC;EACnD7C,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,OAAO,EAAEsF,SAAS,CAAC,CAAC;EAEpCoJ,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;EAElBA,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;EACtClE,KAAK,CAACtB,OAAO,GAAG,GAAG,GAAG0V,QAAQ;EAE9B/D,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;EAElBA,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,eAAe,EAAErB,GAAG,EAAE,CAAC,CAAC,CAAC;EACjDwN,MAAM,CAACzO,IAAI,CAAC5B,KAAK,CAAC;AACpB;AAEO,SAAS/C,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACiF,eAAe,CAAC,CAACC,IAAI,EAAEkC,YAAY,KAAK;IAC7ClC,IAAI,CAAChM,QAAQ,CAACiX,QAAQ,GAAG,CAAC,CAAC/I,YAAY,CAACwJ,eAAe;IACvD1L,IAAI,CAAChM,QAAQ,CAAC2X,gBAAgB,GAAG,CAAC,CAACzJ,YAAY,CAAC0J,iBAAiB;EACnE,CAAC,CAAC;EAEF9Q,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5B,MAAMX,IAAI,GAAG;MACX2N,OAAO,EAAEsD,kEAAY,CAACtQ,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACiB,QAAQ,CAAC2X,gBAAgB,CAAC;MACrEzD,OAAO,EAAEsD;IACX,CAAC;IAEDvQ,EAAE,CAACL,IAAI,CAACC,eAAe,CAACH,KAAK,CAACzB,IAAI,CAAC,UAAU,EAAEqB,IAAI,CAAC;EACtD,CAAC,CAAC;AACJ;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;;AAEA,SAAS4Q,OAAOA,CAAChQ,KAAK,EAAEuC,MAAM,EAAE;EAC9B,IAAIpG,KAAK;IACPwU,IAAI;IACJhQ,GAAG;IACHiQ,EAAE;IACFjN,GAAG,GAAG3D,KAAK,CAAC2D,GAAG;EAEjB,IAAI3D,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAAC8C,GAAG,CAAC,KAAK,IAAI,CAAC,UAAU;IAC/C,OAAO,KAAK;EACd;EAEAgN,IAAI,GAAG3Q,KAAK,CAAC6Q,OAAO,CAAC/V,MAAM,GAAG,CAAC;EAC/B6F,GAAG,GAAGX,KAAK,CAAC4D,MAAM;;EAElB;EACA;EACA;EACA;EACA,IAAI,CAACrB,MAAM,EAAE;IACX,IAAIoO,IAAI,IAAI,CAAC,IAAI3Q,KAAK,CAAC6Q,OAAO,CAAChQ,UAAU,CAAC8P,IAAI,CAAC,KAAK,IAAI,EAAE;MACxD,IAAIA,IAAI,IAAI,CAAC,IAAI3Q,KAAK,CAAC6Q,OAAO,CAAChQ,UAAU,CAAC8P,IAAI,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;QAC5D;QACAC,EAAE,GAAGD,IAAI,GAAG,CAAC;QAEb,OAAOC,EAAE,IAAI,CAAC,IAAI5Q,KAAK,CAAC6Q,OAAO,CAAChQ,UAAU,CAAC+P,EAAE,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;UAC3DA,EAAE,EAAE;QACN;QAEA5Q,KAAK,CAAC6Q,OAAO,GAAG7Q,KAAK,CAAC6Q,OAAO,CAAC/U,KAAK,CAAC,CAAC,EAAE8U,EAAE,CAAC;QAC1CzU,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;MAC1C,CAAC,MAAM;QACLiC,KAAK,CAAC6Q,OAAO,GAAG7Q,KAAK,CAAC6Q,OAAO,CAAC/U,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1CK,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;MAC1C;IACF,CAAC,MAAM;MACL5B,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1C;EACF;EAEA4F,GAAG,EAAE;;EAEL;EACA,OAAOA,GAAG,GAAGhD,GAAG,IAAIX,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAACsP,OAAO,CAAC3J,KAAK,CAAC5D,GAAG,CAACyE,UAAU,CAAC8C,GAAG,CAAC,CAAC,EAAE;IACrE,IAAIxH,KAAK,EAAE;MACTA,KAAK,CAAC2U,aAAa,GAAG,IAAI;IAC5B;IACAnN,GAAG,EAAE;EACP;EAEA3D,KAAK,CAAC2D,GAAG,GAAGA,GAAG;EACf,OAAO,IAAI;AACb;AAEO,SAASvK,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACN,MAAM,CAACD,KAAK,CAACqE,EAAE,CAAC,SAAS,EAAEmM,OAAO,CAAC;EACxC,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;AC/DiE;AACR;AAEzD,MAAMiB,MAAM,GAAG,CAAC;AAChB,MAAMC,MAAM,GAAG,CAAC;AAEhB,SAASC,UAAUA,CAACC,IAAI,EAAE;EACxB,IAAIpZ,KAAK,GAAGoZ,IAAI,CAACpZ,KAAK,CAAC,yBAAyB,CAAC;EACjD,IAAIqZ,QAAQ,GAAGrZ,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,CAAC8C,MAAM,GAAG,CAAC;EACvD,OAAO,CAACuW,QAAQ;AAClB;AAEA,SAASC,WAAWA,CAACtR,KAAK,EAAEuC,MAAM,EAAE;EAClC,IAAIA,MAAM,IAAI,CAACvC,KAAK,CAACrF,MAAM,EAAE;IAC3B;EACF;EAEA,KAAK,IAAIwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6C,KAAK,CAACrF,MAAM,CAACG,MAAM,EAAEqC,CAAC,EAAE,EAAE;IAC5C,IAAIhB,KAAK,GAAG6D,KAAK,CAACrF,MAAM,CAACwC,CAAC,CAAC;IAC3B,IAAIuM,IAAI,GAAG1J,KAAK,CAACrF,MAAM,CAACwC,CAAC,GAAG,CAAC,CAAC;IAC9B,IAAIoU,IAAI,GACN7H,IAAI,CAACvJ,IAAI,KAAK,gBAAgB,IAAIuJ,IAAI,CAACvG,KAAK,KAAK,CAAC,GAAG8N,MAAM,GAAGC,MAAM;IAEtE,IAAI/U,KAAK,CAACgE,IAAI,KAAK,QAAQ,EAAE;MAC3B,IAAIpD,QAAQ,GAAGZ,KAAK,CAACY,QAAQ;MAC7B,KAAK,IAAIsF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtF,QAAQ,CAACjC,MAAM,GAAG,CAAC,EAAEuH,CAAC,EAAE,EAAE;QAC5C,IAAImP,KAAK,GAAGzU,QAAQ,CAACsF,CAAC,CAAC;QAEvB,IACEmP,KAAK,CAACrR,IAAI,KAAK,WAAW,IAC1BqR,KAAK,CAAC7M,MAAM,KAAK,SAAS,IAC1B6M,KAAK,CAAC/X,IAAI,KAAK,MAAM,EACrB;UACA,IAAI4I,CAAC,GAAGtF,QAAQ,CAACjC,MAAM,GAAG,CAAC,EAAE;YAC3B;UACF;UAEA,IAAIuH,CAAC,KAAK,CAAC,IAAIlG,KAAK,CAAC2U,aAAa,EAAE;YAClCS,IAAI,GAAGL,MAAM;UACf,CAAC,MAAM,IAAI7O,CAAC,GAAG,CAAC,EAAE;YAChB,IAAIoP,WAAW,GAAG1U,QAAQ,CAACsF,CAAC,GAAG,CAAC,CAAC;YACjC,IAAIoP,WAAW,CAACzS,GAAG,KAAK,IAAI,IAAIyS,WAAW,CAACX,aAAa,EAAE;cACzDS,IAAI,GAAGL,MAAM;YACf;UACF;;UAEA;UACA,IAAIlG,IAAI,GAAGjO,QAAQ,CAACsF,CAAC,GAAG,CAAC,CAAC;UAC1B,IAAI8B,KAAK,GAAGpH,QAAQ,CAACsF,CAAC,GAAG,CAAC,CAAC;UAC3B,IAAIqP,SAAS,GAAG3U,QAAQ,CAACsF,CAAC,GAAG,CAAC,CAAC;UAE/B,IAAIqP,SAAS,IAAIA,SAAS,CAAC1S,GAAG,KAAK,IAAI,EAAE;YACvCuS,IAAI,GAAGL,MAAM;UACf;;UAEA;UACA,IAAIpT,KAAK,GAAG0T,KAAK,CAAC1T,KAAK;UAEvB,IAAI,CAACA,KAAK,IAAIA,KAAK,CAAChD,MAAM,KAAK,CAAC,IAAIgD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;YAC1D;UACF;UAEA,IAAIsT,IAAI,GAAGtT,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEtB;UACA,IAAI,CAAC,cAAc,CAAC9B,IAAI,CAACoV,IAAI,CAAC,EAAE;YAC9B;UACF;;UAEA;UACA,IAAI,CAACjN,KAAK,IAAIA,KAAK,CAAChE,IAAI,KAAK,YAAY,EAAE;YACzC;UACF;UAEA,IAAIoR,IAAI,KAAKN,MAAM,EAAE;YACnB;YACA,IAAIU,MAAM,GAAGX,uEAAW,CAAClT,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAErC,IAAI6T,MAAM,EAAE;cACV;cACAH,KAAK,CAACrR,IAAI,GAAG,UAAU;cACvBqR,KAAK,CAAC3W,OAAO,GAAG8W,MAAM;cACtBH,KAAK,CAAC/R,MAAM,GAAG,IAAI;cACnB+R,KAAK,CAAC/L,MAAM,GAAG,IAAI;cAEnBuF,IAAI,CAAC7K,IAAI,GAAG,UAAU;cACtB6K,IAAI,CAACnQ,OAAO,GAAG,EAAE;cACjBmQ,IAAI,CAACvL,MAAM,GAAG,IAAI;cAElB0E,KAAK,CAAChE,IAAI,GAAG,UAAU;cACvBgE,KAAK,CAACtJ,OAAO,GAAG,EAAE;cAClBsJ,KAAK,CAAC1E,MAAM,GAAG,IAAI;YACrB,CAAC,MAAM;cACL;cACA3B,KAAK,CAACC,IAAI,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;cAC/BD,KAAK,CAACC,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAClC;UACF,CAAC,MAAM,IAAIwT,IAAI,KAAKL,MAAM,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,EAAE;YAC/C,MAAM3L,MAAM,GAAGsL,+EAAkB,CAACK,IAAI,CAAC;YAEvC,IAAI3L,MAAM,IAAIA,MAAM,CAAC6D,KAAK,EAAE;cAC1B0B,IAAI,CAACnQ,OAAO,GAAG4K,MAAM,CAAC6D,KAAK;cAC3BxL,KAAK,CAACC,IAAI,CAAC,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;YACxC,CAAC,MAAM,IAAI,CAAC0H,MAAM,EAAE;cAClB3H,KAAK,CAACC,IAAI,CAAC,CAAC,OAAO,EAAE,uBAAuB,CAAC,CAAC;YAChD;UACF;QACF;MACF;IACF;EACF;AACF;AAEO,SAAS3E,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACL,IAAI,CAACF,KAAK,CAACgE,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE8N,WAAW,CAAC;EACvD,CAAC,CAAC;AACJ;;;;;;;;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA,SAASrB,SAASA,CAACjQ,KAAK,EAAEyB,SAAS,CAAC,eAAe;EACjD,IAAI5G,OAAO;IACT+W,SAAS;IACTzU,CAAC;IACD0U,CAAC;IACD1V,KAAK;IACLmR,aAAa;IACb9K,QAAQ,GAAGf,SAAS,GAAG,CAAC;IACxBqQ,eAAe,GAAG9R,KAAK,CAACD,EAAE,CAACT,KAAK,CAACE,KAAK,CAACV,QAAQ,CAAC,WAAW,CAAC;IAC5D4C,OAAO,GAAG1B,KAAK,CAAC8C,OAAO;IACvBiP,eAAe,GAAG,KAAK;EAEzBzE,aAAa,GAAGtN,KAAK,CAAC6C,UAAU;EAChC7C,KAAK,CAAC6C,UAAU,GAAG,WAAW;;EAE9B;EACA,OAAOL,QAAQ,GAAGd,OAAO,IAAI,CAAC1B,KAAK,CAACgS,OAAO,CAACxP,QAAQ,CAAC,EAAEA,QAAQ,EAAE,EAAE;IACjE;IACA;IACA,IAAIxC,KAAK,CAACiC,MAAM,CAACO,QAAQ,CAAC,GAAGxC,KAAK,CAACkC,SAAS,GAAG,CAAC,EAAE;MAChD;IACF;;IAEA;IACA,IAAIlC,KAAK,CAACiC,MAAM,CAACO,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC9B;IACF;;IAEA;IACAoP,SAAS,GAAG,KAAK;IACjB,KAAKzU,CAAC,GAAG,CAAC,EAAE0U,CAAC,GAAGC,eAAe,CAAChX,MAAM,EAAEqC,CAAC,GAAG0U,CAAC,EAAE1U,CAAC,EAAE,EAAE;MAClD,IAAI2U,eAAe,CAAC3U,CAAC,CAAC,CAAC6C,KAAK,EAAEwC,QAAQ,EAAEd,OAAO,EAAE,IAAI,CAAC,EAAE;QACtDkQ,SAAS,GAAG,IAAI;QAChB;MACF;IACF;IACA,IAAIA,SAAS,EAAE;MACb;IACF;EACF;;EAEA;EACA/W,OAAO,GAAGmF,KAAK,CAACiS,QAAQ,CAACxQ,SAAS,EAAEe,QAAQ,EAAExC,KAAK,CAACkC,SAAS,EAAE,KAAK,CAAC;EAErE/E,CAAC,GAAG,CAAC;EACL,IAAI+U,aAAa,GAAGrX,OAAO,CAACC,MAAM;EAClC,OAAOqC,CAAC,GAAG+U,aAAa,EAAE;IACxB,IAAIC,GAAG,GAAGtX,OAAO,CAACgG,UAAU,CAAC1D,CAAC,CAAC;IAC/B,IAAIgV,GAAG,KAAK,IAAI,EAAE;MAChBJ,eAAe,GAAG,KAAK;IACzB,CAAC,MAAM,IAAI/R,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAACmG,YAAY,CAAC2R,GAAG,CAAC,EAAE;MAC3CJ,eAAe,GAAG,IAAI;IACxB,CAAC,MAAM;MACL;IACF;IACA5U,CAAC,EAAE;EACL;EAEAtC,OAAO,GAAGA,OAAO,CAACX,IAAI,CAAC,CAAC;EACxB;;EAEA8F,KAAK,CAAC4B,IAAI,GAAGY,QAAQ;EAErBrG,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC;EAC5C5B,KAAK,CAACmH,GAAG,GAAG,CAAC7B,SAAS,EAAEzB,KAAK,CAAC4B,IAAI,CAAC;EACnC;EACAzF,KAAK,CAAC2U,aAAa,GAAGiB,eAAe;EAErC5V,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;EACnC5B,KAAK,CAACtB,OAAO,GAAGA,OAAO;EACvBsB,KAAK,CAACmH,GAAG,GAAG,CAAC7B,SAAS,EAAEzB,KAAK,CAAC4B,IAAI,CAAC;EACnCzF,KAAK,CAACY,QAAQ,GAAG,EAAE;EACnB;EACAZ,KAAK,CAAC2U,aAAa,GAAGiB,eAAe;EAErC/R,KAAK,CAACjC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;EAEtCiC,KAAK,CAAC6C,UAAU,GAAGyK,aAAa;EAChC,OAAO,IAAI;AACb;AAEO,SAASlU,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACT,KAAK,CAACE,KAAK,CAACqE,EAAE,CAAC,WAAW,EAAEoM,SAAS,CAAC;EAC3C,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;AC1FyD;AAEzD,MAAM7Q,IAAI,GAAG;EACXJ,GAAG,EAAE,OAAO;EAEZgE,MAAMA,CAAChD,KAAK,EAAEyD,OAAO,EAAE;IACrB,MAAM3F,KAAK,GAAG2F,OAAO,CAAC3F,KAAK;IAC3B,IAAIvG,OAAO,GAAGyI,KAAK,CAACD,EAAE,CAACxI,OAAO,CAACM,SAAS;IAExC,IAAIwa,SAAS,GAAGvU,KAAK,CAAC,UAAU,CAAC;IACjC,IAAIyS,QAAQ,EACV+B,UAAU,EACVC,OAAO,EACPC,SAAS,EACTC,gBAAgB,EAChBC,IAAI,EACJC,WAAW;IAEb,IAAIN,SAAS,EAAE;MACb,IAAIra,KAAK,GAAGqa,SAAS,CAACra,KAAK,CAAC,OAAO,CAAC;MACpCuY,QAAQ,GAAGvY,KAAK,CAAC,CAAC,CAAC;MAEnB,IAAImF,CAAC;MACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnF,KAAK,CAAC8C,MAAM,EAAEqC,CAAC,EAAE,EAAE;QACjC,IAAInF,KAAK,CAACmF,CAAC,CAAC,CAACyV,UAAU,CAAC,OAAO,CAAC,EAAE;UAChCN,UAAU,GAAG5U,QAAQ,CAAC1F,KAAK,CAACmF,CAAC,CAAC,CAACrB,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;UAC5C;QACF;QAEA,IAAI9D,KAAK,CAACmF,CAAC,CAAC,CAACyV,UAAU,CAAC,QAAQ,CAAC,EAAE;UACjCL,OAAO,GAAG7U,QAAQ,CAAC1F,KAAK,CAACmF,CAAC,CAAC,CAACrB,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;UACzC;QACF;QAEA,IAAI,cAAc,CAACE,IAAI,CAAChE,KAAK,CAACmF,CAAC,CAAC,CAAC,EAAE;UACjCuV,IAAI,GAAG,IAAI;UACX;QACF;;QAEA;QACA;QACA,IAAI1a,KAAK,CAACmF,CAAC,CAAC,CAACyV,UAAU,CAAC,WAAW,CAAC,EAAE;UACpC;UACA;UACAD,WAAW,GAAG3a,KAAK,CAAC8D,KAAK,CAAC,CAAC,EAAE9D,KAAK,CAAC6D,OAAO,CAAE,QAAOyW,UAAW,EAAC,CAAC,CAAC;;UAEjE;UACA,IAAIK,WAAW,CAAC7X,MAAM,GAAG,CAAC,EAAE;YAC1B6X,WAAW,GAAGA,WAAW,CAAC1U,IAAI,CAAC,IAAI,CAAC;UACtC;;UAEA;UACAsS,QAAQ,GAAGvY,KAAK,CAACmF,CAAC,CAAC,CAACrB,KAAK,CAAC,CAAC,CAAC;UAC5B;QACF;MACF;IACF;IAEA,IAAIvE,OAAO,CAACsb,wBAAwB,EAAE;MACpC;MACAL,SAAS,GAAGjb,OAAO,CAACsb,wBAAwB,CAACP,UAAU,EAAEC,OAAO,CAAC;IACnE,CAAC,MAAM,IAAIhb,OAAO,CAACub,YAAY,EAAE;MAC/B;MACAN,SAAS,GAAGjb,OAAO,CAACub,YAAY,CAACvC,QAAQ,CAAC;IAC5C;IAEA,IAAIhZ,OAAO,CAACwb,kCAAkC,EAAE;MAC9C;MACAN,gBAAgB,GAAGlb,OAAO,CAACwb,kCAAkC,CAC3DT,UAAU,EACVC,OACF,CAAC;IACH,CAAC,MAAM,IAAIhb,OAAO,CAACyb,sBAAsB,EAAE;MACzC;MACAP,gBAAgB,GAAGlb,OAAO,CAACyb,sBAAsB,CAACzC,QAAQ,CAAC;IAC7D;IAEA,IAAIhZ,OAAO,CAAC0b,cAAc,EAAE;MAC1BN,WAAW,GAAGA,WAAW,IAAIpb,OAAO,CAAC0b,cAAc,CAAC1C,QAAQ,CAAC;IAC/D,CAAC,MAAM;MACLoC,WAAW,GAAGA,WAAW,IAAIpC,QAAQ;IACvC;IAEA,IAAIpU,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,CAAC,CAAC;IACjD5B,KAAK,CAAC2B,KAAK,GAAG,EAAE;IAEhB,IAAI2U,gBAAgB,IAAIA,gBAAgB,CAAC3X,MAAM,KAAK,CAAC,EAAE;MACrDqB,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,OAAO,EAAG,eAAc0U,gBAAiB,EAAC,CAAC,CAAC;IAChE,CAAC,MAAM;MACLtW,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;IAC/C;IAEA,IAAIwS,QAAQ,EAAE;MACZpU,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,eAAe,EAAEwS,QAAQ,CAAC,CAAC;IAC/C;IAEA,IAAI+B,UAAU,EAAE;MACdnW,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,WAAW,EAAEuU,UAAU,CAAC,CAAC;IAC7C;IAEA,IAAIC,OAAO,EAAE;MACXpW,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,YAAY,EAAEwU,OAAO,CAAC,CAAC;IAC3C;IAEA,IAAIG,IAAI,EAAE;MACRvW,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IACzC;IAEA,IAAIwS,QAAQ,EAAE;MACZ,IAAI2C,aAAa,GAAG3b,OAAO,CAACgb,OAAO,IAAIA,OAAO,KAAKhb,OAAO,CAACgb,OAAO;MAClE,IAAIY,aAAa,GACfb,UAAU,IACV/a,OAAO,CAAC6b,YAAY,KACnBF,aAAa,IAAI3b,OAAO,CAAC8b,cAAc,CAAC;;MAE3C;MACAlX,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,mBAAmB,EAAE,KAAK,EAAE,CAAC,CAAC;MACjD5B,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;MAElC3B,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,qBAAqB,EAAE,KAAK,EAAE,CAAC,CAAC;MACnD5B,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;MAE3CkC,KAAK,CAACjC,IAAI,CAAC,sBAAsB,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;MAE7C,IAAIyU,SAAS,EAAE;QACbrW,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;QACxC5B,KAAK,CAACtB,OAAO,GAAG2X,SAAS;MAC3B;MAEA,IAAIW,aAAa,EAAE;QACjB,MAAMG,SAAS,GAAG/b,OAAO,CAAC6b,YAAY,CAACb,OAAO,CAAC;QAC/C,IAAIe,SAAS,EAAE;UACb,IAAIlC,IAAI,GAAGkC,SAAS,CAAClC,IAAI;UACzB,IAAIkB,UAAU,GAAG,CAAC,EAAE;YAClBlB,IAAI,IAAI,GAAG,GAAGkB,UAAU;UAC1B;UAEA,IAAIhJ,KAAK,GAAGgK,SAAS,CAAChK,KAAK;UAE3B,IAAI/R,OAAO,CAACgc,WAAW,EAAE;YACvBjK,KAAK,GAAG8I,uEAAoB,CAACkB,SAAS,CAAChK,KAAK,EAAE;cAC5CkK,MAAM,EAAEjc,OAAO,CAACic,MAAM;cACtB3H,QAAQ,EAAEtU,OAAO,CAACsU,QAAQ;cAC1BG,WAAW,EAAEzU,OAAO,CAACyU,WAAW;cAChCyH,oBAAoB,EAAElc,OAAO,CAACkc,oBAAoB;cAClDhK,WAAW,EAAElS,OAAO,CAACkS,WAAW;cAChCiK,IAAI,EAAE;YACR,CAAC,CAAC;UACJ;UAEAvX,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;UACvC5B,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,MAAM,EAAEsT,IAAI,CAAC,CAAC;UAC9BjV,KAAK,CAACmD,KAAK,GAAG,KAAK;UAEnBnD,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;UACxC5B,KAAK,CAACtB,OAAO,GAAGyO,KAAK;UAErBnN,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;UACzC5B,KAAK,CAACmD,KAAK,GAAG,KAAK;QACrB;MACF,CAAC,MAAM;QACLnD,KAAK,GAAG6D,KAAK,CAACjC,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;QACjC5B,KAAK,CAACtB,OAAO,GAAI,IAAG8X,WAAY,GAAE;MACpC;MAEA3S,KAAK,CAACjC,IAAI,CAAC,oBAAoB,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC7C;IAEAiC,KAAK,CAACjC,IAAI,CAAC,aAAa,EAAE,YAAY,EAAE,CAAC,CAAC;EAC5C,CAAC;EAEDyF,KAAKA,CAACxD,KAAK,EAAE;IACXA,KAAK,CAACjC,IAAI,CAAC,cAAc,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;IAC5CiC,KAAK,CAACjC,IAAI,CAAC,cAAc,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;EACzC;AACF,CAAC;AAEM,SAAS3E,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACiF,eAAe,CAAC,CAACC,IAAI,EAAEkC,YAAY,KAAK;IAC7ClC,IAAI,CAACyO,WAAW,GAAGvM,YAAY,CAACyE,YAAY;IAC5C3G,IAAI,CAAC+G,QAAQ,GAAG7E,YAAY,CAAC8E,SAAS;IACtChH,IAAI,CAACkH,WAAW,GAAGhF,YAAY,CAACiF,kBAAkB;IAClDnH,IAAI,CAAC2O,oBAAoB,GAAGzM,YAAY,CAAC2E,sBAAsB;IAC/D7G,IAAI,CAAC2E,WAAW,GAAGzC,YAAY,CAAC4E,+BAA+B;EACjE,CAAC,CAAC;EAEFhM,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACT,KAAK,CAACC,MAAM,CAACC,KAAK,CAACzB,IAAI,CAAC,QAAQ,EAAEqB,IAAI,CAAC;EAC5C,CAAC,CAAC;EAEFQ,MAAM,CAACgF,SAAS,CAAC,CAAC,mBAAmB,EAAE,mBAAmB,CAAC,CAAC;EAC5DhF,MAAM,CAACgF,SAAS,CAAC;IACfsC,MAAMA,CAAClI,GAAG,EAAEK,IAAI,EAAEpD,KAAK,EAAE;MACvB,IAAI+C,GAAG,KAAK,OAAO,IAAIK,IAAI,KAAK,OAAO,EAAE;QACvC,OACEpD,KAAK,KAAK,gBAAgB,IAAI,CAAC,CAAC,qBAAqB,CAACqF,IAAI,CAACrF,KAAK,CAAC;MAErE;IACF;EACF,CAAC,CAAC;AACJ;;;;;;;;;;;;;;ACxMO,SAAS7C,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACxE,QAAQ,CAACC,KAAK,CAACmY,UAAU,GAAG,YAAY;MACzC,OAAO,mCAAmC;IAC5C,CAAC;IAED5T,EAAE,CAACxE,QAAQ,CAACC,KAAK,CAACoY,WAAW,GAAG,YAAY;MAC1C,OAAO,kBAAkB;IAC3B,CAAC;EACH,CAAC,CAAC;;EAEF;EACAhU,MAAM,CAACgF,SAAS,CAAC;IACfsC,MAAMA,CAAClI,GAAG,EAAEuM,IAAI,EAAElK,GAAG,EAAE;MACrB,IAAIrC,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,EAAE;QAChC,OAAO,KAAK;MACd;MAEA,IAAIuM,IAAI,KAAK,OAAO,EAAE;QACpB,OAAO,KAAK;MACd;MAEA,OACElK,GAAG,KAAK,kBAAkB,IAC1BA,GAAG,KAAK,iBAAiB,IACzBA,GAAG,KAAK,mBAAmB;IAE/B;EACF,CAAC,CAAC;EAEFzB,MAAM,CAACgF,SAAS,CAAC,CACf,OAAO,EACP,OAAO,EACP,OAAO,EACP,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,cAAc,CACf,CAAC;AACJ;;;;;;;;;;;;;;;ACvCO,MAAMvN,oBAAoB,CAAC;EAChCwH,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACrD,KAAK,GAAG,EAAE;EACjB;EAEAsD,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACtD,KAAK;EACnB;;EAEA;EACAqY,UAAUA,CAAA,EAAG;IACX,IAAI,IAAI,CAAC9G,OAAO,EAAE;MAChB,OAAO,IAAI,CAACA,OAAO;IACrB;IAEA,IAAI,CAAC+G,YAAY,GAAG,EAAE;IAEtB,MAAMtY,KAAK,GAAG,EAAE;IAChB,MAAMuY,KAAK,GAAG,IAAIC,GAAG,CAAC,GAAG,CAAC;IAE1B,IAAI,CAACxY,KAAK,CAAChC,OAAO,CAAE0R,CAAC,IAAK;MACxB,MAAM6B,OAAO,GAAG7B,CAAC,CAAC9L,IAAI,CAAC2N,OAAO;MAC9BvR,KAAK,CAACuC,IAAI,CAAE,IAAGgP,OAAO,CAACkH,MAAO,GAAE,CAAC;MACjClH,OAAO,CAACgH,KAAK,CAAC/b,KAAK,CAAC,EAAE,CAAC,CAACwB,OAAO,CAAE0a,CAAC,IAAKH,KAAK,CAACI,GAAG,CAACD,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC;IAEF,IAAI/W,CAAC;IACL,IAAIiX,WAAW,GAAG,EAAE;IACpB,IAAIC,IAAI,GAAG,CAAC;;IAEZ;IACA;IACA,KAAKlX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3B,KAAK,CAACV,MAAM,EAAEqC,CAAC,EAAE,EAAE;MACjC,IAAI,CAAC2W,YAAY,CAAC3W,CAAC,CAAC,GAAGkX,IAAI;MAE3B,IAAIlX,CAAC,KAAK3B,KAAK,CAACV,MAAM,GAAG,CAAC,EAAE;QAC1B;MACF;MAEA,IAAIqC,CAAC,GAAG,CAAC,EAAE;QACTiX,WAAW,GAAGA,WAAW,GAAG,GAAG;MACjC;MACAA,WAAW,GAAGA,WAAW,GAAG5Y,KAAK,CAAC2B,CAAC,CAAC;MAEpC,IAAIyN,KAAK,GAAG,IAAItP,MAAM,CAAC8Y,WAAW,GAAG,MAAM,CAAC;MAC5CC,IAAI,GAAG,GAAG,CAACjX,KAAK,CAACwN,KAAK,CAAC,CAAC9P,MAAM,GAAG,CAAC;IACpC;IAEA,IAAI,CAACiS,OAAO,GAAG,IAAIzR,MAAM,CAACE,KAAK,CAACyC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG8V,KAAK,CAAC,CAAC9V,IAAI,CAAC,EAAE,CAAC,CAAC;IAC/D,OAAO,IAAI,CAAC8O,OAAO;EACrB;EAEAuH,SAASA,CAAC9H,MAAM,EAAEpP,KAAK,EAAE4C,KAAK,EAAE;IAC9B,IAAI7C,CAAC;IACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC3B,KAAK,CAACV,MAAM,EAAEqC,CAAC,EAAE,EAAE;MACtC,IAAIiO,KAAK,GAAG,IAAI,CAAC0I,YAAY,CAAC3W,CAAC,CAAC;MAEhC,IAAIC,KAAK,CAACgO,KAAK,CAAC,EAAE;QAChB,IAAI,CAAC5P,KAAK,CAAC2B,CAAC,CAAC,CAACiC,IAAI,CAAC4N,OAAO,CACxBR,MAAM,EACNpP,KAAK,CAACtB,KAAK,CAACsP,KAAK,EAAE,IAAI,CAAC0I,YAAY,CAAC3W,CAAC,GAAG,CAAC,CAAC,CAAC,EAC5C6C,KACF,CAAC;QACD;MACF;IACF;EACF;;EAEA;EACAjC,IAAIA,CAACsB,IAAI,EAAED,IAAI,EAAE;IACf,IAAI,CAAC5D,KAAK,CAACuC,IAAI,CAAC;MAAEsB,IAAI;MAAED;IAAK,CAAC,CAAC;IAC/B,IAAI,CAAC2N,OAAO,GAAG,IAAI;EACrB;AACF;AAEA,SAASwH,eAAeA,CAAC1Z,OAAO,EAAEuQ,KAAK,EAAE/Q,KAAK,EAAE;EAC9C,IAAIuG,IAAI,GAAG/F,OAAO,CAACgG,UAAU,CAACuK,KAAK,CAAC;EACpC,OACE/Q,KAAK,CAACmG,YAAY,CAACI,IAAI,CAAC,IAAIvG,KAAK,CAACuP,WAAW,CAAC3D,MAAM,CAACC,YAAY,CAACtF,IAAI,CAAC,CAAC;AAE5E;AAEA,SAASjB,eAAeA,CAAC9E,OAAO,EAAEmF,KAAK,EAAER,KAAK,EAAE;EAC9C,IAAIiL,MAAM,GAAG,IAAI;EACjB,IAAIrN,KAAK;EACT,IAAIuG,GAAG,GAAG,CAAC;EAEX,MAAMoJ,OAAO,GAAGvN,KAAK,CAACqU,UAAU,CAAC,CAAC;EAElC,OAAQzW,KAAK,GAAG2P,OAAO,CAACzL,IAAI,CAACzG,OAAO,CAAC,EAAG;IACtC;IACA,IAAIuC,KAAK,CAACgO,KAAK,GAAGzH,GAAG,EAAE;MACrB;IACF;;IAEA;IACA,IAAIvG,KAAK,CAACgO,KAAK,GAAG,CAAC,EAAE;MACnB,IAAI,CAACmJ,eAAe,CAAC1Z,OAAO,EAAEuC,KAAK,CAACgO,KAAK,GAAG,CAAC,EAAEpL,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAAC,EAAE;QAC9D;MACF;IACF;;IAEA;IACA,IAAI+C,KAAK,CAACgO,KAAK,GAAGhO,KAAK,CAAC,CAAC,CAAC,CAACtC,MAAM,GAAGD,OAAO,CAACC,MAAM,EAAE;MAClD,IACE,CAACyZ,eAAe,CAAC1Z,OAAO,EAAEuC,KAAK,CAACgO,KAAK,GAAGhO,KAAK,CAAC,CAAC,CAAC,CAACtC,MAAM,EAAEkF,KAAK,CAACD,EAAE,CAAC1F,KAAK,CAAC,EACxE;QACA;MACF;IACF;IAEAoQ,MAAM,GAAGA,MAAM,IAAI,EAAE;IAErB,IAAIrN,KAAK,CAACgO,KAAK,GAAGzH,GAAG,EAAE;MACrB,IAAIxH,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;MAC1ClE,KAAK,CAACtB,OAAO,GAAGA,OAAO,CAACiB,KAAK,CAAC6H,GAAG,EAAEvG,KAAK,CAACgO,KAAK,CAAC;MAC/CX,MAAM,CAAC1M,IAAI,CAAC5B,KAAK,CAAC;IACpB;IAEAqD,KAAK,CAAC8U,SAAS,CAAC7J,MAAM,EAAErN,KAAK,EAAE4C,KAAK,CAAC;IAErC2D,GAAG,GAAGvG,KAAK,CAACgO,KAAK,GAAGhO,KAAK,CAAC,CAAC,CAAC,CAACtC,MAAM;EACrC;EAEA,IAAI2P,MAAM,IAAI9G,GAAG,GAAG9I,OAAO,CAACC,MAAM,EAAE;IAClC,IAAIqB,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1ClE,KAAK,CAACtB,OAAO,GAAGA,OAAO,CAACiB,KAAK,CAAC6H,GAAG,CAAC;IAClC8G,MAAM,CAAC1M,IAAI,CAAC5B,KAAK,CAAC;EACpB;EAEA,OAAOsO,MAAM;AACf;AAEO,SAASrR,KAAKA,CAACwG,MAAM,EAAE;EAC5BA,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5B,MAAMP,KAAK,GAAGO,EAAE,CAACL,IAAI,CAACC,eAAe,CAACH,KAAK;IAC3C,MAAMgV,QAAQ,GAAGA,CAAC3Z,OAAO,EAAEmF,KAAK,KAAKL,eAAe,CAAC9E,OAAO,EAAEmF,KAAK,EAAER,KAAK,CAAC;IAE3EO,EAAE,CAACL,IAAI,CAACF,KAAK,CAACzB,IAAI,CAAC,mBAAmB,EAAGiC,KAAK,IAC5CD,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACqU,OAAO,CAACC,WAAW,CAACnM,KAAK,EAAEwU,QAAQ,EAAE,IAAI,CAChE,CAAC;EACH,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;AC9IsB;AAEtB,MAAME,UAAU,GAAG,CAAC,YAAY,EAAE,aAAa,CAAC;;AAEhD;AACA,SAASC,QAAQA,CAACC,OAAO,EAAEzY,KAAK,EAAE;EAChC,IAAIA,KAAK,CAAC2B,KAAK,EAAE;IACf,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,KAAK,CAAC2B,KAAK,CAAChD,MAAM,EAAEqC,CAAC,EAAE,EAAE;MAC3C,MAAMlB,KAAK,GAAGE,KAAK,CAAC2B,KAAK,CAACX,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,IAAIlB,KAAK,EAAE2W,UAAU,CAAC,WAAW,CAAC,EAAE;QAClCgC,OAAO,CAAC7W,IAAI,CAAC;UAAE5B,KAAK;UAAE0Y,QAAQ,EAAE1X,CAAC;UAAEb,OAAO,EAAEL;QAAM,CAAC,CAAC;QACpD;MACF;IACF;EACF;AACF;AAEA,SAASsP,IAAIA,CAAClM,IAAI,EAAEpD,KAAK,EAAE;EACzB,IAAIA,KAAK,EAAE;IACT,OAAQ,GAAEoD,IAAK,KAAIoV,0DAAmB,CAACxY,KAAK,CAAE,GAAE;EAClD;EAEA,OAAOoD,IAAI;AACb;AAEA,SAAS0V,mBAAmBA,CAAC7P,GAAG,EAAE;EAChC,OAAQ,yBAAwBA,GAAI,KAAI;AAC1C;AAEA,SAAS8P,iBAAiBA,CAACJ,OAAO,EAAExG,UAAU,EAAE;EAC9C;EACA;EACA;EACA;EACA,IAAI6G,UAAU,GAAG,KAAK;EACtB,IAAIrQ,SAAS;EAEb,MAAMqG,MAAM,GAAG,IAAIwJ,sDAAa,CAAC;IAC/B7P,SAAS,EAAE,EAAE;IACbuQ,eAAe,EAAE,IAAI;IACrBC,KAAKA,CAACpW,GAAG,EAAEmO,IAAI,EAAE1T,IAAI,EAAE;MACrB;MACAA,IAAI,CAAC4b,OAAO,GAAG,IAAI;MACnBzQ,SAAS,CAAC5F,GAAG,CAAC,GAAG,EAAE;IACrB,CAAC;IACDsW,SAASA,CAACtW,GAAG,EAAEK,IAAI,EAAEpD,KAAK,EAAE;MAC1B,IAAI+C,GAAG,KAAK,KAAK,IAAIK,IAAI,KAAK,KAAK,IAAIpD,KAAK,CAAC2W,UAAU,CAAC,WAAW,CAAC,EAAE;QACpEgC,OAAO,CAAC7W,IAAI,CAAC;UAAE5B,KAAK,EAAEiS,UAAU;UAAEyG,QAAQ,EAAE,IAAI;UAAEvY,OAAO,EAAEL;QAAM,CAAC,CAAC;QACnEgZ,UAAU,GAAG,IAAI;QACjB,OAAOF,mBAAmB,CAAC9Y,KAAK,CAAC;MACnC;MACA,OAAOsP,IAAI,CAAClM,IAAI,EAAEpD,KAAK,CAAC;IAC1B;EACF,CAAC,CAAC;EAEF2I,SAAS,GAAGqG,MAAM,CAAC1T,OAAO,CAACge,SAAS;EACpC,MAAMC,UAAU,GAAGvK,MAAM,CAACwK,OAAO,CAACrH,UAAU,CAACvT,OAAO,CAAC;EAErD,IAAIoa,UAAU,EAAE;IACd7G,UAAU,CAACvT,OAAO,GAAG2a,UAAU;EACjC;AACF;AAEA,SAASE,YAAYA,CAACd,OAAO,EAAEzY,KAAK,EAAE;EACpC,IAAIA,KAAK,CAAC6C,GAAG,KAAK,KAAK,IAAI7C,KAAK,CAAC6C,GAAG,KAAK,GAAG,EAAE;IAC5C2V,QAAQ,CAACC,OAAO,EAAEzY,KAAK,CAAC;EAC1B,CAAC,MAAM,IAAIuY,UAAU,CAACvP,QAAQ,CAAChJ,KAAK,CAACgE,IAAI,CAAC,EAAE;IAC1C6U,iBAAiB,CAACJ,OAAO,EAAEzY,KAAK,CAAC;EACnC;EAEA,IAAIA,KAAK,CAACY,QAAQ,EAAE;IAClB,KAAK,IAAIsF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlG,KAAK,CAACY,QAAQ,CAACjC,MAAM,EAAEuH,CAAC,EAAE,EAAE;MAC9C,MAAMsT,UAAU,GAAGxZ,KAAK,CAACY,QAAQ,CAACsF,CAAC,CAAC;MACpCqT,YAAY,CAACd,OAAO,EAAEe,UAAU,CAAC;IACnC;EACF;AACF;AAEA,SAASvW,IAAIA,CAACY,KAAK,EAAE;EACnB,IAAI4U,OAAO,GAAG,EAAE;EAEhB,KAAK,IAAIzX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6C,KAAK,CAACrF,MAAM,CAACG,MAAM,EAAEqC,CAAC,EAAE,EAAE;IAC5C,IAAIiR,UAAU,GAAGpO,KAAK,CAACrF,MAAM,CAACwC,CAAC,CAAC;IAEhCuY,YAAY,CAACd,OAAO,EAAExG,UAAU,CAAC;EACnC;EAEA,IAAIwG,OAAO,CAAC9Z,MAAM,GAAG,CAAC,EAAE;IACtB,IAAI8a,OAAO,GAAGhB,OAAO,CAACtR,GAAG,CAAEuS,CAAC,IAAKA,CAAC,CAACvZ,OAAO,CAAC;;IAE3C;IACA;IACA;IACA,IAAIwZ,MAAM,GAAG9V,KAAK,CAACD,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACke,gBAAgB;IACxD,IAAIC,QAAQ,GAAIF,MAAM,IAAIA,MAAM,CAACF,OAAO,CAAC,IAAK,CAAC,CAAC;IAEhDhB,OAAO,CAACpb,OAAO,CAAC,CAAC;MAAE2C,KAAK;MAAE0Y,QAAQ;MAAEvY;IAAQ,CAAC,KAAK;MAChD,IAAI2Z,MAAM,GAAGD,QAAQ,CAAC1Z,OAAO,CAAC;MAE9B,IAAIoY,UAAU,CAACvP,QAAQ,CAAChJ,KAAK,CAACgE,IAAI,CAAC,EAAE;QACnC,MAAM+V,OAAO,GAAGnB,mBAAmB,CAACzY,OAAO,CAAC;QAC5C,IAAIwB,KAAK,GAAG,EAAE;QAEd,IAAImY,MAAM,EAAE;UACVnY,KAAK,CAACC,IAAI,CACRwN,IAAI,CAAC,KAAK,EAAE0K,MAAM,CAAC/Q,GAAG,CAAC,EACvBqG,IAAI,CAAC,kBAAkB,EAAE0K,MAAM,CAACE,WAAW,CAC7C,CAAC;QACH,CAAC,MAAM;UACLrY,KAAK,CAACC,IAAI,CACRwN,IAAI,CACF,KAAK,EACLvL,KAAK,CAACD,EAAE,CAACxI,OAAO,CAACM,SAAS,CAAC2b,MAAM,CAAC,yBAAyB,CAC7D,CAAC,EACDjI,IAAI,CAAC,eAAe,EAAEjP,OAAO,CAC/B,CAAC;QACH;QAEAH,KAAK,CAACtB,OAAO,GAAGsB,KAAK,CAACtB,OAAO,CAACQ,OAAO,CAAC6a,OAAO,EAAEpY,KAAK,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;MACjE,CAAC,MAAM,IAAI9B,KAAK,CAAC6C,GAAG,KAAK,KAAK,EAAE;QAC9B,IAAIiX,MAAM,EAAE;UACV9Z,KAAK,CAAC2B,KAAK,CAAC+W,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAGoB,MAAM,CAAC/Q,GAAG;UACrC/I,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,kBAAkB,EAAEkY,MAAM,CAACE,WAAW,CAAC,CAAC;QAC5D,CAAC,MAAM;UACL;UACA,IAAIha,KAAK,CAACtB,OAAO,CAACuC,KAAK,CAAC,iBAAiB,CAAC,EAAE;YAC1CjB,KAAK,CAAC2B,KAAK,CAAC+W,QAAQ,CAAC,CAAC,CAAC,CAAC,GACtB7U,KAAK,CAACD,EAAE,CAACxI,OAAO,CAACM,SAAS,CAAC2b,MAAM,CAAC,MAAM,CAAC;UAC7C,CAAC,MAAM;YACLrX,KAAK,CAAC2B,KAAK,CAAC+W,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG7U,KAAK,CAACD,EAAE,CAACxI,OAAO,CAACM,SAAS,CAAC2b,MAAM,CAC1D,yBACF,CAAC;UACH;UAEArX,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,eAAe,EAAEzB,OAAO,CAAC,CAAC;QAC9C;MACF,CAAC,MAAM,IAAIH,KAAK,CAAC6C,GAAG,KAAK,GAAG,EAAE;QAC5B,IAAIiX,MAAM,EAAE;UACV;UACA;UACA,IACEjW,KAAK,CAACD,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACC,mBAAmB,CAACse,aAAa,KAC3DH,MAAM,CAAC/Q,GAAG,CAACC,QAAQ,CAAC,sBAAsB,CAAC,IAC1C8Q,MAAM,CAAC/Q,GAAG,CAACC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,EACxC;YACAhJ,KAAK,CAAC2B,KAAK,CAAC+W,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAGoB,MAAM,CAAC/Q,GAAG;UACvC,CAAC,MAAM;YACL/I,KAAK,CAAC2B,KAAK,CAAC+W,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAGoB,MAAM,CAACI,UAAU;UAC9C;QACF,CAAC,MAAM;UACLla,KAAK,CAAC2B,KAAK,CAAC+W,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG7U,KAAK,CAACD,EAAE,CAACxI,OAAO,CAACM,SAAS,CAAC2b,MAAM,CAAC,MAAM,CAAC;UAEpErX,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,gBAAgB,EAAEzB,OAAO,CAAC,CAAC;QAC/C;MACF;IACF,CAAC,CAAC;EACJ;AACF;AAEO,SAASlD,KAAKA,CAACwG,MAAM,EAAE;EAC5B,MAAMkF,IAAI,GAAGlF,MAAM,CAACC,UAAU,CAAC,CAAC;EAChC,IAAIiF,IAAI,CAAC7H,UAAU,EAAE;IACnB2C,MAAM,CAACgF,SAAS,CAAC,CAAC,eAAe,CAAC,CAAC;EACrC;EAEAhF,MAAM,CAACgF,SAAS,CAAC,CACf,oBAAoB,EACpB,uBAAuB,EACvB,mBAAmB,CACpB,CAAC;EAEFhF,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5BA,EAAE,CAACL,IAAI,CAACF,KAAK,CAACzB,IAAI,CAAC,iBAAiB,EAAEqB,IAAI,CAAC;EAC7C,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;AC3K8C;AAE9C,MAAMoX,WAAW,GAAG,GAAG;AAEvB,SAASC,UAAUA,CAAC9a,GAAG,EAAE;EACvB,OAAO,WAAW,CAACK,IAAI,CAACL,GAAG,CAAC;AAC9B;AAEA,SAAS+a,WAAWA,CAAC/a,GAAG,EAAE;EACxB,OAAO,YAAY,CAACK,IAAI,CAACL,GAAG,CAAC;AAC/B;AAEA,SAASgb,cAAcA,CAAC3L,IAAI,EAAE4L,QAAQ,EAAE;EACtC,MAAMvQ,OAAO,GAAG,EAAE;EAElB,KAAK,MAAM;IAAEwQ,IAAI;IAAEC,OAAO;IAAE9Q,WAAW;IAAE+Q;EAAK,CAAC,IAAIH,QAAQ,EAAE;IAC3D,IAAIvQ,OAAO,CAACvL,MAAM,IAAI0b,WAAW,EAAE;MACjC;IACF;IAEA,IAAIK,IAAI,CAAC7a,IAAI,CAACgP,IAAI,CAAC,EAAE;MACnB,KAAK,MAAM5N,KAAK,IAAI4N,IAAI,CAACgM,QAAQ,CAACF,OAAO,CAAC,EAAE;QAC1CzQ,OAAO,CAACtI,IAAI,CAAC;UACXqN,KAAK,EAAEhO,KAAK,CAACgO,KAAK,GAAGhO,KAAK,CAAC,CAAC,CAAC,CAACvB,OAAO,CAACuB,KAAK,CAAC,CAAC,CAAC,CAAC;UAC/C4N,IAAI,EAAE5N,KAAK,CAAC,CAAC,CAAC;UACd4I,WAAW;UACX+Q;QACF,CAAC,CAAC;QAEF,IAAI1Q,OAAO,CAACvL,MAAM,IAAI0b,WAAW,EAAE;UACjC;QACF;MACF;IACF;EACF;EAEA,OAAOnQ,OAAO,CAAC4Q,IAAI,CAAC,CAACtd,CAAC,EAAEud,CAAC,KAAKvd,CAAC,CAACyR,KAAK,GAAG8L,CAAC,CAAC9L,KAAK,CAAC;AAClD;;AAEA;AACO,MAAM2D,QAAQ,GAAG,CAAC;AAEzB,MAAMoI,IAAI,GAAG,CAAC;AACd,MAAMC,OAAO,GAAG,CAAC;AACjB,MAAMC,YAAY,GAAG,CAAC;AACtB,MAAMC,YAAY,GAAG,CAAC;AACtB,MAAMC,iBAAiB,GAAG,CAAC;AAEpB,SAASne,KAAKA,CAACwG,MAAM,EAAE;EAC5B,MAAMkF,IAAI,GAAGlF,MAAM,CAACC,UAAU,CAAC,CAAC;EAEhCD,MAAM,CAACE,cAAc,CAAEC,EAAE,IAAK;IAC5B,MAAM6W,QAAQ,GAAG,EAAE;IAEnB,IAAI7W,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACyU,mBAAmB,EAAE;MAC5CrR,MAAM,CAACuc,OAAO,CAACzX,EAAE,CAACxI,OAAO,CAACM,SAAS,CAACyU,mBAAmB,CAAC,CAAC9S,OAAO,CAC9D,CAAC,CAACie,YAAY,EAAElgB,OAAO,CAAC,KAAK;QAC3B,MAAMsf,IAAI,GAAGN,mFAAa,CAAC;UAAE,CAACkB,YAAY,GAAGlgB;QAAQ,CAAC,CAAC;QAEvDqf,QAAQ,CAAC7Y,IAAI,CAAC;UACZ8Y,IAAI,EAAE,IAAIvb,MAAM,CAAC/D,OAAO,CAACmgB,MAAM,EAAEngB,OAAO,CAACogB,cAAc,GAAG,EAAE,GAAG,GAAG,CAAC;UACnEb,OAAO,EAAER,6FAAuB,CAACO,IAAI,CAAC;UACtC7Q,WAAW,EAAEzO,OAAO,CAACyO,WAAW;UAChC+Q,IAAI,EAAE;QACR,CAAC,CAAC;MACJ,CACF,CAAC;IACH;IAEA,IAAIhX,EAAE,CAACxI,OAAO,CAACM,SAAS,CAAC+f,gBAAgB,EAAE;MACzC3c,MAAM,CAACuc,OAAO,CAACzX,EAAE,CAACxI,OAAO,CAACM,SAAS,CAAC+f,gBAAgB,CAAC,CAACpe,OAAO,CAC3D,CAAC,CAACie,YAAY,EAAElgB,OAAO,CAAC,KAAK;QAC3B,MAAMsf,IAAI,GAAGN,mFAAa,CAAC;UAAE,CAACkB,YAAY,GAAGlgB;QAAQ,CAAC,CAAC;QAEvDqf,QAAQ,CAAC7Y,IAAI,CAAC;UACZ8Y,IAAI,EAAE,IAAIvb,MAAM,CAAC/D,OAAO,CAACmgB,MAAM,EAAEngB,OAAO,CAACogB,cAAc,GAAG,EAAE,GAAG,GAAG,CAAC;UACnEb,OAAO,EAAER,6FAAuB,CAACO,IAAI,CAAC;UACtC7Q,WAAW,EAAEzO,OAAO,CAACyO,WAAW;UAChC+Q,IAAI,EAAE;QACR,CAAC,CAAC;MACJ,CACF,CAAC;IACH;IAEA,IAAIH,QAAQ,CAAC9b,MAAM,KAAK,CAAC,EAAE;MACzB;IACF;IAEA,MAAMoE,KAAK,GAAG,IAAI2Y,GAAG,CAAC,CAAC;IAEvB9X,EAAE,CAACL,IAAI,CAACF,KAAK,CAACzB,IAAI,CAAC,eAAe,EAAGiC,KAAK,IAAK;MAC7C,KAAK,IAAIqC,CAAC,GAAG,CAAC,EAAEwP,CAAC,GAAG7R,KAAK,CAACrF,MAAM,CAACG,MAAM,EAAEuH,CAAC,GAAGwP,CAAC,EAAExP,CAAC,EAAE,EAAE;QACnD,IAAIrC,KAAK,CAACrF,MAAM,CAAC0H,CAAC,CAAC,CAAClC,IAAI,KAAK,QAAQ,EAAE;UACrC;QACF;QAEA,IAAIxF,MAAM,GAAGqF,KAAK,CAACrF,MAAM,CAAC0H,CAAC,CAAC,CAACtF,QAAQ;QAErC,IAAI+a,aAAa,GAAG,CAAC;;QAErB;QACA;QACA,IAAIC,QAAQ,GAAGZ,IAAI;QACnB,IAAIa,WAAW,GAAGb,IAAI;QACtB,KAAK,IAAIha,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxC,MAAM,CAACG,MAAM,EAAE,EAAEqC,CAAC,EAAE;UACtC,MAAM8a,YAAY,GAAGtd,MAAM,CAACwC,CAAC,CAAC;UAE9B,IAAI8a,YAAY,CAAC9X,IAAI,KAAK,cAAc,EAAE;YACxC4X,QAAQ,GAAGX,OAAO;UACpB,CAAC,MAAM,IACL,CAACa,YAAY,CAAC9X,IAAI,KAAK,WAAW,IAChC8X,YAAY,CAAC9X,IAAI,KAAK,WAAW,KACnC8X,YAAY,CAACna,KAAK,IAClBma,YAAY,CAACna,KAAK,CAACoa,IAAI,CACpB3M,IAAI,IACHA,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,KAClBA,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,IACpBA,IAAI,CAAC,CAAC,CAAC,KAAK,gBAAgB,IAC5BA,IAAI,CAAC,CAAC,CAAC,KAAK,aAAa,CAC/B,CAAC,EACD;YACAwM,QAAQ,GACNE,YAAY,CAAC9X,IAAI,KAAK,WAAW,GAAGkX,YAAY,GAAGC,YAAY;UACnE;UAEA,IACEW,YAAY,CAAC9X,IAAI,KAAK,WAAW,IACjC8X,YAAY,CAACna,KAAK,IAClBma,YAAY,CAACna,KAAK,CAACoa,IAAI,CACpB3M,IAAI,IACHA,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,0BACvC,CAAC,EACD;YACAyM,WAAW,GAAGT,iBAAiB;UACjC;UAEA,IAAIQ,QAAQ,KAAKZ,IAAI,EAAE;YACrBc,YAAY,CAACE,WAAW,GAAG,IAAI;UACjC;UAEA,IACGJ,QAAQ,KAAKX,OAAO,IAAIa,YAAY,CAAC9X,IAAI,KAAK,eAAe,IAC7D4X,QAAQ,KAAKV,YAAY,IAAIY,YAAY,CAAC9X,IAAI,KAAK,YAAa,IAChE4X,QAAQ,KAAKT,YAAY,IACxBW,YAAY,CAAC9X,IAAI,KAAK,YAAY,IAClC6X,WAAW,KAAKT,iBAAkB,EACpC;YACAQ,QAAQ,GAAGZ,IAAI;UACjB;QACF;;QAEA;QACA;QACA,KAAK,IAAIha,CAAC,GAAGxC,MAAM,CAACG,MAAM,GAAG,CAAC,EAAEqC,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC3C,MAAM8a,YAAY,GAAGtd,MAAM,CAACwC,CAAC,CAAC;;UAE9B;UACA,IAAI8a,YAAY,CAAC9X,IAAI,KAAK,YAAY,EAAE;YACtChD,CAAC,EAAE;YACH,OACExC,MAAM,CAACwC,CAAC,CAAC,CAACgG,KAAK,KAAK8U,YAAY,CAAC9U,KAAK,IACtCxI,MAAM,CAACwC,CAAC,CAAC,CAACgD,IAAI,KAAK,WAAW,EAC9B;cACAhD,CAAC,EAAE;YACL;YACA;UACF;;UAEA;UACA,IAAI8a,YAAY,CAAC9X,IAAI,KAAK,aAAa,EAAE;YACvC,IAAIsW,UAAU,CAACwB,YAAY,CAACpd,OAAO,CAAC,IAAIid,aAAa,GAAG,CAAC,EAAE;cACzDA,aAAa,EAAE;YACjB;YAEA,IAAIpB,WAAW,CAACuB,YAAY,CAACpd,OAAO,CAAC,EAAE;cACrCid,aAAa,EAAE;YACjB;UACF;;UAEA;UACA,IAAIG,YAAY,CAACE,WAAW,EAAE;YAC5B;UACF;UAEA,IAAIF,YAAY,CAAC9X,IAAI,KAAK,MAAM,EAAE;YAChC,MAAM6K,IAAI,GAAGiN,YAAY,CAACpd,OAAO;YAEjC,IAAIwL,OAAO;YACX,IAAInH,KAAK,CAACkZ,GAAG,CAACpN,IAAI,CAAC,EAAE;cACnB3E,OAAO,GAAGnH,KAAK,CAACmZ,GAAG,CAACrN,IAAI,CAAC;YAC3B,CAAC,MAAM;cACL3E,OAAO,GAAGsQ,cAAc,CAAC3L,IAAI,EAAE4L,QAAQ,CAAC;cACxC1X,KAAK,CAACoZ,GAAG,CAACtN,IAAI,EAAE3E,OAAO,CAAC;YAC1B;;YAEA;YACA,MAAMkS,KAAK,GAAG,EAAE;YAChB,IAAIpV,KAAK,GAAG8U,YAAY,CAAC9U,KAAK;YAC9B,IAAIqV,OAAO,GAAG,CAAC;YAEf,IAAIrc,KAAK;YACT,KAAK,IAAIsc,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGpS,OAAO,CAACvL,MAAM,EAAE2d,EAAE,EAAE,EAAE;cAC1C,IAAIpS,OAAO,CAACoS,EAAE,CAAC,CAACrN,KAAK,GAAGoN,OAAO,EAAE;gBAC/B;cACF;cAEA,IAAInS,OAAO,CAACoS,EAAE,CAAC,CAACrN,KAAK,GAAGoN,OAAO,EAAE;gBAC/Brc,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;gBACtClE,KAAK,CAACtB,OAAO,GAAGmQ,IAAI,CAAClP,KAAK,CAAC0c,OAAO,EAAEnS,OAAO,CAACoS,EAAE,CAAC,CAACrN,KAAK,CAAC;gBACtDjP,KAAK,CAACgH,KAAK,GAAGA,KAAK;gBACnBoV,KAAK,CAACxa,IAAI,CAAC5B,KAAK,CAAC;cACnB;cAEA,IAAIkK,OAAO,CAACoS,EAAE,CAAC,CAAC1B,IAAI,EAAE;gBACpB,MAAM7R,GAAG,GAAGlF,KAAK,CAACD,EAAE,CAAC2Y,aAAa,CAACrS,OAAO,CAACoS,EAAE,CAAC,CAACzS,WAAW,CAAC;gBAC3D,IAAI8R,aAAa,KAAK,CAAC,IAAI9X,KAAK,CAACD,EAAE,CAAC4Y,YAAY,CAACzT,GAAG,CAAC,EAAE;kBACrD/I,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;kBAC5ClE,KAAK,CAAC2B,KAAK,GAAG,CAAC,CAAC,MAAM,EAAEoH,GAAG,CAAC,CAAC;kBAC7B,IAAIJ,IAAI,CAACjN,SAAS,CAACoF,UAAU,EAAE;oBAC7Bd,KAAK,CAAC2B,KAAK,CAACC,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;kBACrC;kBACA5B,KAAK,CAACgH,KAAK,GAAGA,KAAK,EAAE;kBACrBhH,KAAK,CAACwI,MAAM,GAAG,SAAS;kBACxBxI,KAAK,CAAC1C,IAAI,GAAG,MAAM;kBACnB8e,KAAK,CAACxa,IAAI,CAAC5B,KAAK,CAAC;kBAEjBA,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;kBACtClE,KAAK,CAACtB,OAAO,GAAGwL,OAAO,CAACoS,EAAE,CAAC,CAACzN,IAAI;kBAChC7O,KAAK,CAACgH,KAAK,GAAGA,KAAK;kBACnBoV,KAAK,CAACxa,IAAI,CAAC5B,KAAK,CAAC;kBAEjBA,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;kBAC9ClE,KAAK,CAACgH,KAAK,GAAG,EAAEA,KAAK;kBACrBhH,KAAK,CAACwI,MAAM,GAAG,SAAS;kBACxBxI,KAAK,CAAC1C,IAAI,GAAG,MAAM;kBACnB8e,KAAK,CAACxa,IAAI,CAAC5B,KAAK,CAAC;gBACnB;cACF,CAAC,MAAM;gBACLA,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;gBACtClE,KAAK,CAACtB,OAAO,GAAGwL,OAAO,CAACoS,EAAE,CAAC,CAACzS,WAAW;gBACvC7J,KAAK,CAACgH,KAAK,GAAGA,KAAK;gBACnBoV,KAAK,CAACxa,IAAI,CAAC5B,KAAK,CAAC;cACnB;cAEAqc,OAAO,GAAGnS,OAAO,CAACoS,EAAE,CAAC,CAACrN,KAAK,GAAG/E,OAAO,CAACoS,EAAE,CAAC,CAACzN,IAAI,CAAClQ,MAAM;YACvD;YAEA,IAAI0d,OAAO,GAAGxN,IAAI,CAAClQ,MAAM,EAAE;cACzBqB,KAAK,GAAG,IAAI6D,KAAK,CAACK,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;cACtClE,KAAK,CAACtB,OAAO,GAAGmQ,IAAI,CAAClP,KAAK,CAAC0c,OAAO,CAAC;cACnCrc,KAAK,CAACgH,KAAK,GAAGA,KAAK;cACnBoV,KAAK,CAACxa,IAAI,CAAC5B,KAAK,CAAC;YACnB;;YAEA;YACA6D,KAAK,CAACrF,MAAM,CAAC0H,CAAC,CAAC,CAACtF,QAAQ,GAAGpC,MAAM,GAAGoF,EAAE,CAAC1F,KAAK,CAACue,cAAc,CACzDje,MAAM,EACNwC,CAAC,EACDob,KACF,CAAC;UACH;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;;;;;;;;;;;;;;;;;AC5Q0C;AACA;AACL;AACT;AAE5B,SAASS,IAAIA,CAACC,KAAK,EAAE;EACnB,OAAOA,KAAK;AACd;AAEe,MAAMC,mBAAmB,CAAC;EACvC,OAAOC,mBAAmBA,CAAA,EAAG;IAC3B,OAAO,IAAI,CAACC,YAAY,CAACN,iDAAgB,CAAC;EAC5C;EAEA,OAAOO,kBAAkBA,CAACvgB,QAAQ,EAAE;IAClC,OAAO,IAAI,CAACsgB,YAAY,CAAC,CAAC,GAAGN,iDAAgB,EAAE,GAAGhgB,QAAQ,CAAC,CAAC;EAC9D;EAEA,OAAOsgB,YAAYA,CAACtgB,QAAQ,EAAE;IAC5B,MAAMwgB,WAAW,GAAI/hB,OAAO,IAAK,IAAI,CAAC+hB,WAAW,CAACxgB,QAAQ,EAAEvB,OAAO,CAAC;IACpE,OAAO;MAAE+hB;IAAY,CAAC;EACxB;EAEA,OAAOA,WAAWA,CAACxgB,QAAQ,EAAEygB,UAAU,EAAE;IACvC,MAAM;MAAEhiB,OAAO;MAAEyP,YAAY;MAAEhH;IAAM,CAAC,GAAG+Y,oDAAY,CAACQ,UAAU,CAAC;;IAEjE;IACA;IACAngB,kDAAK,CAACN,QAAQ,EAAEvB,OAAO,EAAEyP,YAAY,EAAEhH,KAAK,CAAC;IAE7C,OAAO,IAAIkZ,mBAAmB,CAAC3hB,OAAO,CAAC;EACzC;EAEA,OAAOiiB,OAAOA,CAAA,EAAG;IACf,OAAO,IAAI,CAACJ,YAAY,CAAC,EAAE,CAAC,CAACE,WAAW,CAAC;MAAEtS,YAAY,EAAE,CAAC;IAAE,CAAC,CAAC;EAChE;EAEAnI,WAAWA,CAACtH,OAAO,EAAE;IACnB,IAAI,CAACA,OAAO,CAAC6B,KAAK,EAAE;MAClB,MAAM,IAAIqgB,KAAK,CACb,yDAAyD,GACvD,+CACJ,CAAC;IACH;IAEA,IAAI,CAACliB,OAAO,GAAGA,OAAO;EACxB;EAEAmiB,gBAAgBA,CAAA,EAAG;IACjB,IAAI,CAACniB,OAAO,CAAC8B,SAAS,GAAG,IAAI,CAAC9B,OAAO,CAACM,SAAS,CAACwB,SAAS,GAAG2f,IAAI;EAClE;EAEApf,IAAIA,CAACC,GAAG,EAAE;IACR,IAAI,CAACA,GAAG,IAAIA,GAAG,CAACiB,MAAM,KAAK,CAAC,EAAE;MAC5B,OAAO,EAAE;IACX;IAEA,IAAI2P,MAAM;IACVA,MAAM,GAAGoO,6CAAM,CAAChf,GAAG,EAAE,IAAI,CAACtC,OAAO,CAAC;IAClC,OAAOkT,MAAM,GAAGA,MAAM,GAAG,EAAE;EAC7B;EAEAxF,KAAKA,CAAC0U,QAAQ,EAAEhd,GAAG,GAAG,CAAC,CAAC,EAAE;IACxB,OAAO,IAAI,CAACpF,OAAO,CAACG,MAAM,CAACuN,KAAK,CAAC0U,QAAQ,EAAEhd,GAAG,CAAC;EACjD;EAEAvF,QAAQA,CAAC+V,IAAI,EAAE;IACb,OAAO,IAAI,CAAC5V,OAAO,CAAC8B,SAAS,CAAC8T,IAAI,CAAC,CAACjT,IAAI,CAAC,CAAC;EAC5C;EAEA,IAAI/B,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACZ,OAAO,CAACG,MAAM,CAACS,OAAO;EACpC;AACF;;;;;;;;;;;;;;;ACzEwD;;AAExD;AACA;AACe,SAAS4gB,YAAYA,CAAC/Y,KAAK,EAAE;EAC1C,MAAM;IACJgH,YAAY;IACZwM,MAAM;IACNV,YAAY;IACZE,sBAAsB;IACtBI,YAAY;IACZb,OAAO;IACPc,cAAc;IACd3G,MAAM;IACNmN,cAAc;IACdC,WAAW;IACXjH,wBAAwB;IACxBE,kCAAkC;IAClCE,cAAc;IACd5I,oBAAoB;IACpB0L,gBAAgB;IAChB9Y,UAAU;IACV4I,cAAc;IACd2F,aAAa;IACb1C,sBAAsB;IACtBwD,mBAAmB;IACnBsL,gBAAgB;IAChBpN,aAAa;IACbuP,gBAAgB;IAChBtiB,eAAe;IACfuiB,iBAAiB;IACjBrN,2BAA2B;IAC3BsN,YAAY;IACZxN;EACF,CAAC,GAAGzM,KAAK;EAET,IAAIlH,QAAQ,GAAG,CAAC,CAAC;EAEjB,IAAIkH,KAAK,CAAClH,QAAQ,EAAE;IAClBA,QAAQ,GAAG8gB,sEAAS,CAAC9gB,QAAQ,EAAEkH,KAAK,CAAClH,QAAQ,CAAC;EAChD;EAEA,MAAMvB,OAAO,GAAG;IACdH,QAAQ,EAAE,IAAI;IACdoc,MAAM;IACN1a,QAAQ;IACRga,YAAY;IACZE,sBAAsB;IACtBI,YAAY;IACZb,OAAO;IACPc,cAAc;IACd3G,MAAM;IACNmN,cAAc;IACdC,WAAW;IACXjH,wBAAwB;IACxBE,kCAAkC;IAClCE,cAAc;IACd5I,oBAAoB;IACpB0L,gBAAgB;IAChBlQ,cAAc;IACdiD,sBAAsB;IACtBoR,kBAAkB,EAAElT,YAAY,CAACmT,oBAAoB,GACjDnT,YAAY,CAACmT,oBAAoB,CAACniB,KAAK,CAAC,GAAG,CAAC,GAC5C,IAAI;IACRoiB,cAAc,EAAEpT,YAAY,CAACqT,eAAe,GACxCrT,YAAY,CAACqT,eAAe,CAACriB,KAAK,CAAC,GAAG,CAAC,GACvC,EAAE;IACNmB,UAAU,EAAE,IAAI;IAChB8D,UAAU;IACVuO,aAAa;IACbc,mBAAmB;IACnBsL,gBAAgB;IAChBpN,aAAa;IACbuP,gBAAgB;IAChBtiB,eAAe;IACfuiB,iBAAiB;IACjBrN,2BAA2B;IAC3BsN,YAAY;IACZxN;EACF,CAAC;EAED,OAAO;IAAElV,OAAO;IAAEyP,YAAY;IAAEhH;EAAM,CAAC;AACzC;;;;;;;;;;;;;;;;;;;;;;;;;;AClFuD;AACE;AACD;AACZ;;AAE5C;AACA;AACe,SAASwa,OAAOA,CAAC1hB,QAAQ,EAAEvB,OAAO,EAAEyP,YAAY,EAAEhH,KAAK,EAAE;EACtEya,KAAK,CAACC,GAAG,CAAC5hB,QAAQ,EAAEvB,OAAO,EAAEyP,YAAY,EAAEhH,KAAK,CAAC;AACnD;AAAC,IAAA2a,QAAA,oBAAAC,OAAA;AAAA,IAAAC,QAAA,oBAAAD,OAAA;AAAA,IAAAE,YAAA,oBAAAF,OAAA;AAAA,IAAAG,oCAAA,oBAAAH,OAAA;AAAA,IAAAI,eAAA,oBAAAJ,OAAA;AAAA,IAAAK,gBAAA,oBAAAL,OAAA;AAAA,IAAAM,gBAAA,oBAAAN,OAAA;AAAA,IAAAO,aAAA,oBAAAC,OAAA;AAAA,IAAAC,oBAAA,oBAAAD,OAAA;AAAA,IAAAE,uBAAA,oBAAAF,OAAA;AAAA,IAAAG,mBAAA,oBAAAH,OAAA;AAAA,IAAAI,WAAA,oBAAAJ,OAAA;AAAA,IAAAK,mBAAA,oBAAAL,OAAA;AAAA,IAAAM,kBAAA,oBAAAN,OAAA;AAAA,IAAAO,MAAA,oBAAAP,OAAA;AAED,MAAMX,KAAK,CAAC;EACV,OAAOC,GAAGA,CAAC5hB,QAAQ,EAAEvB,OAAO,EAAEyP,YAAY,EAAEhH,KAAK,EAAE;IACjD,IAAIzI,OAAO,CAAC6B,KAAK,EAAE;MACjB;MACA;IACF;IAEA,MAAMA,KAAK,GAAG,IAAIqhB,KAAK,CAACljB,OAAO,CAAC;IAEhCuB,QAAQ,CAACme,IAAI,CAAC,CAACtd,CAAC,EAAEud,CAAC,KAAKvd,CAAC,CAACoV,QAAQ,GAAGmI,CAAC,CAACnI,QAAQ,CAAC;IAEhD,KAAK,MAAMpW,OAAO,IAAIG,QAAQ,EAAE;MAC9B8iB,sBAAA,CAAAxiB,KAAK,EAAA+hB,aAAA,EAAAU,cAAA,EAAA9Y,IAAA,CAAL3J,KAAK,EAAeT,OAAO,CAACoC,EAAE,EAAEpC,OAAO,CAACS,KAAK;IAC/C;IAEA,KAAK,MAAM0iB,KAAK,IAAI7gB,MAAM,CAACuc,OAAO,CAACxX,KAAK,CAACzG,WAAW,IAAI,CAAC,CAAC,CAAC,EAAE;MAC3DH,KAAK,CAACwL,SAAS,CAACkX,KAAK,CAAC;IACxB;IAEAF,sBAAA,CAAAxiB,KAAK,EAAAiiB,oBAAA,EAAAU,qBAAA,EAAAhZ,IAAA,CAAL3J,KAAK,EAAsB4N,YAAY,EAAEhH,KAAK;IAE9C4b,sBAAA,CAAAxiB,KAAK,EAAAkiB,uBAAA,EAAAU,wBAAA,EAAAjZ,IAAA,CAAL3J,KAAK;IAELwiB,sBAAA,CAAAxiB,KAAK,EAAAmiB,mBAAA,EAAAU,oBAAA,EAAAlZ,IAAA,CAAL3J,KAAK,EAAqB4N,YAAY;IAEtC4U,sBAAA,CAAAxiB,KAAK,EAAAoiB,WAAA,EAAAU,YAAA,EAAAnZ,IAAA,CAAL3J,KAAK;IAELwiB,sBAAA,CAAAxiB,KAAK,EAAAqiB,mBAAA,EAAAU,oBAAA,EAAApZ,IAAA,CAAL3J,KAAK;EACP;EAWAyF,WAAWA,CAACtH,SAAO,EAAE;IAAA6kB,2BAAA,OAAAT,MAAA;IAAAS,2BAAA,OAAAV,kBAAA;IAAAU,2BAAA,OAAAX,mBAAA;IAAAW,2BAAA,OAAAZ,WAAA;IAAAY,2BAAA,OAAAb,mBAAA;IAAAa,2BAAA,OAAAd,uBAAA;IAAAc,2BAAA,OAAAf,oBAAA;IAAAe,2BAAA,OAAAjB,aAAA;IAAAkB,0BAAA,OAAA1B,QAAA;MAAA2B,QAAA;MAAArgB,KAAA;IAAA;IAAAogB,0BAAA,OAAAxB,QAAA;MAAAyB,QAAA;MAAArgB,KAAA;IAAA;IAAAogB,0BAAA,OAAAvB,YAAA;MAAAwB,QAAA;MAAArgB,KAAA,EANN;IAAE;IAAAogB,0BAAA,OAAAtB,oCAAA;MAAAuB,QAAA;MAAArgB,KAAA,EACsB;IAAE;IAAAogB,0BAAA,OAAArB,eAAA;MAAAsB,QAAA;MAAArgB,KAAA,EACvB;IAAE;IAAAogB,0BAAA,OAAApB,gBAAA;MAAAqB,QAAA;MAAArgB,KAAA,EACD;IAAE;IAAAogB,0BAAA,OAAAnB,gBAAA;MAAAoB,QAAA;MAAArgB,KAAA,EACF;IAAE;IAGnB1E,SAAO,CAAC4B,UAAU,GAAG,IAAI;IAEzBojB,+JAAA,KAAI,EAAA1B,QAAA,EAAYtjB,SAAO;;IAEvB;IACAglB,+JAAA,KAAI,EAAA5B,QAAA,EAAY;MAAEpjB,OAAO,EAAPA;IAAQ,CAAC;EAC7B;EAEAqN,SAASA,CAACkX,KAAK,EAAE;IACfU,+JAAA,KAAI,EAAA1B,YAAA,EAAc/c,IAAI,CAAC+d,KAAK,CAAC;EAC/B;EAEAjX,eAAeA,CAACiX,KAAK,EAAE;IACrBU,+JAAA,KAAI,EAAAvB,gBAAA,EAAkBld,IAAI,CAAC+d,KAAK,CAAC;EACnC;EAEAhc,cAAcA,CAACgc,KAAK,EAAE;IACpBU,+JAAA,KAAI,EAAAtB,gBAAA,EAAkBnd,IAAI,CAAC+d,KAAK,CAAC;EACnC;EAEAW,iBAAiBA,CAACX,KAAK,EAAE;IACvBU,+JAAA,KAAI,EAAAzB,oCAAA,EAAsChd,IAAI,CAAC+d,KAAK,CAAC;EACvD;AAsLF;AAAC,SAAAD,eApLea,WAAW,EAAE9jB,QAAQ,EAAE;EACnC;EACA;EACA;EACA;EACA;EACA;EACA,IAAI+jB,MAAM,GAAG,IAAI;EAEjB,MAAMC,OAAO,GAAGA,CAACC,UAAU,EAAE,GAAGC,IAAI,KAAK;IACvC,IAAIH,MAAM,KAAK,IAAI,EAAE;MACnB,MAAM,IAAIlD,KAAK,CACZ,GAAEiD,WAAY,KAAIG,UAAW,qCAChC,CAAC;IACH;IAEA,IAAIF,MAAM,CAACE,UAAU,CAAC,EAAE;MACtB,OAAOF,MAAM,CAACE,UAAU,CAAC,CAAC,GAAGC,IAAI,CAAC;IACpC;EACF,CAAC;EAEDlkB,QAAQ,CAAC,IAAImkB,GAAG,CAACL,WAAW,EAAAF,+JAAA,CAAE,IAAI,EAAA7B,QAAA,GAAWiC,OAAO,CAAC,CAAC;EAEtDJ,+JAAA,KAAI,EAAAxB,eAAA,EAAiBjd,IAAI,CAAC2e,WAAW,CAAC;;EAEtC;EACAC,MAAM,GAAG,IAAI;AACf;AAAC,SAAAZ,sBAEoB/U,YAAY,EAAEhH,KAAK,EAAE;EACxC4b,sBAAA,KAAI,EAAAD,MAAA,EAAAqB,OAAA,EAAAja,IAAA,CAAJ,IAAI,EAAAyZ,+JAAA,CAAQ,IAAI,EAAAvB,gBAAA,GAAmB,CAAC,GAAGriB,QAAQ,CAAC,KAC9CA,QAAQ,CAAA4jB,+JAAA,CAAC,IAAI,EAAA3B,QAAA,GAAW7T,YAAY,EAAEhH,KAAK,CAAC;AAEhD;AAAC,SAAAgc,yBAEuB;EAAEljB,QAAQ;EAAEihB;AAAiB,CAAC,GAAAyC,+JAAA,CAAG,IAAI,EAAA3B,QAAA,CAAS,EAAE;EACtE;EACA;EACA;EACA;EACA;EACA,MAAMoC,WAAW,GAAG,IAAIjJ,GAAG,CAAC,CAC1B,GAAA4H,sBAAA,CAAG,IAAI,EAAAD,MAAA,EAAAqB,OAAA,EAAAja,IAAA,CAAJ,IAAI,EAAAyZ,+JAAA,CAAQ,IAAI,EAAAxB,eAAA,EAAiB,EACpC,GAAG/f,MAAM,CAACD,IAAI,CAAClC,QAAQ,CAAC,CACzB,CAAC;EAEF,IAAIihB,gBAAgB,EAAE;IACpB,KAAK,MAAMphB,OAAO,IAAIskB,WAAW,EAAE;MACjCnkB,QAAQ,CAACH,OAAO,CAAC,GAAGohB,gBAAgB,CAAC5U,QAAQ,CAACxM,OAAO,CAAC;IACxD;EACF,CAAC,MAAM;IACL;IACA,KAAK,IAAIA,OAAO,IAAIskB,WAAW,EAAE;MAC/BnkB,QAAQ,CAACH,OAAO,CAAC,KAAK,IAAI;IAC5B;EACF;AACF;AAAC,SAAAsjB,qBAEmBjV,YAAY,EAAE;EAChC;EACA;EACA;EACA;EACA;EACA,MAAMzP,OAAO,GAAAilB,+JAAA,CAAG,IAAI,EAAA3B,QAAA,CAAS;EAC7B,MAAMhjB,SAAS,GAAG,CAAC,CAAC;EAEpB,KAAK,MAAM,CAACuD,GAAG,EAAEa,KAAK,CAAC,IAAIhB,MAAM,CAACuc,OAAO,CAACjgB,OAAO,CAAC,EAAE;IAClDM,SAAS,CAACuD,GAAG,CAAC,GAAGa,KAAK;IACtB,OAAO1E,OAAO,CAAC6D,GAAG,CAAC;EACrB;EAEAvD,SAAS,CAACqU,OAAO,GAAG;IAAEC,WAAWA,mEAAAA;EAAC,CAAC;EAEnCtU,SAAS,CAACC,mBAAmB,GAAG;IAC9Bse,aAAa,EAAEpP,YAAY,CAACkW,cAAc;IAC1ChgB,qBAAqB,EAAE8J,YAAY,CAACmW,uBAAuB;IAC3DC,6BAA6B,EAC3BpW,YAAY,CAACqW,+BAA+B;IAC9CC,qBAAqB,EAAEtW,YAAY,CAACuW,uBAAuB;IAC3DC,yBAAyB,EAAExW,YAAY,CAACyW,2BAA2B;IACnE1lB,iCAAiC,EAC/BiP,YAAY,CAAC0W,oCAAoC;IACnDxlB,mBAAmB,EAAE8O,YAAY,CAAC2W;EACpC,CAAC;EAEDnB,+JAAA,KAAI,EAAA7B,QAAA,EAAUpjB,OAAO,GAAGA,OAAO,CAACM,SAAS,GAAGA,SAAS;AACvD;AAAC,SAAAqkB,aAAA,EAEa;EACZ,MAAM3kB,OAAO,GAAAilB,+JAAA,CAAG,IAAI,EAAA3B,QAAA,CAAS;EAC7B,MAAM;IAAEhjB;EAAU,CAAC,GAAGN,OAAO;EAC7B,MAAM;IAAEE,eAAe;IAAEK;EAAoB,CAAC,GAAGD,SAAS;EAC1D,MAAM;IACJylB,qBAAqB;IACrBE,yBAAyB;IACzBJ;EACF,CAAC,GAAGtlB,mBAAmB;EAEvBP,OAAO,CAACgC,WAAW,GAAAqiB,sBAAA,CAAG,IAAI,EAAAD,MAAA,EAAAqB,OAAA,EAAAja,IAAA,CAAJ,IAAI,EAAAyZ,+JAAA,CAAQ,IAAI,EAAA1B,YAAA,EAAc;EACpDvjB,OAAO,CAACsB,eAAe,GAAA+iB,sBAAA,CAAG,IAAI,EAAAD,MAAA,EAAAqB,OAAA,EAAAja,IAAA,CAAJ,IAAI,EAAAyZ,+JAAA,CAAQ,IAAI,EAAAtB,gBAAA,EAAkB;EAE5D,MAAM1jB,iBAAiB,GAAG;IACxBK,SAAS;IACTsV,IAAI,EAAE,IAAI;IACVyQ,MAAM,EAAE,CAACR,6BAA6B;IACtCS,QAAQ,EAAE,KAAK;IACf1lB,OAAO,EAAEmlB,qBAAqB;IAC9BvV,WAAW,EAAEyV;EACf,CAAC;EAEDlmB,mDAAU,CAACC,OAAO,EAAEC,iBAAiB,EAAEC,eAAe,CAAC;AACzD;AAAC,SAAA0kB,qBAAA,EAEqB;EACpB,MAAM5kB,OAAO,GAAAilB,+JAAA,CAAG,IAAI,EAAA3B,QAAA,CAAS;;EAE7B;EACA,IAAIiD,WAAW,GAAGA,CAACC,aAAa,EAAEC,UAAU,KAC1CA,UAAU,CAAApC,sBAAA,CAAC,IAAI,EAAAF,kBAAA,EAAAuC,mBAAA,EAAAlb,IAAA,CAAJ,IAAI,EAAoBgb,aAAa,EAAExmB,OAAO,CAAC,CAAC;EAE7DqkB,sBAAA,KAAI,EAAAD,MAAA,EAAAqB,OAAA,EAAAja,IAAA,CAAJ,IAAI,EAAAyZ,+JAAA,CAAQ,IAAI,EAAAzB,oCAAA,GAAuC,CAAC,GAAGniB,QAAQ,CAAC,KAAK;IACvEA,QAAQ,CAACrB,OAAO,EAAEumB,WAAW,CAAC;EAChC,CAAC;AACH;AAAC,SAAAG,oBAEkBF,aAAa,EAAEG,cAAc,EAAE;EAChD;EACA;EACA;EACA;EACA,MAAM3mB,OAAO,GAAG,CAAC,CAAC;EAClBA,OAAO,CAACgC,WAAW,GAAG2kB,cAAc,CAAC3kB,WAAW;EAChDhC,OAAO,CAACsB,eAAe,GAAGqlB,cAAc,CAACrlB,eAAe;EACxDtB,OAAO,CAAC8B,SAAS,GAAG6kB,cAAc,CAAC7kB,SAAS;;EAE5C;EACA;EACA;EACA,MAAMP,QAAQ,GAAGyhB,sEAAS,CAAC2D,cAAc,CAACrmB,SAAS,CAACiB,QAAQ,CAAC;EAC7DvB,OAAO,CAACM,SAAS,GAAG;IAClB,GAAGqmB,cAAc,CAACrmB,SAAS;IAC3BiB;EACF,CAAC;EAED8iB,sBAAA,KAAI,EAAAN,uBAAA,EAAAU,wBAAA,EAAAjZ,IAAA,CAAJ,IAAI,EAAyB;IAC3BjK,QAAQ;IACRihB,gBAAgB,EAAEgE,aAAa,CAAChE;EAClC,CAAC;EAED,MAAMviB,iBAAiB,GAAG;IACxBK,SAAS,EAAEN,OAAO,CAACM,SAAS;IAC5BsV,IAAI,EAAE+Q,cAAc,CAACxmB,MAAM,CAACH,OAAO,CAAC4V,IAAI;IACxCyQ,MAAM,EAAEM,cAAc,CAACxmB,MAAM,CAACH,OAAO,CAACqmB,MAAM;IAC5CC,QAAQ,EAAEK,cAAc,CAACxmB,MAAM,CAACH,OAAO,CAACsmB,QAAQ;IAChD1lB,OAAO,EAAE+lB,cAAc,CAACxmB,MAAM,CAACH,OAAO,CAACY,OAAO;IAC9C4P,WAAW,EAAEmW,cAAc,CAACxmB,MAAM,CAACH,OAAO,CAACwQ;EAC7C,CAAC;EAEDzQ,mDAAU,CAACC,OAAO,EAAEC,iBAAiB,EAAEumB,aAAa,CAACtmB,eAAe,CAAC;EAErE,OAAO,SAAS0mB,kBAAkBA,CAACtkB,GAAG,EAAE;IACtC,OAAOD,6CAAI,CAACC,GAAG,EAAEtC,OAAO,CAAC;EAC3B,CAAC;AACH;AAAC,SAAAylB,QAEMoB,KAAK,EAAExlB,QAAQ,EAAE;EACtB,IAAIA,QAAQ,EAAE;IACZ,IAAIylB,IAAI,GAAGD,KAAK,CAACE,KAAK,CAAC,CAAC;IAExB,OAAOD,IAAI,EAAE;MACXzlB,QAAQ,CAACylB,IAAI,CAAC;MACdA,IAAI,GAAGD,KAAK,CAACE,KAAK,CAAC,CAAC;IACtB;EACF,CAAC,MAAM;IACL,MAAMC,MAAM,GAAG,CAAC,GAAGH,KAAK,CAAC;IACzBA,KAAK,CAACtjB,MAAM,GAAG,CAAC;IAChB,OAAOyjB,MAAM;EACf;AACF;AAAC,IAAAC,KAAA,oBAAA5D,OAAA;AAAA,IAAA6D,SAAA,oBAAA7D,OAAA;AAAA,IAAA8D,MAAA,oBAAA9D,OAAA;AAAA,IAAA+D,UAAA,oBAAA/D,OAAA;AAGH,MAAMmC,GAAG,CAAC;EAMRle,WAAWA,CAAC6d,WAAW,EAAEkC,OAAO,EAAExlB,KAAK,EAAE;IAAAijB,0BAAA,OAAAmC,KAAA;MAAAlC,QAAA;MAAArgB,KAAA;IAAA;IAAAogB,0BAAA,OAAAoC,SAAA;MAAAnC,QAAA;MAAArgB,KAAA;IAAA;IAAAogB,0BAAA,OAAAqC,MAAA;MAAApC,QAAA;MAAArgB,KAAA;IAAA;IAAAogB,0BAAA,OAAAsC,UAAA;MAAArC,QAAA;MAAArgB,KAAA;IAAA;IACvCsgB,+JAAA,KAAI,EAAAiC,KAAA,EAAS9B,WAAW;IACxBH,+JAAA,KAAI,EAAAkC,SAAA,EAAYG,OAAO;IACvBrC,+JAAA,KAAI,EAAAmC,MAAA,EAAUtlB,KAAK;IACnBmjB,+JAAA,KAAI,EAAAoC,UAAA,EAAc,CAAC9B,UAAU,EAAE,GAAGC,IAAI,KAAK;MACzC,IAAI+B,MAAM,CAAC7lB,OAAO,IAAI6lB,MAAM,CAAC7lB,OAAO,CAACC,GAAG,EAAE;QACxC4lB,MAAM,CAAC7lB,OAAO,CAACC,GAAG,CAChByjB,WAAW,GACT,IAAI,GACJG,UAAU,GACV,qDACJ,CAAC;MACH;MAEA,OAAOzjB,KAAK,CAACyjB,UAAU,EAAE,GAAGC,IAAI,CAAC;IACnC,CAAC;EACH;EAEA,IAAI3jB,UAAUA,CAAA,EAAG;IACf,OAAO,IAAI;EACb;;EAEA;EACA0G,UAAUA,CAAA,EAAG;IACX,OAAO2c,+JAAA,KAAI,EAAAiC,SAAA,EAAUlnB,OAAO;EAC9B;EAEAqN,SAASA,CAACnL,IAAI,EAAE;IACd+iB,+JAAA,KAAI,EAAAkC,MAAA,EAAA3b,IAAA,CAAJ,IAAI,EAAQ,WAAW,EAAE,CAAAyZ,+JAAA,CAAC,IAAI,EAAAgC,KAAA,GAAQ/kB,IAAI,CAAC;EAC7C;EAEA8b,SAASA,CAAC9b,IAAI,EAAE;IACd6gB,2EAAU,CAAC,gDAAgD,EAAE;MAC3DwE,KAAK,EAAE,cAAc;MACrBC,QAAQ,EAAE,OAAO;MACjBhkB,EAAE,EAAE;IACN,CAAC,CAAC;IAEF,IAAI,CAAC6J,SAAS,CAACnL,IAAI,CAAC;EACtB;EAEAoL,eAAeA,CAACjM,QAAQ,EAAE;IACxB4jB,+JAAA,KAAI,EAAAkC,MAAA,EAAA3b,IAAA,CAAJ,IAAI,EAAQ,iBAAiB,EAAE,CAAAyZ,+JAAA,CAAC,IAAI,EAAAgC,KAAA,GAAQ5lB,QAAQ,CAAC;EACvD;EAEAkH,cAAcA,CAAClH,QAAQ,EAAE;IACvB4jB,+JAAA,KAAI,EAAAkC,MAAA,EAAA3b,IAAA,CAAJ,IAAI,EAAQ,gBAAgB,EAAE,CAAAyZ,+JAAA,CAAC,IAAI,EAAAgC,KAAA,GAAQ5lB,QAAQ,CAAC;EACtD;EAEA6jB,iBAAiBA,CAAC7jB,QAAQ,EAAE;IAC1B4jB,+JAAA,KAAI,EAAAkC,MAAA,EAAA3b,IAAA,CAAJ,IAAI,EAAQ,mBAAmB,EAAE,CAAAyZ,+JAAA,CAAC,IAAI,EAAAgC,KAAA,GAAQ5lB,QAAQ,CAAC;EACzD;;EAEA;EACA;;EAEAomB,cAAcA,CAAA,EAAG;IACfxC,+JAAA,KAAI,EAAAmC,UAAA,EAAA5b,IAAA,CAAJ,IAAI,EAAY,gBAAgB;EAClC;EAEAkc,YAAYA,CAAA,EAAG;IACbzC,+JAAA,KAAI,EAAAmC,UAAA,EAAA5b,IAAA,CAAJ,IAAI,EAAY,cAAc;EAChC;EAEAmc,eAAeA,CAAA,EAAG;IAChB1C,+JAAA,KAAI,EAAAmC,UAAA,EAAA5b,IAAA,CAAJ,IAAI,EAAY,iBAAiB;EACnC;EAEAoc,aAAaA,CAAA,EAAG;IACd3C,+JAAA,KAAI,EAAAmC,UAAA,EAAA5b,IAAA,CAAJ,IAAI,EAAY,eAAe;EACjC;EAEAqc,cAAcA,CAAA,EAAG;IACf5C,+JAAA,KAAI,EAAAmC,UAAA,EAAA5b,IAAA,CAAJ,IAAI,EAAY,gBAAgB;EAClC;EAEAsc,YAAYA,CAAA,EAAG;IACb7C,+JAAA,KAAI,EAAAmC,UAAA,EAAA5b,IAAA,CAAJ,IAAI,EAAY,cAAc;EAChC;EAEAuc,aAAaA,CAAA,EAAG;IACd9C,+JAAA,KAAI,EAAAmC,UAAA,EAAA5b,IAAA,CAAJ,IAAI,EAAY,eAAe;EACjC;EAEAwc,eAAeA,CAAA,EAAG;IAChB/C,+JAAA,KAAI,EAAAmC,UAAA,EAAA5b,IAAA,CAAJ,IAAI,EAAY,iBAAiB;EACnC;EAEAyc,WAAWA,CAAA,EAAG;IACZhD,+JAAA,KAAI,EAAAmC,UAAA,EAAA5b,IAAA,CAAJ,IAAI,EAAY,aAAa;EAC/B;EAEA0c,aAAaA,CAAA,EAAG;IACdjD,+JAAA,KAAI,EAAAmC,UAAA,EAAA5b,IAAA,CAAJ,IAAI,EAAY,eAAe;EACjC;AACF","sources":["webpack://discourse/../../../../discourse-markdown-it/src/engine.js","webpack://discourse/../../../../discourse-markdown-it/src/features/anchor.js","webpack://discourse/../../../../discourse-markdown-it/src/features/bbcode-block.js","webpack://discourse/../../../../discourse-markdown-it/src/features/bbcode-inline.js","webpack://discourse/../../../../discourse-markdown-it/src/features/censored.js","webpack://discourse/../../../../discourse-markdown-it/src/features/code.js","webpack://discourse/../../../../discourse-markdown-it/src/features/custom-typographer-replacements.js","webpack://discourse/../../../../discourse-markdown-it/src/features/d-wrap.js","webpack://discourse/../../../../discourse-markdown-it/src/features/emoji.js","webpack://discourse/../../../../discourse-markdown-it/src/features/hashtag-autocomplete.js","webpack://discourse/../../../../discourse-markdown-it/src/features/html-img.js","webpack://discourse/../../../../discourse-markdown-it/src/features/image-controls.js","webpack://discourse/../../../../discourse-markdown-it/src/features/image-grid.js","webpack://discourse/../../../../discourse-markdown-it/src/features/index.js","webpack://discourse/../../../../discourse-markdown-it/src/features/mentions.js","webpack://discourse/../../../../discourse-markdown-it/src/features/newline.js","webpack://discourse/../../../../discourse-markdown-it/src/features/onebox.js","webpack://discourse/../../../../discourse-markdown-it/src/features/paragraph.js","webpack://discourse/../../../../discourse-markdown-it/src/features/quotes.js","webpack://discourse/../../../../discourse-markdown-it/src/features/table.js","webpack://discourse/../../../../discourse-markdown-it/src/features/text-post-process.js","webpack://discourse/../../../../discourse-markdown-it/src/features/upload-protocol.js","webpack://discourse/../../../../discourse-markdown-it/src/features/watched-words.js","webpack://discourse/../../../../discourse-markdown-it/src/index.js","webpack://discourse/../../../../discourse-markdown-it/src/options.js","webpack://discourse/../../../../discourse-markdown-it/src/setup.js"],"sourcesContent":["import markdownit from \"markdown-it\";\nimport AllowLister from \"pretty-text/allow-lister\";\nimport guid from \"pretty-text/guid\";\nimport { sanitize } from \"pretty-text/sanitizer\";\nimport { TextPostProcessRuler } from \"./features/text-post-process\";\n\n// note, this will mutate options due to the way the API is designed\n// may need a refactor\nexport default function makeEngine(\n  options,\n  markdownItOptions,\n  markdownItRules\n) {\n  const engine = makeMarkdownIt(markdownItOptions, markdownItRules);\n\n  const quotes =\n    options.discourse.limitedSiteSettings.markdownTypographerQuotationMarks;\n\n  if (quotes) {\n    engine.options.quotes = quotes.split(\"|\");\n  }\n\n  const tlds = options.discourse.limitedSiteSettings.markdownLinkifyTlds || \"\";\n  engine.linkify.tlds(tlds.split(\"|\"));\n\n  setupUrlDecoding(engine);\n  setupHoister(engine);\n  setupImageAndPlayableMediaRenderer(engine);\n  setupAttachments(engine);\n  setupBlockBBCode(engine);\n  setupInlineBBCode(engine);\n  setupTextPostProcessRuler(engine);\n\n  options.engine = engine;\n\n  for (const [feature, callback] of options.pluginCallbacks) {\n    if (options.discourse.features[feature]) {\n      if (callback === null || callback === undefined) {\n        // eslint-disable-next-line no-console\n        console.log(\"BAD MARKDOWN CALLBACK FOUND\");\n        // eslint-disable-next-line no-console\n        console.log(`FEATURE IS: ${feature}`);\n      }\n      engine.use(callback);\n    }\n  }\n\n  // top level markdown it notifier\n  options.markdownIt = true;\n  options.setup = true;\n\n  if (!options.discourse.sanitizer || !options.sanitizer) {\n    const allowLister = new AllowLister(options.discourse);\n\n    options.allowListed.forEach(([feature, info]) => {\n      allowLister.allowListFeature(feature, info);\n    });\n\n    options.sanitizer = options.discourse.sanitizer = options.discourse.sanitize\n      ? (a) => sanitize(a, allowLister)\n      : (a) => a;\n  }\n}\n\nexport function cook(raw, options) {\n  // we still have to hoist html_raw nodes so they bypass the allowlister\n  // this is the case for oneboxes and also certain plugins that require\n  // raw HTML rendering within markdown bbcode rules\n  options.discourse.hoisted ??= {};\n\n  const rendered = options.engine.render(raw);\n  let cooked = options.discourse.sanitizer(rendered).trim();\n\n  // opts.discourse.hoisted guid keys will be deleted within here to\n  // keep the object empty\n  cooked = unhoistForCooked(options.discourse.hoisted, cooked);\n\n  return cooked;\n}\n\nfunction makeMarkdownIt(markdownItOptions, markdownItRules) {\n  if (markdownItRules) {\n    // Preset for \"zero\", https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js\n    return markdownit(\"zero\", markdownItOptions).enable(markdownItRules);\n  } else {\n    return markdownit(markdownItOptions);\n  }\n}\n\nfunction setupUrlDecoding(engine) {\n  // this fixed a subtle issue where %20 is decoded as space in\n  // automatic urls\n  engine.utils.lib.mdurl.decode.defaultChars = \";/?:@&=+$,# \";\n}\n\n// hoists html_raw tokens out of the render flow and replaces them\n// with a GUID. this GUID is then replaced with the final raw HTML\n// content in unhoistForCooked\nfunction renderHoisted(tokens, idx, options) {\n  const content = tokens[idx].content;\n  if (content && content.length > 0) {\n    let id = guid();\n    options.discourse.hoisted[id] = content;\n    return id;\n  } else {\n    return \"\";\n  }\n}\n\nfunction unhoistForCooked(hoisted, cooked) {\n  const keys = Object.keys(hoisted);\n  if (keys.length) {\n    let found = true;\n\n    const unhoist = function (key) {\n      cooked = cooked.replace(new RegExp(key, \"g\"), function () {\n        found = true;\n        return hoisted[key];\n      });\n      delete hoisted[key];\n    };\n\n    while (found) {\n      found = false;\n      keys.forEach(unhoist);\n    }\n  }\n\n  return cooked;\n}\n\n// html_raw tokens, funnily enough, render raw HTML via renderHoisted and\n// unhoistForCooked\nfunction setupHoister(engine) {\n  engine.renderer.rules.html_raw = renderHoisted;\n}\n\n// exported for test only\nexport function extractDataAttribute(str) {\n  let sep = str.indexOf(\"=\");\n  if (sep === -1) {\n    return null;\n  }\n\n  const key = `data-${str.slice(0, sep)}`.toLowerCase();\n  if (!/^[A-Za-z]+[\\w\\-\\:\\.]*$/.test(key)) {\n    return null;\n  }\n\n  const value = str.slice(sep + 1);\n  return [key, value];\n}\n\n// videoHTML and audioHTML follow the same HTML syntax\n// as oneboxer.rb when dealing with these formats\nfunction videoHTML(token) {\n  const src = token.attrGet(\"src\");\n  const origSrc = token.attrGet(\"data-orig-src\");\n  const dataOrigSrcAttr = origSrc !== null ? `data-orig-src=\"${origSrc}\"` : \"\";\n  return `<div class=\"video-placeholder-container\" data-video-src=\"${src}\" ${dataOrigSrcAttr}>\n  </div>`;\n}\n\nfunction audioHTML(token) {\n  const src = token.attrGet(\"src\");\n  const origSrc = token.attrGet(\"data-orig-src\");\n  const dataOrigSrcAttr = origSrc !== null ? `data-orig-src=\"${origSrc}\"` : \"\";\n  return `<audio preload=\"metadata\" controls>\n    <source src=\"${src}\" ${dataOrigSrcAttr}>\n    <a href=\"${src}\">${src}</a>\n  </audio>`;\n}\n\nconst IMG_SIZE_REGEX =\n  /^([1-9]+[0-9]*)x([1-9]+[0-9]*)(\\s*,\\s*(x?)([1-9][0-9]{0,2}?)([%x]?))?$/;\nfunction renderImageOrPlayableMedia(tokens, idx, options, env, slf) {\n  const token = tokens[idx];\n  const alt = slf.renderInlineAsText(token.children, options, env);\n  const split = alt.split(\"|\");\n  const altSplit = [split[0]];\n\n  // markdown-it supports returning HTML instead of continuing to render the current token\n  // see https://github.com/markdown-it/markdown-it/blob/master/docs/architecture.md#renderer\n  // handles |video and |audio alt transformations for image tags\n  if (split[1] === \"video\") {\n    if (\n      options.discourse.previewing &&\n      !options.discourse.limitedSiteSettings.enableDiffhtmlPreview\n    ) {\n      return `<div class=\"onebox-placeholder-container\">\n        <span class=\"placeholder-icon video\"></span>\n      </div>`;\n    } else {\n      return videoHTML(token);\n    }\n  } else if (split[1] === \"audio\") {\n    return audioHTML(token);\n  }\n\n  // parsing ![myimage|500x300]() or ![myimage|75%]() or ![myimage|500x300, 75%]\n  for (let i = 1, match, data; i < split.length; ++i) {\n    if ((match = split[i].match(IMG_SIZE_REGEX)) && match[1] && match[2]) {\n      let width = match[1];\n      let height = match[2];\n\n      // calculate using percentage\n      if (match[5] && match[6] && match[6] === \"%\") {\n        let percent = parseFloat(match[5]) / 100.0;\n        width = parseInt(width * percent, 10);\n        height = parseInt(height * percent, 10);\n      }\n\n      // calculate using only given width\n      if (match[5] && match[6] && match[6] === \"x\") {\n        let wr = parseFloat(match[5]) / width;\n        width = parseInt(match[5], 10);\n        height = parseInt(height * wr, 10);\n      }\n\n      // calculate using only given height\n      if (match[5] && match[4] && match[4] === \"x\" && !match[6]) {\n        let hr = parseFloat(match[5]) / height;\n        height = parseInt(match[5], 10);\n        width = parseInt(width * hr, 10);\n      }\n\n      if (token.attrIndex(\"width\") === -1) {\n        token.attrs.push([\"width\", width]);\n      }\n\n      if (token.attrIndex(\"height\") === -1) {\n        token.attrs.push([\"height\", height]);\n      }\n\n      if (\n        options.discourse.previewing &&\n        match[6] !== \"x\" &&\n        match[4] !== \"x\"\n      ) {\n        token.attrs.push([\"class\", \"resizable\"]);\n      }\n    } else if ((data = extractDataAttribute(split[i]))) {\n      token.attrs.push(data);\n    } else if (split[i] === \"thumbnail\") {\n      token.attrs.push([\"data-thumbnail\", \"true\"]);\n    } else {\n      altSplit.push(split[i]);\n    }\n  }\n\n  const altValue = altSplit.join(\"|\").trim();\n  if (altValue === \"\") {\n    token.attrSet(\"role\", \"presentation\");\n  } else {\n    token.attrSet(\"alt\", altValue);\n  }\n\n  return slf.renderToken(tokens, idx, options);\n}\n\n// we have taken over the ![]() syntax in markdown to\n// be able to render a video or audio URL as well as the\n// image using |video and |audio in the text inside []\nfunction setupImageAndPlayableMediaRenderer(engine) {\n  engine.renderer.rules.image = renderImageOrPlayableMedia;\n}\n\n// discourse-encrypt wants this?\nexport const ATTACHMENT_CSS_CLASS = \"attachment\";\n\nfunction renderAttachment(tokens, idx, options, env, slf) {\n  const linkToken = tokens[idx];\n  const textToken = tokens[idx + 1];\n\n  const split = textToken.content.split(\"|\");\n  const contentSplit = [];\n\n  for (let i = 0, data; i < split.length; ++i) {\n    if (split[i] === ATTACHMENT_CSS_CLASS) {\n      linkToken.attrs.unshift([\"class\", split[i]]);\n    } else if ((data = extractDataAttribute(split[i]))) {\n      linkToken.attrs.push(data);\n    } else {\n      contentSplit.push(split[i]);\n    }\n  }\n\n  if (contentSplit.length > 0) {\n    textToken.content = contentSplit.join(\"|\");\n  }\n\n  return slf.renderToken(tokens, idx, options);\n}\n\nfunction setupAttachments(engine) {\n  engine.renderer.rules.link_open = renderAttachment;\n}\n\n// TODO we may just use a proper ruler from markdown it... this is a basic proxy\nclass Ruler {\n  constructor() {\n    this.rules = [];\n  }\n\n  getRules() {\n    return this.rules;\n  }\n\n  getRuleForTag(tag) {\n    this.ensureCache();\n    if (this.cache.hasOwnProperty(tag)) {\n      return this.cache[tag];\n    }\n  }\n\n  ensureCache() {\n    if (this.cache) {\n      return;\n    }\n\n    this.cache = {};\n    for (let i = this.rules.length - 1; i >= 0; i--) {\n      let info = this.rules[i];\n      this.cache[info.rule.tag] = info;\n    }\n  }\n\n  push(name, rule) {\n    this.rules.push({ name, rule });\n    this.cache = null;\n  }\n}\n\n// block bb code ruler for parsing of quotes / code / polls\nfunction setupBlockBBCode(engine) {\n  engine.block.bbcode = { ruler: new Ruler() };\n}\n\n// inline bbcode ruler for parsing of spoiler tags, discourse-chart etc\nfunction setupInlineBBCode(engine) {\n  engine.inline.bbcode = { ruler: new Ruler() };\n}\n\n// rule for text replacement via regex, used for @mentions, category hashtags, etc.\nfunction setupTextPostProcessRuler(engine) {\n  engine.core.textPostProcess = { ruler: new TextPostProcessRuler() };\n}\n","export function setup(helper) {\n  if (helper.getOptions().previewing) {\n    return;\n  }\n\n  helper.registerPlugin((md) => {\n    md.core.ruler.push(\"anchor\", (state) => {\n      for (\n        let idx = 0, lvl = 0, headingId = 0;\n        idx < state.tokens.length;\n        idx++\n      ) {\n        if (\n          state.tokens[idx].type === \"blockquote_open\" ||\n          (state.tokens[idx].type === \"bbcode_open\" &&\n            state.tokens[idx].tag === \"aside\")\n        ) {\n          ++lvl;\n        } else if (\n          state.tokens[idx].type === \"blockquote_close\" ||\n          (state.tokens[idx].type === \"bbcode_close\" &&\n            state.tokens[idx].tag === \"aside\")\n        ) {\n          --lvl;\n        }\n\n        if (lvl > 0 || state.tokens[idx].type !== \"heading_open\") {\n          continue;\n        }\n\n        const linkOpen = new state.Token(\"link_open\", \"a\", 1);\n        const linkClose = new state.Token(\"link_close\", \"a\", -1);\n\n        let slug = state.tokens[idx + 1].content\n          .toLowerCase()\n          .replace(/\\s+/g, \"-\")\n          .replace(/[^\\w\\-]+/g, \"\")\n          .replace(/\\-\\-+/g, \"-\")\n          .replace(/^-+/, \"\")\n          .replace(/-+$/, \"\");\n\n        if (slug.match(/^[^a-z]/)) {\n          slug = `h-${slug}`;\n        }\n\n        slug = `${slug || \"h\"}-${++headingId}`;\n\n        linkOpen.attrSet(\"name\", slug);\n        linkOpen.attrSet(\"class\", \"anchor\");\n        linkOpen.attrSet(\"href\", \"#\" + slug);\n\n        state.tokens[idx + 1].children.unshift(linkClose);\n        state.tokens[idx + 1].children.unshift(linkOpen);\n      }\n    });\n  });\n}\n","let isWhiteSpace;\n\nfunction trailingSpaceOnly(src, start, max) {\n  let i;\n  for (i = start; i < max; i++) {\n    let code = src.charCodeAt(i);\n    if (code === 0x0a) {\n      return true;\n    }\n    if (!isWhiteSpace(code)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nconst ATTR_REGEX =\n  /^\\s*=(.+)$|((([a-z0-9]*)\\s*)=)([“”\"][^“”\"]*[“”\"]|['][^']*[']|[^\"'“”]\\S*)/gi;\n\n// parse a tag [test a=1 b=2] to a data structure\n// {tag: \"test\", attrs={a: \"1\", b: \"2\"}\nexport function parseBBCodeTag(src, start, max, multiline) {\n  let i;\n  let tag;\n  let attrs = {};\n  let closed = false;\n  let length = 0;\n  let closingTag = false;\n\n  // closing tag\n  if (src.charCodeAt(start + 1) === 47) {\n    closingTag = true;\n    start += 1;\n  }\n\n  for (i = start + 1; i < max; i++) {\n    let letter = src[i];\n    if (\n      !((letter >= \"a\" && letter <= \"z\") || (letter >= \"A\" && letter <= \"Z\"))\n    ) {\n      break;\n    }\n  }\n\n  tag = src.slice(start + 1, i);\n\n  if (!tag) {\n    return;\n  }\n\n  if (closingTag) {\n    if (src[i] === \"]\") {\n      if (multiline && !trailingSpaceOnly(src, i + 1, max)) {\n        return;\n      }\n\n      tag = tag.toLowerCase();\n\n      return { tag, length: tag.length + 3, closing: true };\n    }\n    return;\n  }\n\n  for (; i < max; i++) {\n    let letter = src[i];\n\n    if (letter === \"]\") {\n      closed = true;\n      break;\n    }\n  }\n\n  if (closed) {\n    length = i - start + 1;\n\n    let raw = src.slice(start + tag.length + 1, i);\n\n    // trivial parser that is going to have to be rewritten at some point\n    if (raw) {\n      let match, key, val;\n\n      while ((match = ATTR_REGEX.exec(raw))) {\n        if (match[1]) {\n          key = \"_default\";\n        } else {\n          key = match[4];\n        }\n\n        val = match[1] || match[5];\n\n        if (val) {\n          val = val.trim();\n          val = val.replace(/^[\"'“”](.*)[\"'“”]$/, \"$1\");\n          attrs[key] = val;\n        }\n      }\n    }\n\n    if (multiline && !trailingSpaceOnly(src, start + length, max)) {\n      return;\n    }\n\n    tag = tag.toLowerCase();\n\n    return { tag, attrs, length };\n  }\n}\n\nfunction findBlockCloseTag(state, openTag, startLine, endLine) {\n  let nesting = 0,\n    line = startLine - 1,\n    start,\n    closeTag,\n    max;\n\n  for (;;) {\n    line++;\n    if (line >= endLine) {\n      // unclosed bbcode block should not be autoclosed by end of document.\n      return;\n    }\n\n    start = state.bMarks[line] + state.tShift[line];\n    max = state.eMarks[line];\n\n    if (start < max && state.sCount[line] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    // bbcode close [ === 91\n    if (91 !== state.src.charCodeAt(start)) {\n      continue;\n    }\n\n    if (state.sCount[line] - state.blkIndent >= 4) {\n      // closing bbcode less than 4 spaces\n      continue;\n    }\n\n    closeTag = parseBBCodeTag(state.src, start, max, true);\n\n    if (closeTag && closeTag.closing && closeTag.tag === openTag.tag) {\n      if (nesting === 0) {\n        closeTag.line = line;\n        closeTag.block = true;\n        break;\n      }\n      nesting--;\n    }\n\n    if (closeTag && !closeTag.closing && closeTag.tag === openTag.tag) {\n      nesting++;\n    }\n\n    closeTag = null;\n  }\n\n  return closeTag;\n}\n\nfunction findInlineCloseTag(state, openTag, start, max) {\n  let closeTag;\n  let possibleTag = false;\n\n  for (let j = max - 1; j > start; j--) {\n    if (!possibleTag) {\n      if (state.src.charCodeAt(j) === 93 /* ] */) {\n        possibleTag = true;\n        continue;\n      }\n      if (!isWhiteSpace(state.src.charCodeAt(j))) {\n        break;\n      }\n    } else {\n      if (state.src.charCodeAt(j) === 91 /* [ */) {\n        closeTag = parseBBCodeTag(state.src, j, max);\n        if (!closeTag || closeTag.tag !== openTag.tag || !closeTag.closing) {\n          closeTag = null;\n        } else {\n          closeTag.start = j;\n          break;\n        }\n      }\n    }\n  }\n\n  return closeTag;\n}\n\nfunction applyBBCode(state, startLine, endLine, silent, md) {\n  let nextLine,\n    oldParent,\n    oldLineMax,\n    rule,\n    start = state.bMarks[startLine] + state.tShift[startLine],\n    initial = start,\n    max = state.eMarks[startLine];\n\n  // [ === 91\n  if (91 !== state.src.charCodeAt(start)) {\n    return false;\n  }\n\n  let info = parseBBCodeTag(state.src, start, max);\n\n  if (!info || info.closing) {\n    return false;\n  }\n\n  let ruleInfo = md.block.bbcode.ruler.getRuleForTag(info.tag);\n  if (!ruleInfo) {\n    return false;\n  }\n\n  rule = ruleInfo.rule;\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) {\n    return true;\n  }\n\n  // Search for the end of the block\n  nextLine = startLine;\n\n  // We might have a single inline bbcode\n\n  let closeTag = findInlineCloseTag(state, info, start + info.length, max);\n\n  if (!closeTag) {\n    if (!trailingSpaceOnly(state.src, start + info.length, max)) {\n      return false;\n    }\n    closeTag = findBlockCloseTag(state, info, nextLine + 1, endLine);\n  }\n\n  if (!closeTag) {\n    return false;\n  }\n\n  nextLine = closeTag.line || startLine;\n\n  oldParent = state.parentType;\n  oldLineMax = state.lineMax;\n\n  // this will prevent lazy continuations from ever going past our end marker\n  // which can happen if we are parsing a bbcode block\n  state.lineMax = nextLine;\n\n  if (rule.replace) {\n    let content;\n\n    if (startLine === nextLine) {\n      content = state.src.slice(start + info.length, closeTag.start);\n    } else {\n      content = state.src.slice(\n        state.bMarks[startLine + 1],\n        state.eMarks[nextLine - 1]\n      );\n    }\n\n    if (!rule.replace.call(this, state, info, content)) {\n      return false;\n    }\n  } else {\n    if (rule.before) {\n      rule.before.call(\n        this,\n        state,\n        info,\n        state.src.slice(initial, initial + info.length + 1)\n      );\n    }\n\n    let wrapTag;\n    if (rule.wrap) {\n      let token;\n\n      if (typeof rule.wrap === \"function\") {\n        token = new state.Token(\"wrap_bbcode\", \"div\", 1);\n        token.level = state.level + 1;\n\n        if (!rule.wrap(token, info)) {\n          return false;\n        }\n\n        state.tokens.push(token);\n        state.level = token.level;\n        wrapTag = token.tag;\n      } else {\n        let split = rule.wrap.split(\".\");\n        wrapTag = split[0];\n        let className = split.slice(1).join(\" \");\n\n        token = state.push(\"wrap_bbcode\", wrapTag, 1);\n\n        if (className) {\n          token.attrs = [[\"class\", className]];\n        }\n      }\n    }\n\n    let lastToken = state.tokens[state.tokens.length - 1];\n    lastToken.map = [startLine, nextLine];\n\n    if (closeTag.block) {\n      state.md.block.tokenize(state, startLine + 1, nextLine);\n    } else {\n      let token = state.push(\"paragraph_open\", \"p\", 1);\n      token.map = [startLine, startLine];\n\n      token = state.push(\"inline\", \"\", 0);\n      token.children = [];\n      token.map = [startLine, startLine];\n      token.content = state.src.slice(start + info.length, closeTag.start);\n\n      state.push(\"paragraph_close\", \"p\", -1);\n    }\n\n    if (rule.wrap) {\n      state.push(\"wrap_bbcode\", wrapTag, -1);\n    }\n\n    if (rule.after) {\n      rule.after.call(\n        this,\n        state,\n        lastToken,\n        state.src.slice(start - 2, start + closeTag.length - 1)\n      );\n    }\n  }\n\n  state.parentType = oldParent;\n  state.lineMax = oldLineMax;\n  state.line = nextLine + 1;\n\n  return true;\n}\n\nexport function setup(helper) {\n  helper.registerPlugin((md) => {\n    const ruler = md.block.bbcode.ruler;\n\n    ruler.push(\"excerpt\", {\n      tag: \"excerpt\",\n      wrap: \"div.excerpt\",\n    });\n\n    ruler.push(\"code\", {\n      tag: \"code\",\n      replace(state, tagInfo, content) {\n        let token;\n        token = state.push(\"fence\", \"code\", 0);\n        token.content = content;\n        return true;\n      },\n    });\n\n    isWhiteSpace = md.utils.isWhiteSpace;\n    md.block.ruler.after(\n      \"fence\",\n      \"bbcode\",\n      (state, startLine, endLine, silent) => {\n        return applyBBCode(state, startLine, endLine, silent, md);\n      },\n      { alt: [\"paragraph\", \"reference\", \"blockquote\", \"list\"] }\n    );\n  });\n}\n","import { parseBBCodeTag } from \"./bbcode-block\";\n\nfunction tokenizeBBCode(state, silent, ruler) {\n  let pos = state.pos;\n\n  // 91 = [\n  if (silent || state.src.charCodeAt(pos) !== 91) {\n    return false;\n  }\n\n  const tagInfo = parseBBCodeTag(state.src, pos, state.posMax);\n\n  if (!tagInfo) {\n    return false;\n  }\n\n  let rule, i;\n\n  let ruleInfo = ruler.getRuleForTag(tagInfo.tag);\n  if (!ruleInfo) {\n    return false;\n  }\n  rule = ruleInfo.rule;\n\n  if (rule.replace) {\n    // special handling for replace\n    // we pass raw contents to callback so we simply need to greedy match to end tag\n    if (tagInfo.closing) {\n      return false;\n    }\n\n    let closeTag = \"[/\" + tagInfo.tag + \"]\";\n    let found = false;\n\n    for (\n      i = state.pos + tagInfo.length;\n      i <= state.posMax - closeTag.length;\n      i++\n    ) {\n      if (\n        state.src.charCodeAt(pos) === 91 &&\n        state.src.slice(i, i + closeTag.length).toLowerCase() === closeTag\n      ) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      return false;\n    }\n\n    let content = state.src.slice(state.pos + tagInfo.length, i);\n\n    if (rule.replace(state, tagInfo, content)) {\n      state.pos = i + closeTag.length;\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    tagInfo.rule = rule;\n\n    if (tagInfo.closing && state.tokens.at(-1)?.meta === \"bbcode\") {\n      state.push(\"text\", \"\", 0);\n    }\n\n    let token = state.push(\"text\", \"\", 0);\n    token.content = state.src.slice(pos, pos + tagInfo.length);\n    token.meta = \"bbcode\";\n\n    state.delimiters.push({\n      bbInfo: tagInfo,\n      marker: \"bb\" + tagInfo.tag,\n      open: !tagInfo.closing,\n      close: !!tagInfo.closing,\n      token: state.tokens.length - 1,\n      level: state.level,\n      end: -1,\n    });\n\n    state.pos = pos + tagInfo.length;\n    return true;\n  }\n}\n\nfunction processBBCode(state, silent) {\n  let i,\n    startDelim,\n    endDelim,\n    tagInfo,\n    delimiters = state.delimiters,\n    max = delimiters.length;\n\n  if (silent) {\n    return;\n  }\n\n  for (i = 0; i < max - 1; i++) {\n    startDelim = delimiters[i];\n    tagInfo = startDelim.bbInfo;\n\n    if (!tagInfo) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    let tag, className;\n\n    const startToken = state.tokens[startDelim.token];\n    const endToken = state.tokens[endDelim.token];\n\n    if (typeof tagInfo.rule.wrap === \"function\") {\n      let content = \"\";\n      for (let j = startDelim.token + 1; j < endDelim.token; j++) {\n        let inner = state.tokens[j];\n        if (inner.type === \"text\" && inner.meta !== \"bbcode\") {\n          content += inner.content;\n        }\n      }\n      tagInfo.rule.wrap(startToken, endToken, tagInfo, content, state);\n      continue;\n    } else {\n      let split = tagInfo.rule.wrap.split(\".\");\n      tag = split[0];\n      className = split.slice(1).join(\" \");\n    }\n\n    startToken.type = \"bbcode_\" + tagInfo.tag + \"_open\";\n    startToken.tag = tag;\n    if (className) {\n      startToken.attrs = [[\"class\", className]];\n    }\n    startToken.nesting = 1;\n    startToken.markup = startToken.content;\n    startToken.content = \"\";\n\n    endToken.type = \"bbcode_\" + tagInfo.tag + \"_close\";\n    endToken.tag = tag;\n    endToken.nesting = -1;\n    endToken.markup = startToken.content;\n    endToken.content = \"\";\n  }\n  return false;\n}\n\nexport function setup(helper) {\n  helper.allowList([\n    \"span.bbcode-b\",\n    \"span.bbcode-i\",\n    \"span.bbcode-u\",\n    \"span.bbcode-s\",\n  ]);\n\n  helper.registerOptions((opts) => {\n    opts.features[\"bbcode-inline\"] = true;\n  });\n\n  helper.registerPlugin((md) => {\n    const ruler = md.inline.bbcode.ruler;\n\n    md.inline.ruler.push(\"bbcode-inline\", (state, silent) =>\n      tokenizeBBCode(state, silent, ruler)\n    );\n    md.inline.ruler2.before(\"fragments_join\", \"bbcode-inline\", processBBCode);\n\n    ruler.push(\"code\", {\n      tag: \"code\",\n      replace(state, tagInfo, content) {\n        let token;\n        token = state.push(\"code_inline\", \"code\", 0);\n        token.content = content;\n        return true;\n      },\n    });\n\n    const simpleUrlRegex = /^https?:\\/\\//;\n    ruler.push(\"url\", {\n      tag: \"url\",\n\n      replace(state, tagInfo, content) {\n        let token;\n\n        // we need to tokenize the content and reinsert tokens in the stream\n        // this is because we need to support nested bbcode\n        let tokens = [];\n        md.inline.parse(content, state.md, state.env, tokens);\n\n        let url = tagInfo.attrs[\"_default\"];\n\n        if (!url) {\n          // try to find the actual url in the tokens\n          for (let i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            // nested linkify or link, just pick it\n            if (token.type === \"link_open\") {\n              for (let j = 0; j < token.attrs.length; j++) {\n                if (token.attrs[j][0] === \"href\") {\n                  url = token.attrs[j][1];\n                  break;\n                }\n              }\n              if (url) {\n                break;\n              }\n            }\n            if (token.type === \"text\") {\n              url = token.content;\n              break;\n            }\n          }\n        }\n\n        if (md.linkify) {\n          let match = null;\n\n          // linkify has trouble with strings containing spaces, so just ban\n          // them outright\n          if (url && !url.includes(\" \")) {\n            match = md.linkify.matchAtStart(url);\n            if (!match) {\n              match = md.linkify.matchAtStart(\"https://\" + url);\n            }\n          }\n\n          if (match) {\n            url = match.url;\n          } else {\n            url = null;\n          }\n        } else if (!url.match(simpleUrlRegex)) {\n          url = \"https://\" + url;\n        }\n\n        if (url) {\n          token = state.push(\"link_open\", \"a\", 0);\n          token.attrs = [\"href\", url];\n          token.attrs = [\n            [\"href\", url],\n            [\"data-bbcode\", \"true\"],\n          ];\n          token.content = \"\";\n          token.nesting = 1;\n        }\n\n        for (let i = 0; i < tokens.length; i++) {\n          token = tokens[i];\n          if (token.type === \"link_open\" || token.type === \"link_close\") {\n            // linkify nested tokens, do nothing\n          } else {\n            state.tokens.push(token);\n          }\n        }\n\n        if (url) {\n          token = state.push(\"link_close\", \"a\", 0);\n          token.nesting = -1;\n          token.content = \"\";\n        }\n\n        return true;\n      },\n    });\n\n    ruler.push(\"email\", {\n      tag: \"email\",\n      replace(state, tagInfo, content) {\n        let token;\n        const email = tagInfo.attrs[\"_default\"] || content;\n\n        token = state.push(\"link_open\", \"a\", 1);\n        token.attrs = [\n          [\"href\", \"mailto:\" + email],\n          [\"data-bbcode\", \"true\"],\n        ];\n\n        token = state.push(\"text\", \"\", 0);\n        token.content = content;\n\n        state.push(\"link_close\", \"a\", -1);\n        return true;\n      },\n    });\n\n    ruler.push(\"image\", {\n      tag: \"img\",\n      replace(state, tagInfo, content) {\n        let token = state.push(\"image\", \"img\", 0);\n        token.attrs = [\n          [\"src\", content],\n          [\"alt\", \"\"],\n        ];\n        token.children = [];\n        return true;\n      },\n    });\n\n    ruler.push(\"bold\", {\n      tag: \"b\",\n      wrap: \"span.bbcode-b\",\n    });\n\n    ruler.push(\"italic\", {\n      tag: \"i\",\n      wrap: \"span.bbcode-i\",\n    });\n\n    ruler.push(\"underline\", {\n      tag: \"u\",\n      wrap: \"span.bbcode-u\",\n    });\n\n    ruler.push(\"strike\", {\n      tag: \"s\",\n      wrap: \"span.bbcode-s\",\n    });\n  });\n}\n","import { censorFn } from \"pretty-text/censored-words\";\n\nfunction recurse(tokens, apply) {\n  let i;\n  for (i = 0; i < tokens.length; i++) {\n    if (tokens[i].type === \"html_raw\" && tokens[i].onebox) {\n      continue;\n    }\n\n    apply(tokens[i]);\n    if (tokens[i].children) {\n      recurse(tokens[i].children, apply);\n    }\n  }\n}\n\nfunction censorTree(state, censor) {\n  if (!state.tokens) {\n    return;\n  }\n\n  recurse(state.tokens, (token) => {\n    if (token.content) {\n      token.content = censor(token.content);\n    }\n  });\n}\n\nexport function setup(helper) {\n  helper.registerPlugin((md) => {\n    const censoredRegexps = md.options.discourse.censoredRegexp;\n\n    if (Array.isArray(censoredRegexps) && censoredRegexps.length > 0) {\n      const replacement = String.fromCharCode(9632);\n      const censor = censorFn(censoredRegexps, replacement);\n      md.core.ruler.push(\"censored\", (state) => censorTree(state, censor));\n    }\n  });\n}\n","// we need a custom renderer for code blocks cause we have a slightly non compliant\n// format with special handling for text and so on\nconst TEXT_CODE_CLASSES = [\"text\", \"pre\", \"plain\"];\n\nfunction extractTokenInfo(info, md) {\n  if (!info) {\n    return;\n  }\n\n  info = info.trim();\n\n  const matches = info.match(/(^\\s*\\S*)\\s*(.*)/i);\n  if (!matches) {\n    return;\n  }\n\n  // ensure the token has only valid chars\n  // c++, strucuted-text and p91, are all valid\n  if (!/^[\\w+-]*$/i.test(matches[1])) {\n    return;\n  }\n\n  const ASCII_REGEX = /[^\\x00-\\x7F]/;\n  const tag = md.utils.unescapeAll(matches[1].replace(ASCII_REGEX, \"\"));\n  const extractedData = { tag, attributes: {} };\n\n  if (matches[2]?.length) {\n    md.utils\n      .unescapeAll(matches[2].replace(ASCII_REGEX, \"\"))\n      .split(\",\")\n      .forEach((potentialPair) => {\n        const [key, value] = potentialPair.trim().split(/\\s+/g)[0].split(\"=\");\n\n        // invalid pairs would get caught here and not used, eg `foo=`\n        if (key && value) {\n          extractedData.attributes[key] = value;\n        }\n      });\n  }\n\n  return extractedData;\n}\n\nfunction render(tokens, idx, options, env, slf, md) {\n  const token = tokens[idx];\n  const escapedContent = md.utils.escapeHtml(token.content);\n  const tokenInfo = extractTokenInfo(token.info, md);\n  const tag = tokenInfo?.tag || md.options.discourse.defaultCodeLang;\n  const attributes = tokenInfo?.attributes || {};\n\n  let className;\n\n  if (TEXT_CODE_CLASSES.includes(tag)) {\n    className = \"lang-plaintext\";\n  } else if (tag === \"auto\") {\n    className = \"lang-auto\";\n  } else {\n    className = `lang-${md.utils.escapeHtml(tag)}`;\n    attributes[\"wrap\"] = tag;\n  }\n\n  const dataAttributes = Object.keys(attributes)\n    .map((key) => {\n      const value = md.utils.escapeHtml(attributes[key]);\n      key = md.utils.escapeHtml(key);\n      return `data-code-${key}=\"${value}\"`;\n    })\n    .join(\" \");\n\n  return `<pre${dataAttributes ? ` ${dataAttributes}` : \"\"}><code${\n    className ? ` class=\"${className}\"` : \"\"\n  }>${escapedContent}</code></pre>\\n`;\n}\n\nexport function setup(helper) {\n  helper.registerOptions((opts, siteSettings) => {\n    opts.defaultCodeLang = siteSettings.default_code_lang;\n  });\n\n  helper.allowList([\"pre[data-code-*]\"]);\n\n  helper.allowList({\n    custom(tag, name, value) {\n      if (tag === \"code\" && name === \"class\") {\n        return /^lang\\-.+$/.test(value);\n      }\n    },\n  });\n\n  helper.registerPlugin((md) => {\n    md.renderer.rules.fence = (tokens, idx, options, env, slf) =>\n      render(tokens, idx, options, env, slf, md);\n  });\n}\n","// Simple typographic replacements\n//\n// (tm) (TM) → ™\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n// --> <-- -> <- <-> <--> to → ← → ← ↔ ↔\n// (pa) (PA) → ¶\n//\n// Disabled replacements:\n//\n// (c) (C) → ©\n// (r) (R) → ®\n// (p) (P) -> §\n\nlet RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--|-->|<--|->|<-|<->|<-->/;\n\nlet SCOPED_ABBR_RE = /\\((tm|pa)\\)/gi;\nlet SCOPED_ABBR = {\n  pa: \"¶\",\n  tm: \"™\",\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replaceScoped(inlineTokens) {\n  let i, token;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n    if (token.type === \"text\") {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n  }\n}\n\nfunction replaceRare(inlineTokens) {\n  let i,\n    token,\n    inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === \"text\" && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, \"±\")\n          // Custom arrows\n          .replace(/(^|\\s)-{1,2}>(\\s|$)/gm, \"\\u0020\\u2192\\u0020\")\n          .replace(/(^|\\s)<-{1,2}(\\s|$)/gm, \"\\u0020\\u2190\\u0020\")\n          .replace(/(^|\\s)<-{1,2}>(\\s|$)/gm, \"\\u0020\\u2194\\u0020\")\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, \"…\")\n          .replace(/([?!])…/g, \"$1..\")\n          .replace(/([?!]){4,}/g, \"$1$1$1\")\n          .replace(/,{2,}/g, \",\")\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/gm, \"$1\\u2014\")\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/gm, \"$1\\u2013\")\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/gm, \"$1\\u2013\");\n      }\n    }\n\n    if (token.type === \"link_open\" && token.info === \"auto\") {\n      inside_autolink--;\n    }\n\n    if (token.type === \"link_close\" && token.info === \"auto\") {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace(state) {\n  let blkIdx;\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== \"inline\") {\n      continue;\n    }\n\n    if (SCOPED_ABBR_RE.test(state.tokens[blkIdx].content)) {\n      replaceScoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replaceRare(state.tokens[blkIdx].children);\n    }\n  }\n}\n\nexport function setup(helper) {\n  helper.registerPlugin((md) => {\n    if (md.options.typographer) {\n      md.core.ruler.at(\"replacements\", replace);\n    }\n  });\n}\n","import { parseBBCodeTag } from \"./bbcode-block\";\n\nconst WRAP_CLASS = \"d-wrap\";\n\nfunction parseAttributes(tagInfo) {\n  const attributes = tagInfo.attrs._default || \"\";\n\n  return (\n    parseBBCodeTag(`[wrap wrap=${attributes}]`, 0, attributes.length + 12)\n      .attrs || {}\n  );\n}\n\nfunction camelCaseToDash(str) {\n  return str.replace(/([a-zA-Z])(?=[A-Z])/g, \"$1-\").toLowerCase();\n}\n\nfunction applyDataAttributes(token, state, attributes) {\n  Object.keys(attributes).forEach((tag) => {\n    const value = state.md.utils.escapeHtml(attributes[tag]);\n    tag = camelCaseToDash(\n      state.md.utils.escapeHtml(tag.replace(/[^A-Za-z\\-0-9]/g, \"\"))\n    );\n\n    if (value && tag && tag.length > 1) {\n      token.attrs.push([`data-${tag}`, value]);\n    }\n  });\n}\n\nconst blockRule = {\n  tag: \"wrap\",\n\n  before(state, tagInfo) {\n    let token = state.push(\"wrap_open\", \"div\", 1);\n    token.attrs = [[\"class\", WRAP_CLASS]];\n\n    applyDataAttributes(token, state, parseAttributes(tagInfo));\n  },\n\n  after(state) {\n    state.push(\"wrap_close\", \"div\", -1);\n  },\n};\n\nconst inlineRule = {\n  tag: \"wrap\",\n\n  replace(state, tagInfo, content) {\n    let token = state.push(\"wrap_open\", \"span\", 1);\n    token.attrs = [[\"class\", WRAP_CLASS]];\n\n    applyDataAttributes(token, state, parseAttributes(tagInfo));\n\n    if (content) {\n      token = state.push(\"text\", \"\", 0);\n      token.content = content;\n    }\n\n    state.push(\"wrap_close\", \"span\", -1);\n    return true;\n  },\n};\n\nexport function setup(helper) {\n  helper.registerPlugin((md) => {\n    md.inline.bbcode.ruler.push(\"inline-wrap\", inlineRule);\n    md.block.bbcode.ruler.push(\"block-wrap\", blockRule);\n  });\n\n  helper.allowList([`div.${WRAP_CLASS}`, `span.${WRAP_CLASS}`, \"span[data-*]\"]);\n}\n","import { buildEmojiUrl, isCustomEmoji } from \"pretty-text/emoji\";\nimport { translations } from \"pretty-text/emoji/data\";\n\nconst MAX_NAME_LENGTH = 60;\n\nlet translationTree = null;\n\nexport function resetTranslationTree() {\n  translationTree = null;\n}\n\n// This allows us to efficiently search for aliases\n// We build a data structure that allows us to quickly\n// search through our N next chars to see if any match\n// one of our alias emojis.\nfunction buildTranslationTree(customEmojiTranslation) {\n  let tree = [];\n  let lastNode;\n\n  const allTranslations = Object.assign(\n    {},\n    translations,\n    customEmojiTranslation || {}\n  );\n\n  Object.keys(allTranslations).forEach((key) => {\n    let node = tree;\n\n    for (let i = 0; i < key.length; i++) {\n      let code = key.charCodeAt(i);\n      let found = false;\n\n      for (let j = 0; j < node.length; j++) {\n        if (node[j][0] === code) {\n          node = node[j][1];\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        // code, children, value\n        let tmp = [code, []];\n        node.push(tmp);\n        lastNode = tmp;\n        node = tmp[1];\n      }\n    }\n\n    lastNode[2] = allTranslations[key];\n  });\n\n  return tree;\n}\n\nfunction imageFor(code, opts) {\n  code = code.toLowerCase();\n  const url = buildEmojiUrl(code, opts);\n  if (url) {\n    const title = `:${code}:`;\n    const classes = isCustomEmoji(code, opts) ? \"emoji emoji-custom\" : \"emoji\";\n    return { url, title, classes };\n  }\n}\n\nfunction getEmojiName(content, pos, state, inlineEmoji) {\n  if (content.charCodeAt(pos) !== 58) {\n    return;\n  }\n\n  if (pos > 0) {\n    let prev = content.charCodeAt(pos - 1);\n    if (\n      !inlineEmoji &&\n      !state.md.utils.isSpace(prev) &&\n      !state.md.utils.isPunctChar(String.fromCharCode(prev))\n    ) {\n      return;\n    }\n  }\n\n  pos++;\n  if (content.charCodeAt(pos) === 58) {\n    return;\n  }\n\n  let length = 0;\n  while (length < MAX_NAME_LENGTH) {\n    length++;\n\n    if (content.charCodeAt(pos + length) === 58) {\n      // check for t2-t6\n      if (content.slice(pos + length + 1, pos + length + 4).match(/t[2-6]:/)) {\n        length += 3;\n      }\n      break;\n    }\n\n    if (pos + length > content.length) {\n      return;\n    }\n  }\n\n  if (length === MAX_NAME_LENGTH) {\n    return;\n  }\n\n  return content.slice(pos, pos + length);\n}\n\n// straight forward :smile: to emoji image\nfunction getEmojiTokenByName(name, state) {\n  let info;\n  if ((info = imageFor(name, state.md.options.discourse))) {\n    let token = new state.Token(\"emoji\", \"img\", 0);\n    token.attrs = [\n      [\"src\", info.url],\n      [\"title\", info.title],\n      [\"class\", info.classes],\n      [\"alt\", info.title],\n      [\"loading\", \"lazy\"],\n      [\"width\", \"20\"],\n      [\"height\", \"20\"],\n    ];\n\n    return token;\n  }\n}\n\nfunction getEmojiTokenByTranslation(\n  content,\n  pos,\n  state,\n  customEmojiTranslation\n) {\n  translationTree =\n    translationTree || buildTranslationTree(customEmojiTranslation);\n\n  let t = translationTree;\n  let start = pos;\n  let found = null;\n\n  while (t.length > 0 && pos < content.length) {\n    let matched = false;\n    let code = content.charCodeAt(pos);\n\n    for (let i = 0; i < t.length; i++) {\n      if (t[i][0] === code) {\n        matched = true;\n        found = t[i][2];\n        t = t[i][1];\n        break;\n      }\n    }\n\n    if (!matched) {\n      return;\n    }\n\n    pos++;\n  }\n\n  if (!found) {\n    return;\n  }\n\n  // quick boundary check\n  if (start > 0) {\n    let leading = content.charAt(start - 1);\n    if (\n      !state.md.utils.isSpace(leading.charCodeAt(0)) &&\n      !state.md.utils.isPunctChar(leading)\n    ) {\n      return;\n    }\n  }\n\n  // check trailing for punct or space\n  if (pos < content.length) {\n    let trailing = content.charCodeAt(pos);\n    if (!state.md.utils.isSpace(trailing)) {\n      return;\n    }\n  }\n\n  let token = getEmojiTokenByName(found, state);\n  if (token) {\n    return { pos, token };\n  }\n}\n\nfunction applyEmoji(\n  content,\n  state,\n  emojiUnicodeReplacer,\n  enableShortcuts,\n  inlineEmoji,\n  customEmojiTranslation,\n  watchedWordsReplacer,\n  emojiDenyList\n) {\n  let result = null;\n  let start = 0;\n\n  if (emojiUnicodeReplacer) {\n    content = emojiUnicodeReplacer(content);\n  }\n\n  if (watchedWordsReplacer) {\n    const watchedWordRegex = Object.keys(watchedWordsReplacer);\n\n    watchedWordRegex.forEach((watchedWord) => {\n      if (content?.match(watchedWord)) {\n        const regex = new RegExp(watchedWord, \"g\");\n        const matches = content.match(regex);\n        const replacement = watchedWordsReplacer[watchedWord].replacement;\n\n        matches.forEach(() => {\n          const matchingRegex = regex.exec(content);\n          if (matchingRegex) {\n            content = content.replace(matchingRegex[1], replacement);\n          }\n        });\n      }\n    });\n  }\n\n  // prevent denied emoji and aliases from being rendered\n  if (emojiDenyList?.length > 0) {\n    emojiDenyList.forEach((emoji) => {\n      if (content?.match(emoji)) {\n        const regex = new RegExp(`:${emoji}:`, \"g\");\n        content = content.replace(regex, \"\");\n      }\n    });\n  }\n\n  let end = content.length;\n\n  for (let i = 0; i < content.length - 1; i++) {\n    let offset = 0;\n    let token = null;\n\n    const name = getEmojiName(content, i, state, inlineEmoji);\n\n    if (name) {\n      token = getEmojiTokenByName(name, state);\n      if (token) {\n        offset = name.length + 2;\n      }\n    }\n\n    if (enableShortcuts && !token) {\n      // handle aliases (note: we can't do this in inline cause ; is not a split point)\n      const info = getEmojiTokenByTranslation(\n        content,\n        i,\n        state,\n        customEmojiTranslation\n      );\n\n      if (info) {\n        offset = info.pos - i;\n        token = info.token;\n      }\n    }\n\n    if (token) {\n      result = result || [];\n\n      if (i - start > 0) {\n        let text = new state.Token(\"text\", \"\", 0);\n        text.content = content.slice(start, i);\n        result.push(text);\n      }\n\n      result.push(token);\n\n      end = start = i + offset;\n      i += offset - 1;\n    }\n  }\n\n  if (end < content.length) {\n    let text = new state.Token(\"text\", \"\", 0);\n    text.content = content.slice(end);\n    result.push(text);\n  }\n\n  // we check for a result <= 5 because we support maximum 3 large emojis\n  // EMOJI SPACE EMOJI SPACE EMOJI => 5 tokens\n  if (result && result.length > 0 && result.length <= 5) {\n    // we ensure line starts and ends with an emoji\n    // and has no more than 3 emojis\n    if (\n      result[0].type === \"emoji\" &&\n      result[result.length - 1].type === \"emoji\" &&\n      result.filter((r) => r.type === \"emoji\").length <= 3\n    ) {\n      let onlyEmojiLine = true;\n      let index = 0;\n\n      const checkNextToken = (t) => {\n        if (!t) {\n          return;\n        }\n\n        if (![\"emoji\", \"text\"].includes(t.type)) {\n          onlyEmojiLine = false;\n        }\n\n        // a text token should always have an emoji before\n        // and be a space\n        if (\n          t.type === \"text\" &&\n          ((result[index - 1] && result[index - 1].type !== \"emoji\") ||\n            t.content !== \" \")\n        ) {\n          onlyEmojiLine = false;\n        }\n\n        // exit as soon as possible\n        if (onlyEmojiLine) {\n          index += 1;\n          checkNextToken(result[index]);\n        }\n      };\n\n      checkNextToken(result[index]);\n\n      if (onlyEmojiLine) {\n        result.forEach((r) => {\n          if (r.type === \"emoji\") {\n            applyOnlyEmojiClass(r);\n          }\n        });\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction applyOnlyEmojiClass(token) {\n  token.attrs.forEach((attr) => {\n    if (attr[0] === \"class\") {\n      attr[1] = `${attr[1]} only-emoji`;\n    }\n  });\n}\n\nexport function setup(helper) {\n  helper.registerOptions((opts, siteSettings, state) => {\n    opts.features.emoji = !state.disableEmojis && !!siteSettings.enable_emoji;\n    opts.features.emojiShortcuts = !!siteSettings.enable_emoji_shortcuts;\n    opts.features.inlineEmoji = !!siteSettings.enable_inline_emoji_translation;\n    opts.emojiSet = siteSettings.emoji_set || \"\";\n    opts.customEmoji = state.customEmoji;\n    opts.emojiCDNUrl = siteSettings.external_emoji_url;\n    opts.emojiDenyList = state.emojiDenyList;\n  });\n\n  helper.registerPlugin((md) => {\n    md.core.ruler.push(\"emoji\", (state) =>\n      md.options.discourse.helpers.textReplace(state, (c, s) =>\n        applyEmoji(\n          c,\n          s,\n          md.options.discourse.emojiUnicodeReplacer,\n          md.options.discourse.features.emojiShortcuts,\n          md.options.discourse.features.inlineEmoji,\n          md.options.discourse.customEmojiTranslation,\n          md.options.discourse.watchedWordsReplace,\n          md.options.discourse.emojiDenyList\n        )\n      )\n    );\n  });\n\n  helper.allowList([\n    \"img[class=emoji]\",\n    \"img[class=emoji emoji-custom]\",\n    \"img[class=emoji emoji-custom only-emoji]\",\n    \"img[class=emoji only-emoji]\",\n    \"img[loading=lazy]\",\n    \"img[width=20]\",\n    \"img[height=20]\",\n  ]);\n}\n","// NOTE: For future maintainers, the hashtag lookup here does not take\n// into account mixed contexts -- for instance, a chat quote inside a post\n// or a post quote inside a chat message, so hashtagTypesInPriorityOrder may\n// not provide an accurate lookup for hashtags without a ::type suffix in those\n// cases if there are conflcting types of resources with the same slug.\n\nfunction addHashtag(buffer, matches, state) {\n  const options = state.md.options.discourse;\n  const slug = matches[1];\n  const hashtagLookup = options.hashtagLookup;\n\n  // NOTE: The lookup function is only run when cooking\n  // server-side, and will only return a single result based on the\n  // slug lookup.\n  const result =\n    hashtagLookup &&\n    hashtagLookup(slug, options.userId, options.hashtagTypesInPriorityOrder);\n\n  // NOTE: When changing the HTML structure here, you must also change\n  // it in the placeholder HTML code inside lib/hashtag-autocomplete, and vice-versa.\n  let token;\n  if (result) {\n    token = new state.Token(\"link_open\", \"a\", 1);\n\n    // Data attributes here are used later on for things like quoting\n    // HTML-to-markdown\n    token.attrs = [\n      [\"class\", \"hashtag-cooked\"],\n      [\"href\", result.relative_url],\n      [\"data-type\", result.type],\n      [\"data-slug\", result.slug],\n      [\"data-id\", result.id],\n    ];\n\n    // Most cases these will be the exact same, one standout is categories\n    // which have a parent:child reference.\n    if (result.slug !== result.ref) {\n      token.attrs.push([\"data-ref\", result.ref]);\n    }\n\n    token.block = false;\n    buffer.push(token);\n\n    addIconPlaceholder(buffer, state);\n\n    token = new state.Token(\"span_open\", \"span\", 1);\n    token.block = false;\n    buffer.push(token);\n\n    token = new state.Token(\"text\", \"\", 0);\n    token.content = result.text;\n    buffer.push(token);\n\n    buffer.push(new state.Token(\"span_close\", \"span\", -1));\n\n    buffer.push(new state.Token(\"link_close\", \"a\", -1));\n  } else {\n    token = new state.Token(\"span_open\", \"span\", 1);\n    token.attrs = [[\"class\", \"hashtag-raw\"]];\n    buffer.push(token);\n\n    token = new state.Token(\"span_open\", \"span\", 1);\n    token = new state.Token(\"text\", \"\", 0);\n    token.content = matches[0];\n    buffer.push(token);\n    token = new state.Token(\"span_close\", \"span\", -1);\n\n    token = new state.Token(\"span_close\", \"span\", -1);\n    buffer.push(token);\n  }\n}\n\n// The svg icon is not baked into the HTML because we want\n// to be able to use icon replacement via renderIcon, and\n// because different hashtag types may render icons/CSS\n// classes differently.\n//\n// Instead, the UI will dynamically replace these where hashtags\n// are rendered, like within posts, using decorateCooked* APIs.\nfunction addIconPlaceholder(buffer, state) {\n  let token = new state.Token(\"span_open\", \"span\", 1);\n  token.block = false;\n  token.attrs = [[\"class\", \"hashtag-icon-placeholder\"]];\n  buffer.push(token);\n\n  token = new state.Token(\"svg_open\", \"svg\", 1);\n  token.block = false;\n  token.attrs = [[\"class\", `fa d-icon d-icon-square-full svg-icon svg-node`]];\n  buffer.push(token);\n\n  token = new state.Token(\"use_open\", \"use\", 1);\n  token.block = false;\n  token.attrs = [[\"href\", \"#square-full\"]];\n  buffer.push(token);\n\n  buffer.push(new state.Token(\"use_close\", \"use\", -1));\n  buffer.push(new state.Token(\"svg_close\", \"svg\", -1));\n\n  buffer.push(new state.Token(\"span_close\", \"span\", -1));\n}\n\nexport function setup(helper) {\n  helper.registerPlugin((md) => {\n    const rule = {\n      matcher: /#([\\u00C0-\\u1FFF\\u2C00-\\uD7FF\\w:-]{1,101})/,\n      onMatch: addHashtag,\n    };\n\n    md.core.textPostProcess.ruler.push(\"hashtag-autocomplete\", rule);\n  });\n\n  helper.allowList([\n    \"a.hashtag-cooked\",\n    \"span.hashtag-raw\",\n    \"span.hashtag-icon-placeholder\",\n    \"svg[class=fa d-icon d-icon-square-full svg-icon svg-node]\",\n    \"use[href=#square-full]\",\n    \"a[data-type]\",\n    \"a[data-slug]\",\n    \"a[data-ref]\",\n    \"a[data-id]\",\n  ]);\n}\n","// special handling for IMG tags on a line by themselves\n// we always have to handle it as so it is an inline\n// see: https://talk.commonmark.org/t/newline-and-img-tags/2511\n\nconst REGEX = /^<img.*\\\\?>\\s*$/i;\n\nfunction rule(state, startLine, endLine) {\n  let nextLine,\n    token,\n    lineText,\n    pos = state.bMarks[startLine] + state.tShift[startLine],\n    max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (!state.md.options.html) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x3c /* < */) {\n    return false;\n  }\n  let pos1 = state.src.charCodeAt(pos + 1);\n  if (pos1 !== 73 /* I */ && pos1 !== 105 /* i */) {\n    return false;\n  }\n\n  lineText = state.src.slice(pos, max);\n\n  if (!REGEX.test(lineText)) {\n    return false;\n  }\n\n  let lines = [];\n  lines.push(lineText);\n\n  nextLine = startLine + 1;\n  for (; nextLine < endLine; nextLine++) {\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n    lineText = state.src.slice(pos, max);\n\n    if (lineText.trim() === \"\") {\n      break;\n    }\n\n    if (!REGEX.test(lineText)) {\n      break;\n    }\n\n    lines.push(lineText);\n  }\n\n  state.line = nextLine;\n  let oldParentType = state.parentType;\n  state.parentType = \"paragraph\";\n\n  token = state.push(\"paragraph_open\", \"p\", 1);\n  token.map = [startLine, state.line];\n\n  token = state.push(\"inline\", \"\", 0);\n  token.content = lines.join(\"\\n\");\n  token.map = [startLine, state.line];\n  token.children = [];\n\n  state.push(\"paragraph_close\", \"p\", -1);\n  state.parentType = oldParentType;\n\n  return true;\n}\n\nexport function setup(helper) {\n  helper.registerPlugin((md) => {\n    md.block.ruler.before(\"html_block\", \"html_img\", rule, { alt: [\"fence\"] });\n  });\n}\n","import I18n from \"discourse-i18n\";\n\nconst SCALES = [\"100\", \"75\", \"50\"];\n\nfunction isUpload(token) {\n  return token.content.includes(\"upload://\");\n}\n\nfunction hasMetadata(token) {\n  return token.content.match(/(\\d{1,4}x\\d{1,4})/);\n}\n\nfunction appendMetaData(index, token) {\n  const sizePart = token.content\n    .split(\"|\")\n    .find((x) => x.match(/\\d{1,4}x\\d{1,4}(,\\s*\\d{1,3}%)?/));\n  let selectedScale =\n    sizePart && sizePart.split(\",\").pop().trim().replace(\"%\", \"\");\n\n  const overwriteScale = !SCALES.find((scale) => scale === selectedScale);\n  if (overwriteScale) {\n    selectedScale = \"100\";\n  }\n\n  token.attrs.push([\"index-image\", index]);\n  token.attrs.push([\"scale\", selectedScale]);\n}\n\nfunction rule(state) {\n  let currentIndex = 0;\n\n  for (let i = 0; i < state.tokens.length; i++) {\n    let blockToken = state.tokens[i];\n    const blockTokenImage = blockToken.tag === \"img\";\n\n    if (blockTokenImage && isUpload(blockToken) && hasMetadata(blockToken)) {\n      appendMetaData(currentIndex, blockToken);\n      currentIndex++;\n    }\n\n    if (!blockToken.children) {\n      continue;\n    }\n\n    for (let j = 0; j < blockToken.children.length; j++) {\n      let token = blockToken.children[j];\n      const childrenImage = token.tag === \"img\";\n\n      if (childrenImage && isUpload(blockToken) && hasMetadata(token)) {\n        appendMetaData(currentIndex, token);\n        currentIndex++;\n      }\n    }\n  }\n}\n\nfunction buildScaleButton(selectedScale, scale) {\n  const activeScaleClass = selectedScale === scale ? \" active\" : \"\";\n  return (\n    \"<span class='scale-btn\" +\n    activeScaleClass +\n    \"' data-scale='\" +\n    scale +\n    \"'>\" +\n    scale +\n    \"%</span>\"\n  );\n}\n\nfunction buildImageShowAltTextControls(altText) {\n  return `\n  <span class=\"alt-text-readonly-container\">\n  <span class=\"alt-text-edit-btn\">\n  <svg aria-hidden=\"true\" class=\"fa d-icon d-icon-pencil svg-icon svg-string\"><use href=\"#pencil-alt\"></use></svg>\n</span>\n\n  <span class=\"alt-text\" aria-label=\"${I18n.t(\n    \"composer.image_alt_text.aria_label\"\n  )}\">${altText}</span>\n  </span>\n  `;\n}\n\nfunction buildImageEditAltTextControls(altText) {\n  return `\n  <span class=\"alt-text-edit-container\" hidden=\"true\">\n    <input class=\"alt-text-input\" type=\"text\" value=\"${altText}\" />\n    <button class=\"alt-text-edit-ok btn btn-primary\">\n        <svg class=\"fa d-icon d-icon-check svg-icon svg-string\"><use href=\"#check\"></use></svg>\n    </button>\n    <button class=\"alt-text-edit-cancel btn btn-default\">\n        <svg class=\"fa d-icon d-icon-times svg-icon svg-string\"><use href=\"#times\"></use></svg>\n    </button>\n  </span>\n  `;\n}\n\nfunction buildImageDeleteButton() {\n  return `\n  <span class=\"delete-image-button\" aria-label=\"${I18n.t(\n    \"composer.delete_image_button\"\n  )}\">\n  <svg class=\"fa d-icon d-icon-trash-alt svg-icon svg-string\" xmlns=\"http://www.w3.org/2000/svg\">\n  <use href=\"#far-trash-alt\"></use>\n  </svg>\n   </span>\n  `;\n}\n\nfunction buildImageGalleryControl(imageCount) {\n  return `\n  <span class=\"wrap-image-grid-button\" title=\"${I18n.t(\n    \"composer.toggle_image_grid\"\n  )}\" data-image-count=\"${imageCount}\">\n    <svg class=\"fa d-icon d-icon-th svg-icon svg-string\" xmlns=\"http://www.w3.org/2000/svg\">\n    <use href=\"#th\"></use>\n    </svg>\n  </span>\n  `;\n}\n\n// We need this to load after `upload-protocol` which is priority 0\nexport const priority = 1;\n\nfunction ruleWithImageControls(oldRule) {\n  return function (tokens, idx, options, env, slf) {\n    const token = tokens[idx];\n    const scaleIndex = token.attrIndex(\"scale\");\n    const imageIndex = token.attrIndex(\"index-image\");\n\n    if (scaleIndex !== -1) {\n      let selectedScale = token.attrs[scaleIndex][1];\n      let index = token.attrs[imageIndex][1];\n\n      let result = `<span class=\"image-wrapper\">`;\n\n      result += oldRule(tokens, idx, options, env, slf);\n\n      result += `<span class=\"button-wrapper\" data-image-index=\"${index}\">`;\n      if (idx === 0) {\n        const imageCount = tokens.filter((x) => x.type === \"image\").length;\n        if (imageCount > 1) {\n          result += buildImageGalleryControl(imageCount);\n        }\n      }\n      result += buildImageShowAltTextControls(\n        token.attrs[token.attrIndex(\"alt\")][1]\n      );\n      result += buildImageEditAltTextControls(\n        token.attrs[token.attrIndex(\"alt\")][1]\n      );\n\n      result += `<span class=\"scale-btn-container\">`;\n      result += SCALES.map((scale) =>\n        buildScaleButton(selectedScale, scale)\n      ).join(\"\");\n      result += `</span>`;\n      result += buildImageDeleteButton();\n\n      result += \"</span></span>\";\n\n      return result;\n    } else {\n      return oldRule(tokens, idx, options, env, slf);\n    }\n  };\n}\n\nexport function setup(helper) {\n  const opts = helper.getOptions();\n  if (opts.previewing) {\n    helper.allowList([\n      \"span.image-wrapper\",\n      \"span.button-wrapper\",\n      \"span[class=scale-btn-container]\",\n      \"span[class=scale-btn]\",\n      \"span[class=scale-btn active]\",\n      \"span.separator\",\n      \"span.scale-btn[data-scale]\",\n      \"span.button-wrapper[data-image-index]\",\n      \"span[aria-label]\",\n      \"span[class=delete-image-button]\",\n      \"span.alt-text-container\",\n      \"span.alt-text-readonly-container\",\n      \"span.alt-text-readonly-container.alt-text\",\n      \"span.alt-text-readonly-container.alt-text-edit-btn\",\n      \"svg[class=fa d-icon d-icon-pencil svg-icon svg-string]\",\n      \"use[href=#pencil-alt]\",\n      \"use[href=#far-trash-alt]\",\n\n      \"span.alt-text-edit-container\",\n      \"span.delete-image-button\",\n      \"span[hidden=true]\",\n      \"input[type=text]\",\n      \"input[class=alt-text-input]\",\n      \"button[class=alt-text-edit-ok btn btn-primary]\",\n      \"svg[class=fa d-icon d-icon-check svg-icon svg-string]\",\n      \"use[href=#check]\",\n      \"button[class=alt-text-edit-cancel btn btn-default]\",\n      \"svg[class=fa d-icon d-icon-times svg-icon svg-string]\",\n      \"svg[class=fa d-icon d-icon-trash-alt svg-icon svg-string]\",\n      \"use[href=#times]\",\n\n      \"span.wrap-image-grid-button\",\n      \"span.wrap-image-grid-button[data-image-count]\",\n      \"svg[class=fa d-icon d-icon-th svg-icon svg-string]\",\n      \"use[href=#th]\",\n    ]);\n\n    helper.registerPlugin((md) => {\n      const oldRule = md.renderer.rules.image;\n\n      md.renderer.rules.image = ruleWithImageControls(oldRule);\n\n      md.core.ruler.after(\"upload-protocol\", \"resize-controls\", rule);\n    });\n  }\n}\n","const gridRule = {\n  tag: \"grid\",\n  before(state) {\n    let token = state.push(\"bbcode_open\", \"div\", 1);\n    token.attrs = [[\"class\", \"d-image-grid\"]];\n  },\n\n  after(state) {\n    state.push(\"bbcode_close\", \"div\", -1);\n  },\n};\n\nexport function setup(helper) {\n  helper.allowList([\"div.d-image-grid\"]);\n\n  helper.registerPlugin((md) => {\n    md.block.bbcode.ruler.push(\"grid\", gridRule);\n  });\n}\n","import * as anchor from \"./anchor\";\nimport * as bbcodeBlock from \"./bbcode-block\";\nimport * as bbcodeInline from \"./bbcode-inline\";\nimport * as censored from \"./censored\";\nimport * as code from \"./code\";\nimport * as customTypographerReplacements from \"./custom-typographer-replacements\";\nimport * as dWrap from \"./d-wrap\";\nimport * as emoji from \"./emoji\";\nimport * as hashtagAutocomplete from \"./hashtag-autocomplete\";\nimport * as htmlImg from \"./html-img\";\nimport * as imageControls from \"./image-controls\";\nimport * as imageGrid from \"./image-grid\";\nimport * as mentions from \"./mentions\";\nimport * as newline from \"./newline\";\nimport * as onebox from \"./onebox\";\nimport * as paragraph from \"./paragraph\";\nimport * as quotes from \"./quotes\";\nimport * as table from \"./table\";\nimport * as textPostProcess from \"./text-post-process\";\nimport * as uploadProtocol from \"./upload-protocol\";\nimport * as watchedWords from \"./watched-words\";\n\nexport default [\n  feature(\"watched-words\", watchedWords),\n  feature(\"upload-protocol\", uploadProtocol),\n  feature(\"text-post-process\", textPostProcess),\n  feature(\"table\", table),\n  feature(\"quotes\", quotes),\n  feature(\"paragraph\", paragraph),\n  feature(\"onebox\", onebox),\n  feature(\"newline\", newline),\n  feature(\"mentions\", mentions),\n  feature(\"image-grid\", imageGrid),\n  feature(\"image-controls\", imageControls),\n  feature(\"html-img\", htmlImg),\n  feature(\"hashtag-autocomplete\", hashtagAutocomplete),\n  feature(\"emoji\", emoji),\n  feature(\"d-wrap\", dWrap),\n  feature(\"custom-typographer-replacements\", customTypographerReplacements),\n  feature(\"code\", code),\n  feature(\"censored\", censored),\n  feature(\"bbcode-inline\", bbcodeInline),\n  feature(\"bbcode-block\", bbcodeBlock),\n  feature(\"anchor\", anchor),\n];\n\nfunction feature(id, { setup, priority = 0 }) {\n  return { id, setup, priority };\n}\n","import { mentionRegex } from \"pretty-text/mentions\";\n\nfunction addMention(buffer, matches, state) {\n  let username = matches[1] || matches[2];\n  let tag = \"span\";\n  let className = \"mention\";\n\n  let token = new state.Token(\"mention_open\", tag, 1);\n  token.attrs = [[\"class\", className]];\n\n  buffer.push(token);\n\n  token = new state.Token(\"text\", \"\", 0);\n  token.content = \"@\" + username;\n\n  buffer.push(token);\n\n  token = new state.Token(\"mention_close\", tag, -1);\n  buffer.push(token);\n}\n\nexport function setup(helper) {\n  helper.registerOptions((opts, siteSettings) => {\n    opts.features.mentions = !!siteSettings.enable_mentions;\n    opts.features.unicodeUsernames = !!siteSettings.unicode_usernames;\n  });\n\n  helper.registerPlugin((md) => {\n    const rule = {\n      matcher: mentionRegex(md.options.discourse.features.unicodeUsernames),\n      onMatch: addMention,\n    };\n\n    md.core.textPostProcess.ruler.push(\"mentions\", rule);\n  });\n}\n","// see: https://github.com/markdown-it/markdown-it/issues/375\n//\n// we use a custom paragraph rule cause we have to signal when a\n// link starts with a space, so we can bypass a onebox\n// this is a freedom patch, so careful, may break on updates\n\nfunction newline(state, silent) {\n  let token,\n    pmax,\n    max,\n    ws,\n    pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0a /* \\n */) {\n    return false;\n  }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // conversion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) {\n          ws--;\n        }\n\n        state.pending = state.pending.slice(0, ws);\n        token = state.push(\"hardbreak\", \"br\", 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        token = state.push(\"softbreak\", \"br\", 0);\n      }\n    } else {\n      token = state.push(\"softbreak\", \"br\", 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.md.utils.isSpace(state.src.charCodeAt(pos))) {\n    if (token) {\n      token.leading_space = true;\n    }\n    pos++;\n  }\n\n  state.pos = pos;\n  return true;\n}\n\nexport function setup(helper) {\n  helper.registerPlugin((md) => {\n    md.inline.ruler.at(\"newline\", newline);\n  });\n}\n","import { cachedInlineOnebox } from \"pretty-text/inline-oneboxer\";\nimport { lookupCache } from \"pretty-text/oneboxer-cache\";\n\nconst ONEBOX = 1;\nconst INLINE = 2;\n\nfunction isTopLevel(href) {\n  let split = href.split(/https?:\\/\\/[^\\/]+[\\/?]/i);\n  let hasExtra = split && split[1] && split[1].length > 0;\n  return !hasExtra;\n}\n\nfunction applyOnebox(state, silent) {\n  if (silent || !state.tokens) {\n    return;\n  }\n\n  for (let i = 1; i < state.tokens.length; i++) {\n    let token = state.tokens[i];\n    let prev = state.tokens[i - 1];\n    let mode =\n      prev.type === \"paragraph_open\" && prev.level === 0 ? ONEBOX : INLINE;\n\n    if (token.type === \"inline\") {\n      let children = token.children;\n      for (let j = 0; j < children.length - 2; j++) {\n        let child = children[j];\n\n        if (\n          child.type === \"link_open\" &&\n          child.markup === \"linkify\" &&\n          child.info === \"auto\"\n        ) {\n          if (j > children.length - 3) {\n            continue;\n          }\n\n          if (j === 0 && token.leading_space) {\n            mode = INLINE;\n          } else if (j > 0) {\n            let prevSibling = children[j - 1];\n            if (prevSibling.tag !== \"br\" || prevSibling.leading_space) {\n              mode = INLINE;\n            }\n          }\n\n          // look ahead for soft or hard break\n          let text = children[j + 1];\n          let close = children[j + 2];\n          let lookahead = children[j + 3];\n\n          if (lookahead && lookahead.tag !== \"br\") {\n            mode = INLINE;\n          }\n\n          // check attrs only include a href\n          let attrs = child.attrs;\n\n          if (!attrs || attrs.length !== 1 || attrs[0][0] !== \"href\") {\n            continue;\n          }\n\n          let href = attrs[0][1];\n\n          // edge case ... what if this is not http or protocolless?\n          if (!/^http|^\\/\\//i.test(href)) {\n            continue;\n          }\n\n          // we already know text matches cause it is an auto link\n          if (!close || close.type !== \"link_close\") {\n            continue;\n          }\n\n          if (mode === ONEBOX) {\n            // we already determined earlier that 0 0 was href\n            let cached = lookupCache(attrs[0][1]);\n\n            if (cached) {\n              // replace link with 2 blank text nodes and inline html for onebox\n              child.type = \"html_raw\";\n              child.content = cached;\n              child.inline = true;\n              child.onebox = true;\n\n              text.type = \"html_raw\";\n              text.content = \"\";\n              text.inline = true;\n\n              close.type = \"html_raw\";\n              close.content = \"\";\n              close.inline = true;\n            } else {\n              // decorate...\n              attrs.push([\"class\", \"onebox\"]);\n              attrs.push([\"target\", \"_blank\"]);\n            }\n          } else if (mode === INLINE && !isTopLevel(href)) {\n            const onebox = cachedInlineOnebox(href);\n\n            if (onebox && onebox.title) {\n              text.content = onebox.title;\n              attrs.push([\"class\", \"inline-onebox\"]);\n            } else if (!onebox) {\n              attrs.push([\"class\", \"inline-onebox-loading\"]);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function setup(helper) {\n  helper.registerPlugin((md) => {\n    md.core.ruler.after(\"linkify\", \"onebox\", applyOnebox);\n  });\n}\n","// see: https://github.com/markdown-it/markdown-it/issues/375\n//\n// we use a custom paragraph rule cause we have to signal when a\n// link starts with a space, so we can bypass a onebox\n// this is a freedom patch, so careful, may break on updates\nfunction paragraph(state, startLine /*, endLine*/) {\n  let content,\n    terminate,\n    i,\n    l,\n    token,\n    oldParentType,\n    nextLine = startLine + 1,\n    terminatorRules = state.md.block.ruler.getRules(\"paragraph\"),\n    endLine = state.lineMax,\n    hasLeadingSpace = false;\n\n  oldParentType = state.parentType;\n  state.parentType = \"paragraph\";\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) {\n      break;\n    }\n  }\n\n  // START CUSTOM CODE\n  content = state.getLines(startLine, nextLine, state.blkIndent, false);\n\n  i = 0;\n  let contentLength = content.length;\n  while (i < contentLength) {\n    let chr = content.charCodeAt(i);\n    if (chr === 0x0a) {\n      hasLeadingSpace = false;\n    } else if (state.md.utils.isWhiteSpace(chr)) {\n      hasLeadingSpace = true;\n    } else {\n      break;\n    }\n    i++;\n  }\n\n  content = content.trim();\n  // END CUSTOM CODE\n\n  state.line = nextLine;\n\n  token = state.push(\"paragraph_open\", \"p\", 1);\n  token.map = [startLine, state.line];\n  // CUSTOM\n  token.leading_space = hasLeadingSpace;\n\n  token = state.push(\"inline\", \"\", 0);\n  token.content = content;\n  token.map = [startLine, state.line];\n  token.children = [];\n  // CUSTOM\n  token.leading_space = hasLeadingSpace;\n\n  state.push(\"paragraph_close\", \"p\", -1);\n\n  state.parentType = oldParentType;\n  return true;\n}\n\nexport function setup(helper) {\n  helper.registerPlugin((md) => {\n    md.block.ruler.at(\"paragraph\", paragraph);\n  });\n}\n","import { performEmojiUnescape } from \"pretty-text/emoji\";\n\nconst rule = {\n  tag: \"quote\",\n\n  before(state, tagInfo) {\n    const attrs = tagInfo.attrs;\n    let options = state.md.options.discourse;\n\n    let quoteInfo = attrs[\"_default\"];\n    let username,\n      postNumber,\n      topicId,\n      avatarImg,\n      primaryGroupName,\n      full,\n      displayName;\n\n    if (quoteInfo) {\n      let split = quoteInfo.split(/\\,\\s*/);\n      username = split[0];\n\n      let i;\n      for (i = 1; i < split.length; i++) {\n        if (split[i].startsWith(\"post:\")) {\n          postNumber = parseInt(split[i].slice(5), 10);\n          continue;\n        }\n\n        if (split[i].startsWith(\"topic:\")) {\n          topicId = parseInt(split[i].slice(6), 10);\n          continue;\n        }\n\n        if (/full:\\s*true/.test(split[i])) {\n          full = true;\n          continue;\n        }\n\n        // if we have the additional attribute of username: because we are prioritizing full name\n        // then assign the name to be the displayName\n        if (split[i].startsWith(\"username:\")) {\n          // return users name by selecting all values from the first index to the post\n          // this protects us from when a user has a `,` in their name\n          displayName = split.slice(0, split.indexOf(`post:${postNumber}`));\n\n          // preserve `,` in a users name if they exist\n          if (displayName.length > 1) {\n            displayName = displayName.join(\", \");\n          }\n\n          // strip key of 'username:' and return username\n          username = split[i].slice(9);\n          continue;\n        }\n      }\n    }\n\n    if (options.lookupAvatarByPostNumber) {\n      // client-side, we can retrieve the avatar from the post\n      avatarImg = options.lookupAvatarByPostNumber(postNumber, topicId);\n    } else if (options.lookupAvatar) {\n      // server-side, we need to lookup the avatar from the username\n      avatarImg = options.lookupAvatar(username);\n    }\n\n    if (options.lookupPrimaryUserGroupByPostNumber) {\n      // client-side, we can retrieve the primary user group from the post\n      primaryGroupName = options.lookupPrimaryUserGroupByPostNumber(\n        postNumber,\n        topicId\n      );\n    } else if (options.lookupPrimaryUserGroup) {\n      // server-side, we need to lookup the primary user group from the username\n      primaryGroupName = options.lookupPrimaryUserGroup(username);\n    }\n\n    if (options.formatUsername) {\n      displayName = displayName || options.formatUsername(username);\n    } else {\n      displayName = displayName || username;\n    }\n\n    let token = state.push(\"bbcode_open\", \"aside\", 1);\n    token.attrs = [];\n\n    if (primaryGroupName && primaryGroupName.length !== 0) {\n      token.attrs.push([\"class\", `quote group-${primaryGroupName}`]);\n    } else {\n      token.attrs.push([\"class\", \"quote no-group\"]);\n    }\n\n    if (username) {\n      token.attrs.push([\"data-username\", username]);\n    }\n\n    if (postNumber) {\n      token.attrs.push([\"data-post\", postNumber]);\n    }\n\n    if (topicId) {\n      token.attrs.push([\"data-topic\", topicId]);\n    }\n\n    if (full) {\n      token.attrs.push([\"data-full\", \"true\"]);\n    }\n\n    if (username) {\n      let forOtherTopic = options.topicId && topicId !== options.topicId;\n      let offTopicQuote =\n        postNumber &&\n        options.getTopicInfo &&\n        (forOtherTopic || options.forceQuoteLink);\n\n      // on topic quote\n      token = state.push(\"quote_header_open\", \"div\", 1);\n      token.attrs = [[\"class\", \"title\"]];\n\n      token = state.push(\"quote_controls_open\", \"div\", 1);\n      token.attrs = [[\"class\", \"quote-controls\"]];\n\n      state.push(\"quote_controls_close\", \"div\", -1);\n\n      if (avatarImg) {\n        token = state.push(\"html_inline\", \"\", 0);\n        token.content = avatarImg;\n      }\n\n      if (offTopicQuote) {\n        const topicInfo = options.getTopicInfo(topicId);\n        if (topicInfo) {\n          let href = topicInfo.href;\n          if (postNumber > 0) {\n            href += \"/\" + postNumber;\n          }\n\n          let title = topicInfo.title;\n\n          if (options.enableEmoji) {\n            title = performEmojiUnescape(topicInfo.title, {\n              getURL: options.getURL,\n              emojiSet: options.emojiSet,\n              emojiCDNUrl: options.emojiCDNUrl,\n              enableEmojiShortcuts: options.enableEmojiShortcuts,\n              inlineEmoji: options.inlineEmoji,\n              lazy: true,\n            });\n          }\n\n          token = state.push(\"link_open\", \"a\", 1);\n          token.attrs = [[\"href\", href]];\n          token.block = false;\n\n          token = state.push(\"html_inline\", \"\", 0);\n          token.content = title;\n\n          token = state.push(\"link_close\", \"a\", -1);\n          token.block = false;\n        }\n      } else {\n        token = state.push(\"text\", \"\", 0);\n        token.content = ` ${displayName}:`;\n      }\n\n      state.push(\"quote_header_close\", \"div\", -1);\n    }\n\n    state.push(\"bbcode_open\", \"blockquote\", 1);\n  },\n\n  after(state) {\n    state.push(\"bbcode_close\", \"blockquote\", -1);\n    state.push(\"bbcode_close\", \"aside\", -1);\n  },\n};\n\nexport function setup(helper) {\n  helper.registerOptions((opts, siteSettings) => {\n    opts.enableEmoji = siteSettings.enable_emoji;\n    opts.emojiSet = siteSettings.emoji_set;\n    opts.emojiCDNUrl = siteSettings.external_emoji_url;\n    opts.enableEmojiShortcuts = siteSettings.enable_emoji_shortcuts;\n    opts.inlineEmoji = siteSettings.enable_inline_emoji_translation;\n  });\n\n  helper.registerPlugin((md) => {\n    md.block.bbcode.ruler.push(\"quotes\", rule);\n  });\n\n  helper.allowList([\"img[class=avatar]\", \"img[loading=lazy]\"]);\n  helper.allowList({\n    custom(tag, name, value) {\n      if (tag === \"aside\" && name === \"class\") {\n        return (\n          value === \"quote no-group\" || !!/^quote group\\-(.+)$/.exec(value)\n        );\n      }\n    },\n  });\n}\n","export function setup(helper) {\n  helper.registerPlugin((md) => {\n    md.renderer.rules.table_open = function () {\n      return '<div class=\"md-table\">\\n<table>\\n';\n    };\n\n    md.renderer.rules.table_close = function () {\n      return \"</table>\\n</div>\";\n    };\n  });\n\n  // we need a custom callback for style handling\n  helper.allowList({\n    custom(tag, attr, val) {\n      if (tag !== \"th\" && tag !== \"td\") {\n        return false;\n      }\n\n      if (attr !== \"style\") {\n        return false;\n      }\n\n      return (\n        val === \"text-align:right\" ||\n        val === \"text-align:left\" ||\n        val === \"text-align:center\"\n      );\n    },\n  });\n\n  helper.allowList([\n    \"table\",\n    \"tbody\",\n    \"thead\",\n    \"tr\",\n    \"th\",\n    \"td\",\n    \"div.md-table\",\n  ]);\n}\n","export class TextPostProcessRuler {\n  constructor() {\n    this.rules = [];\n  }\n\n  getRules() {\n    return this.rules;\n  }\n\n  // TODO error handling\n  getMatcher() {\n    if (this.matcher) {\n      return this.matcher;\n    }\n\n    this.matcherIndex = [];\n\n    const rules = [];\n    const flags = new Set(\"g\");\n\n    this.rules.forEach((r) => {\n      const matcher = r.rule.matcher;\n      rules.push(`(${matcher.source})`);\n      matcher.flags.split(\"\").forEach((f) => flags.add(f));\n    });\n\n    let i;\n    let regexString = \"\";\n    let last = 1;\n\n    // this code is a bit tricky, our matcher may have multiple capture groups\n    // we want to dynamically determine how many\n    for (i = 0; i < rules.length; i++) {\n      this.matcherIndex[i] = last;\n\n      if (i === rules.length - 1) {\n        break;\n      }\n\n      if (i > 0) {\n        regexString = regexString + \"|\";\n      }\n      regexString = regexString + rules[i];\n\n      let regex = new RegExp(regexString + \"|(x)\");\n      last = \"x\".match(regex).length - 1;\n    }\n\n    this.matcher = new RegExp(rules.join(\"|\"), [...flags].join(\"\"));\n    return this.matcher;\n  }\n\n  applyRule(buffer, match, state) {\n    let i;\n    for (i = 0; i < this.rules.length; i++) {\n      let index = this.matcherIndex[i];\n\n      if (match[index]) {\n        this.rules[i].rule.onMatch(\n          buffer,\n          match.slice(index, this.matcherIndex[i + 1]),\n          state\n        );\n        break;\n      }\n    }\n  }\n\n  // TODO validate inputs\n  push(name, rule) {\n    this.rules.push({ name, rule });\n    this.matcher = null;\n  }\n}\n\nfunction allowedBoundary(content, index, utils) {\n  let code = content.charCodeAt(index);\n  return (\n    utils.isWhiteSpace(code) || utils.isPunctChar(String.fromCharCode(code))\n  );\n}\n\nfunction textPostProcess(content, state, ruler) {\n  let result = null;\n  let match;\n  let pos = 0;\n\n  const matcher = ruler.getMatcher();\n\n  while ((match = matcher.exec(content))) {\n    // something is wrong\n    if (match.index < pos) {\n      break;\n    }\n\n    // check boundary\n    if (match.index > 0) {\n      if (!allowedBoundary(content, match.index - 1, state.md.utils)) {\n        continue;\n      }\n    }\n\n    // check forward boundary as well\n    if (match.index + match[0].length < content.length) {\n      if (\n        !allowedBoundary(content, match.index + match[0].length, state.md.utils)\n      ) {\n        continue;\n      }\n    }\n\n    result = result || [];\n\n    if (match.index > pos) {\n      let token = new state.Token(\"text\", \"\", 0);\n      token.content = content.slice(pos, match.index);\n      result.push(token);\n    }\n\n    ruler.applyRule(result, match, state);\n\n    pos = match.index + match[0].length;\n  }\n\n  if (result && pos < content.length) {\n    let token = new state.Token(\"text\", \"\", 0);\n    token.content = content.slice(pos);\n    result.push(token);\n  }\n\n  return result;\n}\n\nexport function setup(helper) {\n  helper.registerPlugin((md) => {\n    const ruler = md.core.textPostProcess.ruler;\n    const replacer = (content, state) => textPostProcess(content, state, ruler);\n\n    md.core.ruler.push(\"text-post-process\", (state) =>\n      md.options.discourse.helpers.textReplace(state, replacer, true)\n    );\n  });\n}\n","import xss from \"xss\";\n\nconst HTML_TYPES = [\"html_block\", \"html_inline\"];\n\n// add image to array if src has an upload\nfunction addImage(uploads, token) {\n  if (token.attrs) {\n    for (let i = 0; i < token.attrs.length; i++) {\n      const value = token.attrs[i][1];\n      if (value?.startsWith(\"upload://\")) {\n        uploads.push({ token, srcIndex: i, origSrc: value });\n        break;\n      }\n    }\n  }\n}\n\nfunction attr(name, value) {\n  if (value) {\n    return `${name}=\"${xss.escapeAttrValue(value)}\"`;\n  }\n\n  return name;\n}\n\nfunction uploadLocatorString(url) {\n  return `___REPLACE_UPLOAD_SRC_${url}___`;\n}\n\nfunction findUploadsInHtml(uploads, blockToken) {\n  // Slightly misusing our HTML sanitizer to look for upload://\n  // image src attributes, and replace them with a placeholder.\n  // Note that we can't use browser DOM APIs because this needs\n  // to run in mini-racer.\n  let foundImage = false;\n  let allowList;\n\n  const filter = new xss.FilterXSS({\n    allowList: [],\n    allowCommentTag: true,\n    onTag(tag, html, info) {\n      // We're not using this for sanitizing, so allow all tags through\n      info.isWhite = true;\n      allowList[tag] = [];\n    },\n    onTagAttr(tag, name, value) {\n      if (tag === \"img\" && name === \"src\" && value.startsWith(\"upload://\")) {\n        uploads.push({ token: blockToken, srcIndex: null, origSrc: value });\n        foundImage = true;\n        return uploadLocatorString(value);\n      }\n      return attr(name, value);\n    },\n  });\n\n  allowList = filter.options.whiteList;\n  const newContent = filter.process(blockToken.content);\n\n  if (foundImage) {\n    blockToken.content = newContent;\n  }\n}\n\nfunction processToken(uploads, token) {\n  if (token.tag === \"img\" || token.tag === \"a\") {\n    addImage(uploads, token);\n  } else if (HTML_TYPES.includes(token.type)) {\n    findUploadsInHtml(uploads, token);\n  }\n\n  if (token.children) {\n    for (let j = 0; j < token.children.length; j++) {\n      const childToken = token.children[j];\n      processToken(uploads, childToken);\n    }\n  }\n}\n\nfunction rule(state) {\n  let uploads = [];\n\n  for (let i = 0; i < state.tokens.length; i++) {\n    let blockToken = state.tokens[i];\n\n    processToken(uploads, blockToken);\n  }\n\n  if (uploads.length > 0) {\n    let srcList = uploads.map((u) => u.origSrc);\n\n    // In client-side cooking, this lookup returns nothing\n    // This means we set data-orig-src, and let decorateCooked\n    // lookup the image URLs asynchronously\n    let lookup = state.md.options.discourse.lookupUploadUrls;\n    let longUrls = (lookup && lookup(srcList)) || {};\n\n    uploads.forEach(({ token, srcIndex, origSrc }) => {\n      let mapped = longUrls[origSrc];\n\n      if (HTML_TYPES.includes(token.type)) {\n        const locator = uploadLocatorString(origSrc);\n        let attrs = [];\n\n        if (mapped) {\n          attrs.push(\n            attr(\"src\", mapped.url),\n            attr(\"data-base62-sha1\", mapped.base62_sha1)\n          );\n        } else {\n          attrs.push(\n            attr(\n              \"src\",\n              state.md.options.discourse.getURL(\"/images/transparent.png\")\n            ),\n            attr(\"data-orig-src\", origSrc)\n          );\n        }\n\n        token.content = token.content.replace(locator, attrs.join(\" \"));\n      } else if (token.tag === \"img\") {\n        if (mapped) {\n          token.attrs[srcIndex][1] = mapped.url;\n          token.attrs.push([\"data-base62-sha1\", mapped.base62_sha1]);\n        } else {\n          // no point putting a transparent .png for audio/video\n          if (token.content.match(/\\|video|\\|audio/)) {\n            token.attrs[srcIndex][1] =\n              state.md.options.discourse.getURL(\"/404\");\n          } else {\n            token.attrs[srcIndex][1] = state.md.options.discourse.getURL(\n              \"/images/transparent.png\"\n            );\n          }\n\n          token.attrs.push([\"data-orig-src\", origSrc]);\n        }\n      } else if (token.tag === \"a\") {\n        if (mapped) {\n          // when secure uploads is enabled we want the full /secure-media-uploads or /secure-uploads\n          // url to take advantage of access control security\n          if (\n            state.md.options.discourse.limitedSiteSettings.secureUploads &&\n            (mapped.url.includes(\"secure-media-uploads\") ||\n              mapped.url.includes(\"secure-uploads\"))\n          ) {\n            token.attrs[srcIndex][1] = mapped.url;\n          } else {\n            token.attrs[srcIndex][1] = mapped.short_path;\n          }\n        } else {\n          token.attrs[srcIndex][1] = state.md.options.discourse.getURL(\"/404\");\n\n          token.attrs.push([\"data-orig-href\", origSrc]);\n        }\n      }\n    });\n  }\n}\n\nexport function setup(helper) {\n  const opts = helper.getOptions();\n  if (opts.previewing) {\n    helper.allowList([\"img.resizable\"]);\n  }\n\n  helper.allowList([\n    \"img[data-orig-src]\",\n    \"img[data-base62-sha1]\",\n    \"a[data-orig-href]\",\n  ]);\n\n  helper.registerPlugin((md) => {\n    md.core.ruler.push(\"upload-protocol\", rule);\n  });\n}\n","import {\n  createWatchedWordRegExp,\n  toWatchedWord,\n} from \"discourse-common/utils/watched-words\";\n\nconst MAX_MATCHES = 100;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nfunction findAllMatches(text, matchers) {\n  const matches = [];\n\n  for (const { word, pattern, replacement, link } of matchers) {\n    if (matches.length >= MAX_MATCHES) {\n      break;\n    }\n\n    if (word.test(text)) {\n      for (const match of text.matchAll(pattern)) {\n        matches.push({\n          index: match.index + match[0].indexOf(match[1]),\n          text: match[1],\n          replacement,\n          link,\n        });\n\n        if (matches.length >= MAX_MATCHES) {\n          break;\n        }\n      }\n    }\n  }\n\n  return matches.sort((a, b) => a.index - b.index);\n}\n\n// We need this to load after mentions and hashtags which are priority 0\nexport const priority = 1;\n\nconst NONE = 0;\nconst MENTION = 1;\nconst HASHTAG_LINK = 2;\nconst HASHTAG_SPAN = 3;\nconst HASHTAG_ICON_SPAN = 4;\n\nexport function setup(helper) {\n  const opts = helper.getOptions();\n\n  helper.registerPlugin((md) => {\n    const matchers = [];\n\n    if (md.options.discourse.watchedWordsReplace) {\n      Object.entries(md.options.discourse.watchedWordsReplace).forEach(\n        ([regexpString, options]) => {\n          const word = toWatchedWord({ [regexpString]: options });\n\n          matchers.push({\n            word: new RegExp(options.regexp, options.case_sensitive ? \"\" : \"i\"),\n            pattern: createWatchedWordRegExp(word),\n            replacement: options.replacement,\n            link: false,\n          });\n        }\n      );\n    }\n\n    if (md.options.discourse.watchedWordsLink) {\n      Object.entries(md.options.discourse.watchedWordsLink).forEach(\n        ([regexpString, options]) => {\n          const word = toWatchedWord({ [regexpString]: options });\n\n          matchers.push({\n            word: new RegExp(options.regexp, options.case_sensitive ? \"\" : \"i\"),\n            pattern: createWatchedWordRegExp(word),\n            replacement: options.replacement,\n            link: true,\n          });\n        }\n      );\n    }\n\n    if (matchers.length === 0) {\n      return;\n    }\n\n    const cache = new Map();\n\n    md.core.ruler.push(\"watched-words\", (state) => {\n      for (let j = 0, l = state.tokens.length; j < l; j++) {\n        if (state.tokens[j].type !== \"inline\") {\n          continue;\n        }\n\n        let tokens = state.tokens[j].children;\n\n        let htmlLinkLevel = 0;\n\n        // We scan once to mark tokens that must be skipped because they are\n        // mentions or hashtags\n        let lastType = NONE;\n        let currentType = NONE;\n        for (let i = 0; i < tokens.length; ++i) {\n          const currentToken = tokens[i];\n\n          if (currentToken.type === \"mention_open\") {\n            lastType = MENTION;\n          } else if (\n            (currentToken.type === \"link_open\" ||\n              currentToken.type === \"span_open\") &&\n            currentToken.attrs &&\n            currentToken.attrs.some(\n              (attr) =>\n                attr[0] === \"class\" &&\n                (attr[1] === \"hashtag\" ||\n                  attr[1] === \"hashtag-cooked\" ||\n                  attr[1] === \"hashtag-raw\")\n            )\n          ) {\n            lastType =\n              currentToken.type === \"link_open\" ? HASHTAG_LINK : HASHTAG_SPAN;\n          }\n\n          if (\n            currentToken.type === \"span_open\" &&\n            currentToken.attrs &&\n            currentToken.attrs.some(\n              (attr) =>\n                attr[0] === \"class\" && attr[1] === \"hashtag-icon-placeholder\"\n            )\n          ) {\n            currentType = HASHTAG_ICON_SPAN;\n          }\n\n          if (lastType !== NONE) {\n            currentToken.skipReplace = true;\n          }\n\n          if (\n            (lastType === MENTION && currentToken.type === \"mention_close\") ||\n            (lastType === HASHTAG_LINK && currentToken.type === \"link_close\") ||\n            (lastType === HASHTAG_SPAN &&\n              currentToken.type === \"span_close\" &&\n              currentType !== HASHTAG_ICON_SPAN)\n          ) {\n            lastType = NONE;\n          }\n        }\n\n        // We scan from the end, to keep position when new tags added.\n        // Use reversed logic in links start/end match\n        for (let i = tokens.length - 1; i >= 0; i--) {\n          const currentToken = tokens[i];\n\n          // Skip content of markdown links\n          if (currentToken.type === \"link_close\") {\n            i--;\n            while (\n              tokens[i].level !== currentToken.level &&\n              tokens[i].type !== \"link_open\"\n            ) {\n              i--;\n            }\n            continue;\n          }\n\n          // Skip content of html tag links\n          if (currentToken.type === \"html_inline\") {\n            if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n              htmlLinkLevel--;\n            }\n\n            if (isLinkClose(currentToken.content)) {\n              htmlLinkLevel++;\n            }\n          }\n\n          // Skip content of mentions or hashtags\n          if (currentToken.skipReplace) {\n            continue;\n          }\n\n          if (currentToken.type === \"text\") {\n            const text = currentToken.content;\n\n            let matches;\n            if (cache.has(text)) {\n              matches = cache.get(text);\n            } else {\n              matches = findAllMatches(text, matchers);\n              cache.set(text, matches);\n            }\n\n            // Now split string to nodes\n            const nodes = [];\n            let level = currentToken.level;\n            let lastPos = 0;\n\n            let token;\n            for (let ln = 0; ln < matches.length; ln++) {\n              if (matches[ln].index < lastPos) {\n                continue;\n              }\n\n              if (matches[ln].index > lastPos) {\n                token = new state.Token(\"text\", \"\", 0);\n                token.content = text.slice(lastPos, matches[ln].index);\n                token.level = level;\n                nodes.push(token);\n              }\n\n              if (matches[ln].link) {\n                const url = state.md.normalizeLink(matches[ln].replacement);\n                if (htmlLinkLevel === 0 && state.md.validateLink(url)) {\n                  token = new state.Token(\"link_open\", \"a\", 1);\n                  token.attrs = [[\"href\", url]];\n                  if (opts.discourse.previewing) {\n                    token.attrs.push([\"data-word\", \"\"]);\n                  }\n                  token.level = level++;\n                  token.markup = \"linkify\";\n                  token.info = \"auto\";\n                  nodes.push(token);\n\n                  token = new state.Token(\"text\", \"\", 0);\n                  token.content = matches[ln].text;\n                  token.level = level;\n                  nodes.push(token);\n\n                  token = new state.Token(\"link_close\", \"a\", -1);\n                  token.level = --level;\n                  token.markup = \"linkify\";\n                  token.info = \"auto\";\n                  nodes.push(token);\n                }\n              } else {\n                token = new state.Token(\"text\", \"\", 0);\n                token.content = matches[ln].replacement;\n                token.level = level;\n                nodes.push(token);\n              }\n\n              lastPos = matches[ln].index + matches[ln].text.length;\n            }\n\n            if (lastPos < text.length) {\n              token = new state.Token(\"text\", \"\", 0);\n              token.content = text.slice(lastPos);\n              token.level = level;\n              nodes.push(token);\n            }\n\n            // replace current node\n            state.tokens[j].children = tokens = md.utils.arrayReplaceAt(\n              tokens,\n              i,\n              nodes\n            );\n          }\n        }\n      }\n    });\n  });\n}\n","import { cook as cookIt } from \"./engine\";\nimport DEFAULT_FEATURES from \"./features\";\nimport buildOptions from \"./options\";\nimport setup from \"./setup\";\n\nfunction NOOP(ident) {\n  return ident;\n}\n\nexport default class DiscourseMarkdownIt {\n  static withDefaultFeatures() {\n    return this.withFeatures(DEFAULT_FEATURES);\n  }\n\n  static withCustomFeatures(features) {\n    return this.withFeatures([...DEFAULT_FEATURES, ...features]);\n  }\n\n  static withFeatures(features) {\n    const withOptions = (options) => this.withOptions(features, options);\n    return { withOptions };\n  }\n\n  static withOptions(features, rawOptions) {\n    const { options, siteSettings, state } = buildOptions(rawOptions);\n\n    // note, this will mutate options due to the way the API is designed\n    // may need a refactor\n    setup(features, options, siteSettings, state);\n\n    return new DiscourseMarkdownIt(options);\n  }\n\n  static minimal() {\n    return this.withFeatures([]).withOptions({ siteSettings: {} });\n  }\n\n  constructor(options) {\n    if (!options.setup) {\n      throw new Error(\n        \"Cannot construct DiscourseMarkdownIt from raw options, \" +\n          \"use DiscourseMarkdownIt.withOptions() instead\"\n      );\n    }\n\n    this.options = options;\n  }\n\n  disableSanitizer() {\n    this.options.sanitizer = this.options.discourse.sanitizer = NOOP;\n  }\n\n  cook(raw) {\n    if (!raw || raw.length === 0) {\n      return \"\";\n    }\n\n    let result;\n    result = cookIt(raw, this.options);\n    return result ? result : \"\";\n  }\n\n  parse(markdown, env = {}) {\n    return this.options.engine.parse(markdown, env);\n  }\n\n  sanitize(html) {\n    return this.options.sanitizer(html).trim();\n  }\n\n  get linkify() {\n    return this.options.engine.linkify;\n  }\n}\n","import { deepMerge } from \"discourse-common/lib/object\";\n\n// the options are passed here and must be explicitly allowed with\n// the const options & state below\nexport default function buildOptions(state) {\n  const {\n    siteSettings,\n    getURL,\n    lookupAvatar,\n    lookupPrimaryUserGroup,\n    getTopicInfo,\n    topicId,\n    forceQuoteLink,\n    userId,\n    getCurrentUser,\n    currentUser,\n    lookupAvatarByPostNumber,\n    lookupPrimaryUserGroupByPostNumber,\n    formatUsername,\n    emojiUnicodeReplacer,\n    lookupUploadUrls,\n    previewing,\n    censoredRegexp,\n    disableEmojis,\n    customEmojiTranslation,\n    watchedWordsReplace,\n    watchedWordsLink,\n    emojiDenyList,\n    featuresOverride,\n    markdownItRules,\n    additionalOptions,\n    hashtagTypesInPriorityOrder,\n    hashtagIcons,\n    hashtagLookup,\n  } = state;\n\n  let features = {};\n\n  if (state.features) {\n    features = deepMerge(features, state.features);\n  }\n\n  const options = {\n    sanitize: true,\n    getURL,\n    features,\n    lookupAvatar,\n    lookupPrimaryUserGroup,\n    getTopicInfo,\n    topicId,\n    forceQuoteLink,\n    userId,\n    getCurrentUser,\n    currentUser,\n    lookupAvatarByPostNumber,\n    lookupPrimaryUserGroupByPostNumber,\n    formatUsername,\n    emojiUnicodeReplacer,\n    lookupUploadUrls,\n    censoredRegexp,\n    customEmojiTranslation,\n    allowedHrefSchemes: siteSettings.allowed_href_schemes\n      ? siteSettings.allowed_href_schemes.split(\"|\")\n      : null,\n    allowedIframes: siteSettings.allowed_iframes\n      ? siteSettings.allowed_iframes.split(\"|\")\n      : [],\n    markdownIt: true,\n    previewing,\n    disableEmojis,\n    watchedWordsReplace,\n    watchedWordsLink,\n    emojiDenyList,\n    featuresOverride,\n    markdownItRules,\n    additionalOptions,\n    hashtagTypesInPriorityOrder,\n    hashtagIcons,\n    hashtagLookup,\n  };\n\n  return { options, siteSettings, state };\n}\n","import { textReplace } from \"pretty-text/text-replace\";\nimport deprecated from \"discourse-common/lib/deprecated\";\nimport { cloneJSON } from \"discourse-common/lib/object\";\nimport makeEngine, { cook } from \"./engine\";\n\n// note, this will mutate options due to the way the API is designed\n// may need a refactor\nexport default function setupIt(features, options, siteSettings, state) {\n  Setup.run(features, options, siteSettings, state);\n}\n\nclass Setup {\n  static run(features, options, siteSettings, state) {\n    if (options.setup) {\n      // Already setup\n      return;\n    }\n\n    const setup = new Setup(options);\n\n    features.sort((a, b) => a.priority - b.priority);\n\n    for (const feature of features) {\n      setup.#setupFeature(feature.id, feature.setup);\n    }\n\n    for (const entry of Object.entries(state.allowListed ?? {})) {\n      setup.allowList(entry);\n    }\n\n    setup.#runOptionsCallbacks(siteSettings, state);\n\n    setup.#enableMarkdownFeatures();\n\n    setup.#finalizeGetOptions(siteSettings);\n\n    setup.#makeEngine();\n\n    setup.#buildCookFunctions();\n  }\n\n  #context;\n  #options;\n\n  #allowListed = [];\n  #customMarkdownCookFunctionCallbacks = [];\n  #loadedFeatures = [];\n  #optionCallbacks = [];\n  #pluginCallbacks = [];\n\n  constructor(options) {\n    options.markdownIt = true;\n\n    this.#options = options;\n\n    // hack to allow moving of getOptions – see #finalizeGetOptions\n    this.#context = { options };\n  }\n\n  allowList(entry) {\n    this.#allowListed.push(entry);\n  }\n\n  registerOptions(entry) {\n    this.#optionCallbacks.push(entry);\n  }\n\n  registerPlugin(entry) {\n    this.#pluginCallbacks.push(entry);\n  }\n\n  buildCookFunction(entry) {\n    this.#customMarkdownCookFunctionCallbacks.push(entry);\n  }\n\n  #setupFeature(featureName, callback) {\n    // When we provide the API object to the setup callback, we expect them to\n    // make use of it synchronously. However, it is possible that the could\n    // close over the API object, intentionally or unintentionally, and cause\n    // memory leaks or unexpectedly call API methods at a later time with\n    // unpredictable results. This make sure to \"gut\" the API object after the\n    // callback is executed so that it cannot leak memory or be used later.\n    let loaned = this;\n\n    const doSetup = (methodName, ...args) => {\n      if (loaned === null) {\n        throw new Error(\n          `${featureName}: ${methodName} can only be called during setup()!`\n        );\n      }\n\n      if (loaned[methodName]) {\n        return loaned[methodName](...args);\n      }\n    };\n\n    callback(new API(featureName, this.#context, doSetup));\n\n    this.#loadedFeatures.push(featureName);\n\n    // revoke access to the Setup object\n    loaned = null;\n  }\n\n  #runOptionsCallbacks(siteSettings, state) {\n    this.#drain(this.#optionCallbacks, ([, callback]) =>\n      callback(this.#options, siteSettings, state)\n    );\n  }\n\n  #enableMarkdownFeatures({ features, featuresOverride } = this.#options) {\n    // TODO: `options.features` could in theory contain additional keys for\n    // features that aren't loaded. The way the previous code was written\n    // incidentally means we would iterate over a super set of both. To be\n    // pedantic we kept that behavior here, but I'm not sure if that's really\n    // necessary.\n    const allFeatures = new Set([\n      ...this.#drain(this.#loadedFeatures),\n      ...Object.keys(features),\n    ]);\n\n    if (featuresOverride) {\n      for (const feature of allFeatures) {\n        features[feature] = featuresOverride.includes(feature);\n      }\n    } else {\n      // enable all features by default\n      for (let feature of allFeatures) {\n        features[feature] ??= true;\n      }\n    }\n  }\n\n  #finalizeGetOptions(siteSettings) {\n    // This is weird but essentially we want to remove `options.*` in-place\n    // into `options.discourse.*`, then, we want to change `context.options`\n    // to point at `options.discourse`. This ensures features that held onto\n    // the API object during setup will continue to get the right stuff when\n    // they call `getOptions()`.\n    const options = this.#options;\n    const discourse = {};\n\n    for (const [key, value] of Object.entries(options)) {\n      discourse[key] = value;\n      delete options[key];\n    }\n\n    discourse.helpers = { textReplace };\n\n    discourse.limitedSiteSettings = {\n      secureUploads: siteSettings.secure_uploads,\n      enableDiffhtmlPreview: siteSettings.enable_diffhtml_preview,\n      traditionalMarkdownLinebreaks:\n        siteSettings.traditional_markdown_linebreaks,\n      enableMarkdownLinkify: siteSettings.enable_markdown_linkify,\n      enableMarkdownTypographer: siteSettings.enable_markdown_typographer,\n      markdownTypographerQuotationMarks:\n        siteSettings.markdown_typographer_quotation_marks,\n      markdownLinkifyTlds: siteSettings.markdown_linkify_tlds,\n    };\n\n    this.#context.options = options.discourse = discourse;\n  }\n\n  #makeEngine() {\n    const options = this.#options;\n    const { discourse } = options;\n    const { markdownItRules, limitedSiteSettings } = discourse;\n    const {\n      enableMarkdownLinkify,\n      enableMarkdownTypographer,\n      traditionalMarkdownLinebreaks,\n    } = limitedSiteSettings;\n\n    options.allowListed = this.#drain(this.#allowListed);\n    options.pluginCallbacks = this.#drain(this.#pluginCallbacks);\n\n    const markdownItOptions = {\n      discourse,\n      html: true,\n      breaks: !traditionalMarkdownLinebreaks,\n      xhtmlOut: false,\n      linkify: enableMarkdownLinkify,\n      typographer: enableMarkdownTypographer,\n    };\n\n    makeEngine(options, markdownItOptions, markdownItRules);\n  }\n\n  #buildCookFunctions() {\n    const options = this.#options;\n\n    // the callback argument we pass to the callbacks\n    let callbackArg = (engineOptions, afterBuild) =>\n      afterBuild(this.#buildCookFunction(engineOptions, options));\n\n    this.#drain(this.#customMarkdownCookFunctionCallbacks, ([, callback]) => {\n      callback(options, callbackArg);\n    });\n  }\n\n  #buildCookFunction(engineOptions, defaultOptions) {\n    // everything except the engine for opts can just point to the other\n    // opts references, they do not change and we don't need to worry about\n    // mutating them. note that this may need to be updated when additional\n    // opts are added to the pipeline\n    const options = {};\n    options.allowListed = defaultOptions.allowListed;\n    options.pluginCallbacks = defaultOptions.pluginCallbacks;\n    options.sanitizer = defaultOptions.sanitizer;\n\n    // everything from the discourse part of defaultOptions can be cloned except\n    // the features, because these can be a limited subset and we don't want to\n    // change the original object reference\n    const features = cloneJSON(defaultOptions.discourse.features);\n    options.discourse = {\n      ...defaultOptions.discourse,\n      features,\n    };\n\n    this.#enableMarkdownFeatures({\n      features,\n      featuresOverride: engineOptions.featuresOverride,\n    });\n\n    const markdownItOptions = {\n      discourse: options.discourse,\n      html: defaultOptions.engine.options.html,\n      breaks: defaultOptions.engine.options.breaks,\n      xhtmlOut: defaultOptions.engine.options.xhtmlOut,\n      linkify: defaultOptions.engine.options.linkify,\n      typographer: defaultOptions.engine.options.typographer,\n    };\n\n    makeEngine(options, markdownItOptions, engineOptions.markdownItRules);\n\n    return function customCookFunction(raw) {\n      return cook(raw, options);\n    };\n  }\n\n  #drain(items, callback) {\n    if (callback) {\n      let item = items.shift();\n\n      while (item) {\n        callback(item);\n        item = items.shift();\n      }\n    } else {\n      const cloned = [...items];\n      items.length = 0;\n      return cloned;\n    }\n  }\n}\n\nclass API {\n  #name;\n  #context;\n  #setup;\n  #deprecate;\n\n  constructor(featureName, context, setup) {\n    this.#name = featureName;\n    this.#context = context;\n    this.#setup = setup;\n    this.#deprecate = (methodName, ...args) => {\n      if (window.console && window.console.log) {\n        window.console.log(\n          featureName +\n            \": \" +\n            methodName +\n            \" is deprecated, please use the new markdown it APIs\"\n        );\n      }\n\n      return setup(methodName, ...args);\n    };\n  }\n\n  get markdownIt() {\n    return true;\n  }\n\n  // this the only method we expect to be called post-setup()\n  getOptions() {\n    return this.#context.options;\n  }\n\n  allowList(info) {\n    this.#setup(\"allowList\", [this.#name, info]);\n  }\n\n  whiteList(info) {\n    deprecated(\"`whiteList` has been replaced with `allowList`\", {\n      since: \"2.6.0.beta.4\",\n      dropFrom: \"2.7.0\",\n      id: \"discourse.markdown-it.whitelist\",\n    });\n\n    this.allowList(info);\n  }\n\n  registerOptions(callback) {\n    this.#setup(\"registerOptions\", [this.#name, callback]);\n  }\n\n  registerPlugin(callback) {\n    this.#setup(\"registerPlugin\", [this.#name, callback]);\n  }\n\n  buildCookFunction(callback) {\n    this.#setup(\"buildCookFunction\", [this.#name, callback]);\n  }\n\n  // deprecate methods – \"deprecate\" is a bit of a misnomer here since the\n  // methods don't actually do anything anymore\n\n  registerInline() {\n    this.#deprecate(\"registerInline\");\n  }\n\n  replaceBlock() {\n    this.#deprecate(\"replaceBlock\");\n  }\n\n  addPreProcessor() {\n    this.#deprecate(\"addPreProcessor\");\n  }\n\n  inlineReplace() {\n    this.#deprecate(\"inlineReplace\");\n  }\n\n  postProcessTag() {\n    this.#deprecate(\"postProcessTag\");\n  }\n\n  inlineRegexp() {\n    this.#deprecate(\"inlineRegexp\");\n  }\n\n  inlineBetween() {\n    this.#deprecate(\"inlineBetween\");\n  }\n\n  postProcessText() {\n    this.#deprecate(\"postProcessText\");\n  }\n\n  onParseNode() {\n    this.#deprecate(\"onParseNode\");\n  }\n\n  registerBlock() {\n    this.#deprecate(\"registerBlock\");\n  }\n}\n"],"names":["markdownit","AllowLister","guid","sanitize","TextPostProcessRuler","makeEngine","options","markdownItOptions","markdownItRules","engine","makeMarkdownIt","quotes","discourse","limitedSiteSettings","markdownTypographerQuotationMarks","split","tlds","markdownLinkifyTlds","linkify","setupUrlDecoding","setupHoister","setupImageAndPlayableMediaRenderer","setupAttachments","setupBlockBBCode","setupInlineBBCode","setupTextPostProcessRuler","feature","callback","pluginCallbacks","features","undefined","console","log","use","markdownIt","setup","sanitizer","allowLister","allowListed","forEach","info","allowListFeature","a","cook","raw","hoisted","rendered","render","cooked","trim","unhoistForCooked","enable","utils","lib","mdurl","decode","defaultChars","renderHoisted","tokens","idx","content","length","id","keys","Object","found","unhoist","key","replace","RegExp","renderer","rules","html_raw","extractDataAttribute","str","sep","indexOf","slice","toLowerCase","test","value","videoHTML","token","src","attrGet","origSrc","dataOrigSrcAttr","audioHTML","IMG_SIZE_REGEX","renderImageOrPlayableMedia","env","slf","alt","renderInlineAsText","children","altSplit","previewing","enableDiffhtmlPreview","i","match","data","width","height","percent","parseFloat","parseInt","wr","hr","attrIndex","attrs","push","altValue","join","attrSet","renderToken","image","ATTACHMENT_CSS_CLASS","renderAttachment","linkToken","textToken","contentSplit","unshift","link_open","Ruler","constructor","getRules","getRuleForTag","tag","ensureCache","cache","hasOwnProperty","rule","name","block","bbcode","ruler","inline","core","textPostProcess","helper","getOptions","registerPlugin","md","state","lvl","headingId","type","linkOpen","Token","linkClose","slug","isWhiteSpace","trailingSpaceOnly","start","max","code","charCodeAt","ATTR_REGEX","parseBBCodeTag","multiline","closed","closingTag","letter","closing","val","exec","findBlockCloseTag","openTag","startLine","endLine","nesting","line","closeTag","bMarks","tShift","eMarks","sCount","blkIndent","findInlineCloseTag","possibleTag","j","applyBBCode","silent","nextLine","oldParent","oldLineMax","initial","ruleInfo","parentType","lineMax","call","before","wrapTag","wrap","level","className","lastToken","map","tokenize","after","tagInfo","tokenizeBBCode","pos","posMax","at","meta","delimiters","bbInfo","marker","open","close","end","processBBCode","startDelim","endDelim","startToken","endToken","inner","markup","allowList","registerOptions","opts","ruler2","simpleUrlRegex","parse","url","includes","matchAtStart","email","censorFn","recurse","apply","onebox","censorTree","censor","censoredRegexps","censoredRegexp","Array","isArray","replacement","String","fromCharCode","TEXT_CODE_CLASSES","extractTokenInfo","matches","ASCII_REGEX","unescapeAll","extractedData","attributes","potentialPair","escapedContent","escapeHtml","tokenInfo","defaultCodeLang","dataAttributes","siteSettings","default_code_lang","custom","fence","RARE_RE","SCOPED_ABBR_RE","SCOPED_ABBR","pa","tm","replaceFn","replaceScoped","inlineTokens","replaceRare","inside_autolink","blkIdx","typographer","WRAP_CLASS","parseAttributes","_default","camelCaseToDash","applyDataAttributes","blockRule","inlineRule","buildEmojiUrl","isCustomEmoji","translations","MAX_NAME_LENGTH","translationTree","resetTranslationTree","buildTranslationTree","customEmojiTranslation","tree","lastNode","allTranslations","assign","node","tmp","imageFor","title","classes","getEmojiName","inlineEmoji","prev","isSpace","isPunctChar","getEmojiTokenByName","getEmojiTokenByTranslation","t","matched","leading","charAt","trailing","applyEmoji","emojiUnicodeReplacer","enableShortcuts","watchedWordsReplacer","emojiDenyList","result","watchedWordRegex","watchedWord","regex","matchingRegex","emoji","offset","text","filter","r","onlyEmojiLine","index","checkNextToken","applyOnlyEmojiClass","attr","disableEmojis","enable_emoji","emojiShortcuts","enable_emoji_shortcuts","enable_inline_emoji_translation","emojiSet","emoji_set","customEmoji","emojiCDNUrl","external_emoji_url","helpers","textReplace","c","s","watchedWordsReplace","addHashtag","buffer","hashtagLookup","userId","hashtagTypesInPriorityOrder","relative_url","ref","addIconPlaceholder","matcher","onMatch","REGEX","lineText","html","pos1","lines","oldParentType","I18n","SCALES","isUpload","hasMetadata","appendMetaData","sizePart","find","x","selectedScale","pop","overwriteScale","scale","currentIndex","blockToken","blockTokenImage","childrenImage","buildScaleButton","activeScaleClass","buildImageShowAltTextControls","altText","buildImageEditAltTextControls","buildImageDeleteButton","buildImageGalleryControl","imageCount","priority","ruleWithImageControls","oldRule","scaleIndex","imageIndex","gridRule","anchor","bbcodeBlock","bbcodeInline","censored","customTypographerReplacements","dWrap","hashtagAutocomplete","htmlImg","imageControls","imageGrid","mentions","newline","paragraph","table","uploadProtocol","watchedWords","mentionRegex","addMention","username","enable_mentions","unicodeUsernames","unicode_usernames","pmax","ws","pending","leading_space","cachedInlineOnebox","lookupCache","ONEBOX","INLINE","isTopLevel","href","hasExtra","applyOnebox","mode","child","prevSibling","lookahead","cached","terminate","l","terminatorRules","hasLeadingSpace","isEmpty","getLines","contentLength","chr","performEmojiUnescape","quoteInfo","postNumber","topicId","avatarImg","primaryGroupName","full","displayName","startsWith","lookupAvatarByPostNumber","lookupAvatar","lookupPrimaryUserGroupByPostNumber","lookupPrimaryUserGroup","formatUsername","forOtherTopic","offTopicQuote","getTopicInfo","forceQuoteLink","topicInfo","enableEmoji","getURL","enableEmojiShortcuts","lazy","table_open","table_close","getMatcher","matcherIndex","flags","Set","source","f","add","regexString","last","applyRule","allowedBoundary","replacer","xss","HTML_TYPES","addImage","uploads","srcIndex","escapeAttrValue","uploadLocatorString","findUploadsInHtml","foundImage","FilterXSS","allowCommentTag","onTag","isWhite","onTagAttr","whiteList","newContent","process","processToken","childToken","srcList","u","lookup","lookupUploadUrls","longUrls","mapped","locator","base62_sha1","secureUploads","short_path","createWatchedWordRegExp","toWatchedWord","MAX_MATCHES","isLinkOpen","isLinkClose","findAllMatches","matchers","word","pattern","link","matchAll","sort","b","NONE","MENTION","HASHTAG_LINK","HASHTAG_SPAN","HASHTAG_ICON_SPAN","entries","regexpString","regexp","case_sensitive","watchedWordsLink","Map","htmlLinkLevel","lastType","currentType","currentToken","some","skipReplace","has","get","set","nodes","lastPos","ln","normalizeLink","validateLink","arrayReplaceAt","cookIt","DEFAULT_FEATURES","buildOptions","NOOP","ident","DiscourseMarkdownIt","withDefaultFeatures","withFeatures","withCustomFeatures","withOptions","rawOptions","minimal","Error","disableSanitizer","markdown","deepMerge","getCurrentUser","currentUser","featuresOverride","additionalOptions","hashtagIcons","allowedHrefSchemes","allowed_href_schemes","allowedIframes","allowed_iframes","deprecated","cloneJSON","setupIt","Setup","run","_context","WeakMap","_options","_allowListed","_customMarkdownCookFunctionCallbacks","_loadedFeatures","_optionCallbacks","_pluginCallbacks","_setupFeature","WeakSet","_runOptionsCallbacks","_enableMarkdownFeatures","_finalizeGetOptions","_makeEngine","_buildCookFunctions","_buildCookFunction","_drain","_classPrivateMethodGet","_setupFeature2","entry","_runOptionsCallbacks2","_enableMarkdownFeatures2","_finalizeGetOptions2","_makeEngine2","_buildCookFunctions2","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","_classPrivateFieldGet","buildCookFunction","featureName","loaned","doSetup","methodName","args","API","_drain2","allFeatures","secure_uploads","enable_diffhtml_preview","traditionalMarkdownLinebreaks","traditional_markdown_linebreaks","enableMarkdownLinkify","enable_markdown_linkify","enableMarkdownTypographer","enable_markdown_typographer","markdown_typographer_quotation_marks","markdown_linkify_tlds","breaks","xhtmlOut","callbackArg","engineOptions","afterBuild","_buildCookFunction2","defaultOptions","customCookFunction","items","item","shift","cloned","_name","_context2","_setup","_deprecate","context","window","since","dropFrom","registerInline","replaceBlock","addPreProcessor","inlineReplace","postProcessTag","inlineRegexp","inlineBetween","postProcessText","onParseNode","registerBlock"],"sourceRoot":""}