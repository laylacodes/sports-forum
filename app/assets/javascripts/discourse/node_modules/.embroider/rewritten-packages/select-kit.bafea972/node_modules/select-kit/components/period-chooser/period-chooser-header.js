/* import __COLOCATED_TEMPLATE__ from './period-chooser-header.hbs'; */
var _dec, _obj;
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
import discourseComputed from "discourse-common/utils/decorators";
import DropdownSelectBoxHeaderComponent from "select-kit/components/dropdown-select-box/dropdown-select-box-header";
export default DropdownSelectBoxHeaderComponent.extend((_dec = discourseComputed("selectKit.isExpanded"), (_obj = {
  classNames: ["period-chooser-header", "btn-flat"],
  caretIcon(isExpanded) {
    return isExpanded ? "caret-up" : "caret-down";
  }
}, (_applyDecoratedDescriptor(_obj, "caretIcon", [_dec], Object.getOwnPropertyDescriptor(_obj, "caretIcon"), _obj)), _obj)));