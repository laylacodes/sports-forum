{"version":3,"sourceRoot":"","sources":["spoiler-alert.scss","app/assets/stylesheets/common/foundation/mixins.scss"],"names":[],"mappings":"AAAqe,SACne,YACA,gCAEA,yBACE,aAGF,aACE,sBAIJ,iBCsHE,oBAKqB,KAJrB,YAIqB,KACrB,eD1HA,eACA,mBAEA,6aAkBE,oBAGF,qBACE,iBAIA,sFAEE,oBAEA,8FACE","sourcesContent":["$primary: #222222 !default; $secondary: #ffffff !default; $tertiary: #0088cc !default; $quaternary: #e45735 !default; $header_background: #ffffff !default; $header_primary: #333333 !default; $highlight: #ffff4d !default; $selected: #e9e9e9 !default; $hover: #f2f2f2 !default; $danger: #c80001 !default; $success: #009900 !default; $love: #fa6c8d !default;  $public_image_path: \"http://127.0.0.1:4200/images\";  @import \"common/foundation/variables\"; @import \"common/foundation/mixins\"; .spoiled {\n  cursor: auto;\n  -webkit-transform: translateZ(0); // Safari jitter fix\n\n  .lightbox .meta {\n    display: none;\n  }\n\n  svg {\n    vertical-align: middle;\n  }\n}\n\n.spoiler-blurred {\n  @include unselectable;\n  cursor: pointer;\n  filter: blur(0.5em);\n\n  a,\n  area,\n  audio,\n  button,\n  details,\n  embed,\n  iframe,\n  img.animated,\n  input,\n  map,\n  object,\n  option,\n  portal,\n  select,\n  textarea,\n  track,\n  video,\n  .lightbox {\n    pointer-events: none;\n  }\n\n  img {\n    filter: blur(1em);\n  }\n\n  .discourse-no-touch & {\n    &:hover,\n    &:focus {\n      filter: blur(0.18em);\n\n      img {\n        filter: blur(0.5em);\n      }\n    }\n  }\n}\n","// --------------------------------------------------\n// Mixins used throughout the theme\n// --------------------------------------------------\n\n// Media queries\n// --------------------------------------------------\n\n@use \"sass:math\";\n\n$breakpoints: (\n  mobile-small: 320px,\n  mobile-medium: 350px,\n  mobile-large: 450px,\n  mobile-extra-large: 550px,\n  tablet: 768px,\n  medium: 850px,\n  large: 1000px,\n  extra-large: 1140px,\n);\n\n@mixin breakpoint($bp, $rule: max-width, $type: screen, $sidebar: false) {\n  $bp-value: map-get($breakpoints, $bp);\n\n  @if $rule == min-width {\n    $bp-value: calc(#{$bp-value} + 1px);\n  }\n\n  @media #{$type} and (#{$rule}: #{$bp-value}) {\n    @content;\n  }\n\n  // if you want to consider the sidebar in your breakpoint\n  // you can pass in $sidebar: true\n  // note that your breakpoint will need to be at the root level\n  @if $sidebar {\n    // when the sidebar is shown, we want to increase the breakpoints by the width of the sidebar\n    @media #{$type} and (#{$rule}: calc(#{map-get($breakpoints, $bp)} + #{$d-sidebar-width})) {\n      .has-sidebar-page {\n        @content;\n      }\n    }\n  }\n}\n\n// CSS3 properties\n// --------------------------------------------------\n\n// Clearfix\n\n@mixin clearfix() {\n  &:before,\n  &:after {\n    content: \"\";\n    display: table;\n  }\n  &:after {\n    clear: both;\n  }\n}\n\n//noinspection CssOptimizeSimilarProperties\n@mixin linear-gradient($start-color, $end-color) {\n  background-color: $start-color;\n  background-image: linear-gradient(to bottom, $start-color, $end-color);\n}\n\n@mixin darken-background($background-color, $amt) {\n  $overlay: dark-light-choose(\n    rgba(var(--primary-rgb), $amt),\n    rgba(var(--secondary-rgb), $amt)\n  );\n  background-image: linear-gradient(to bottom, $overlay 100%, $overlay 100%);\n}\n\n// Visibility\n// --------------------------------------------------\n\n// Only shows hover on non-touch devices\n@mixin hover {\n  .discourse-no-touch & {\n    &:hover,\n    &.btn-hover {\n      @content;\n    }\n  }\n}\n\n@mixin ellipsis {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n@mixin line-clamp($lines) {\n  display: -webkit-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  -webkit-line-clamp: $lines;\n  -moz-box-orient: vertical;\n  -webkit-box-orient: vertical;\n}\n\n//\n// --------------------------------------------------\n\n$vpad: 0.5em;\n$hpad: 0.65em;\n\n// for consistent sizing across inputs, buttons and dropdowns\n@mixin form-item-sizing {\n  border: 1px solid transparent;\n  font-size: var(--font-0);\n  line-height: normal;\n  box-sizing: border-box;\n  padding: $vpad $hpad;\n  .ios-device & {\n    font-size: var(--font-size-ios-input);\n    padding-top: $vpad * 0.8;\n    padding-bottom: $vpad * 0.8;\n  }\n}\n\n@mixin sticky {\n  position: -webkit-sticky;\n  position: sticky;\n}\n\n// Unselectable (avoids unwanted selections with iPad, touch laptops, etc)\n\n@mixin user-select($mode) {\n  -webkit-user-select: $mode;\n  user-select: $mode;\n}\n\n@mixin unselectable {\n  @include user-select(none);\n  cursor: default;\n}\n\n// Stuff we repeat\n@mixin post-aside {\n  border-left: 5px solid var(--primary-300);\n  background-color: var(--blend-primary-secondary-5);\n}\n\n// We still need -webkit for latest iPhone and Safari\n@mixin transform($transforms) {\n  transform: $transforms;\n}\n\n@mixin appearance-none() {\n  // resets default browser styles\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n}\n\n@mixin default-focus() {\n  border-color: var(--tertiary);\n  outline: 2px solid var(--tertiary);\n  outline-offset: -2px;\n}\n\n@mixin fa-rotate($degrees, $rotation) {\n  transform: rotate($degrees);\n}\n\n/// Helper function to easily use an SVG inline in CSS\n/// without encoding it to base64, saving bytes.\n/// It also helps with browser support, especially for IE11.\n///\n/// @author Jakob Eriksen\n/// @link http://codepen.io/jakob-e/pen/doMoML\n/// @param {String} $svg - SVG image to encode\n/// @return {String} - Encoded SVG data uri\n@function svg-uri($svg) {\n  $encoded: \"\";\n  $slice: 2000;\n  $index: 0;\n  $loops: ceil(math.div(str-length($svg), $slice));\n\n  @for $i from 1 through $loops {\n    $chunk: str-slice($svg, $index, $index + $slice - 1);\n    $chunk: str-replace($chunk, '\"', \"'\");\n    $chunk: str-replace($chunk, \"<\", \"%3C\");\n    $chunk: str-replace($chunk, \">\", \"%3E\");\n    $chunk: str-replace($chunk, \"&\", \"%26\");\n    $chunk: str-replace($chunk, \"#\", \"%23\");\n    $encoded: #{$encoded}#{$chunk};\n    $index: $index + $slice;\n  }\n\n  @return url(\"data:image/svg+xml;charset=utf8,#{$encoded}\");\n}\n\n/// Replace `$search` with `$replace` in `$string`\n/// @author Hugo Giraudel\n/// @link http://sassmeister.com/gist/1b4f2da5527830088e4d\n/// @param {String} $string - Initial string\n/// @param {String} $search - Substring to replace\n/// @param {String} $replace ('') - New value\n/// @return {String} - Updated string\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace +\n      str-replace(\n        str-slice($string, $index + str-length($search)),\n        $search,\n        $replace\n      );\n  }\n\n  @return $string;\n}\n\n// SCSS accepts HEX or RGB colors for rgba($color, 0.5)\n// CSS custom properties only accept RGB\n// Example usage:\n\n// --primary-rgb: #{hexToRGB($primary)};\n// ...\n// rgba(var(--primary-low-rgb), 0.5)\n\n@function hexToRGB($hex) {\n  @return red($hex), green($hex), blue($hex);\n}\n\n@function schemeType() {\n  @if is-light-color-scheme() {\n    @return \"light\";\n  } @else {\n    @return \"dark\";\n  }\n}\n\n@function absolute-image-url($path) {\n  // public_image_path is added by the stylesheet importer\n  // it returns a CDN or subfolder path (if applicable).\n  // SCSS will compile (and return the relative path) if public_image_path is missing.\n  @if variable-exists(public_image_path) {\n    @if (str-index(\"#{$path}\", \"/plugins\") == 1) {\n      $plugin_asset_path: str-replace($public_image_path, \"/images\", \"\");\n      @return url(\"#{$plugin_asset_path}#{$path}\");\n    } @else {\n      @return url(\"#{$public_image_path}#{$path}\");\n    }\n  } @else {\n    @return url(\"#{$path}\");\n  }\n}\n\n@mixin mention() {\n  display: inline-block; // https://bugzilla.mozilla.org/show_bug.cgi?id=1656119\n  font-size: 0.93em;\n  font-weight: normal;\n  color: var(--primary);\n  padding: 0 0.4em 0.07em;\n  background: var(--primary-low);\n  border-radius: 0.6em;\n  text-decoration: none;\n}\n"],"file":"spoiler-alert.css"}
